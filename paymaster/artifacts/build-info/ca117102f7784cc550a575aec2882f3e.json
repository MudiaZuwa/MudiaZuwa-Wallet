{"id":"ca117102f7784cc550a575aec2882f3e","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@account-abstraction/contracts/core/BasePaymaster.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/* solhint-disable reason-string */\n\nimport \"@openzeppelin/contracts/access/Ownable2Step.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport \"../interfaces/IPaymaster.sol\";\nimport \"../interfaces/IEntryPoint.sol\";\nimport \"./UserOperationLib.sol\";\n/**\n * Helper class for creating a paymaster.\n * provides helper methods for staking.\n * Validates that the postOp is called only by the entryPoint.\n */\nabstract contract BasePaymaster is IPaymaster, Ownable2Step {\n    IEntryPoint public immutable entryPoint;\n\n    uint256 internal constant PAYMASTER_VALIDATION_GAS_OFFSET = UserOperationLib.PAYMASTER_VALIDATION_GAS_OFFSET;\n    uint256 internal constant PAYMASTER_POSTOP_GAS_OFFSET = UserOperationLib.PAYMASTER_POSTOP_GAS_OFFSET;\n    uint256 internal constant PAYMASTER_DATA_OFFSET = UserOperationLib.PAYMASTER_DATA_OFFSET;\n\n    constructor(IEntryPoint _entryPoint) Ownable(msg.sender) {\n        _validateEntryPointInterface(_entryPoint);\n        entryPoint = _entryPoint;\n    }\n\n    // Sanity check: make sure this EntryPoint was compiled against the same\n    // IEntryPoint of this paymaster\n    function _validateEntryPointInterface(IEntryPoint _entryPoint) internal virtual {\n        require(IERC165(address(_entryPoint)).supportsInterface(type(IEntryPoint).interfaceId), \"IEntryPoint interface mismatch\");\n    }\n\n    /// @inheritdoc IPaymaster\n    function validatePaymasterUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 maxCost\n    ) external override returns (bytes memory context, uint256 validationData) {\n        _requireFromEntryPoint();\n        return _validatePaymasterUserOp(userOp, userOpHash, maxCost);\n    }\n\n    /**\n     * Validate a user operation.\n     * @param userOp     - The user operation.\n     * @param userOpHash - The hash of the user operation.\n     * @param maxCost    - The maximum cost of the user operation.\n     */\n    function _validatePaymasterUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 maxCost\n    ) internal virtual returns (bytes memory context, uint256 validationData);\n\n    /// @inheritdoc IPaymaster\n    function postOp(\n        PostOpMode mode,\n        bytes calldata context,\n        uint256 actualGasCost,\n        uint256 actualUserOpFeePerGas\n    ) external override {\n        _requireFromEntryPoint();\n        _postOp(mode, context, actualGasCost, actualUserOpFeePerGas);\n    }\n\n    /**\n     * Post-operation handler.\n     * (verified to be called only through the entryPoint)\n     * @dev If subclass returns a non-empty context from validatePaymasterUserOp,\n     *      it must also implement this method.\n     * @param mode          - Enum with the following options:\n     *                        opSucceeded - User operation succeeded.\n     *                        opReverted  - User op reverted. The paymaster still has to pay for gas.\n     *                        postOpReverted - never passed in a call to postOp().\n     * @param context       - The context value returned by validatePaymasterUserOp\n     * @param actualGasCost - Actual cost of gas used so far (without this postOp call).\n     * @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n     *                        and maxPriorityFee (and basefee)\n     *                        It is not the same as tx.gasprice, which is what the bundler pays.\n     */\n    function _postOp(\n        PostOpMode mode,\n        bytes calldata context,\n        uint256 actualGasCost,\n        uint256 actualUserOpFeePerGas\n    ) internal virtual {\n        (mode, context, actualGasCost, actualUserOpFeePerGas); // unused params\n        // subclass must override this method if validatePaymasterUserOp returns a context\n        revert(\"must override\");\n    }\n\n    /**\n     * Add a deposit for this paymaster, used for paying for transaction fees.\n     */\n    function deposit() public payable {\n        entryPoint.depositTo{value: msg.value}(address(this));\n    }\n\n    /**\n     * Withdraw value from the deposit.\n     * @param withdrawAddress - Target to send to.\n     * @param amount          - Amount to withdraw.\n     */\n    function withdrawTo(\n        address payable withdrawAddress,\n        uint256 amount\n    ) public onlyOwner {\n        entryPoint.withdrawTo(withdrawAddress, amount);\n    }\n\n    /**\n     * Add stake for this paymaster.\n     * This method can also carry eth value to add to the current stake.\n     * @param unstakeDelaySec - The unstake delay for this paymaster. Can only be increased.\n     */\n    function addStake(uint32 unstakeDelaySec) external payable onlyOwner {\n        entryPoint.addStake{value: msg.value}(unstakeDelaySec);\n    }\n\n    /**\n     * Return current paymaster's deposit on the entryPoint.\n     */\n    function getDeposit() public view returns (uint256) {\n        return entryPoint.balanceOf(address(this));\n    }\n\n    /**\n     * Unlock the stake, in order to withdraw it.\n     * The paymaster can't serve requests once unlocked, until it calls addStake again\n     */\n    function unlockStake() external onlyOwner {\n        entryPoint.unlockStake();\n    }\n\n    /**\n     * Withdraw the entire paymaster's stake.\n     * stake must be unlocked first (and then wait for the unstakeDelay to be over)\n     * @param withdrawAddress - The address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external onlyOwner {\n        entryPoint.withdrawStake(withdrawAddress);\n    }\n\n    /**\n     * Validate the call is made from a valid entrypoint\n     */\n    function _requireFromEntryPoint() internal virtual {\n        require(msg.sender == address(entryPoint), \"Sender not EntryPoint\");\n    }\n}\n"},"@account-abstraction/contracts/core/Helpers.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/* solhint-disable no-inline-assembly */\n\n\n /*\n  * For simulation purposes, validateUserOp (and validatePaymasterUserOp)\n  * must return this value in case of signature failure, instead of revert.\n  */\nuint256 constant SIG_VALIDATION_FAILED = 1;\n\n\n/*\n * For simulation purposes, validateUserOp (and validatePaymasterUserOp)\n * return this value on success.\n */\nuint256 constant SIG_VALIDATION_SUCCESS = 0;\n\n\n/**\n * Returned data from validateUserOp.\n * validateUserOp returns a uint256, which is created by `_packedValidationData` and\n * parsed by `_parseValidationData`.\n * @param aggregator  - address(0) - The account validated the signature by itself.\n *                      address(1) - The account failed to validate the signature.\n *                      otherwise - This is an address of a signature aggregator that must\n *                                  be used to validate the signature.\n * @param validAfter  - This UserOp is valid only after this timestamp.\n * @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\".\n */\nstruct ValidationData {\n    address aggregator;\n    uint48 validAfter;\n    uint48 validUntil;\n}\n\n/**\n * Extract aggregator/sigFailed, validAfter, validUntil.\n * Also convert zero validUntil to type(uint48).max.\n * @param validationData - The packed validation data.\n * @return data - The unpacked in-memory validation data.\n */\nfunction _parseValidationData(\n    uint256 validationData\n) pure returns (ValidationData memory data) {\n    address aggregator = address(uint160(validationData));\n    uint48 validUntil = uint48(validationData >> 160);\n    if (validUntil == 0) {\n        validUntil = type(uint48).max;\n    }\n    uint48 validAfter = uint48(validationData >> (48 + 160));\n    return ValidationData(aggregator, validAfter, validUntil);\n}\n\n/**\n * Helper to pack the return value for validateUserOp.\n * @param data - The ValidationData to pack.\n * @return the packed validation data.\n */\nfunction _packValidationData(\n    ValidationData memory data\n) pure returns (uint256) {\n    return\n        uint160(data.aggregator) |\n        (uint256(data.validUntil) << 160) |\n        (uint256(data.validAfter) << (160 + 48));\n}\n\n/**\n * Helper to pack the return value for validateUserOp, when not using an aggregator.\n * @param sigFailed  - True for signature failure, false for success.\n * @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\".\n * @param validAfter - First timestamp this UserOperation is valid.\n * @return the packed validation data.\n */\nfunction _packValidationData(\n    bool sigFailed,\n    uint48 validUntil,\n    uint48 validAfter\n) pure returns (uint256) {\n    return\n        (sigFailed ?  SIG_VALIDATION_FAILED : SIG_VALIDATION_SUCCESS) |\n        (uint256(validUntil) << 160) |\n        (uint256(validAfter) << (160 + 48));\n}\n\n/**\n * keccak function over calldata.\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n *\n * @param data - the calldata bytes array to perform keccak on.\n * @return ret - the keccak hash of the 'data' array.\n */\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\n        assembly (\"memory-safe\") {\n            let mem := mload(0x40)\n            let len := data.length\n            calldatacopy(mem, data.offset, len)\n            ret := keccak256(mem, len)\n        }\n    }\n\n\n/**\n * The minimum of two numbers.\n * @param a - First number.\n * @param b - Second number.\n * @return - the minimum value.\n */\n    function min(uint256 a, uint256 b) pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n/**\n * standard solidity memory allocation finalization.\n * copied from solidity generated code\n * @param memPointer - The current memory pointer\n * @param allocationSize - Bytes allocated from memPointer.\n */\n    function finalizeAllocation(uint256 memPointer, uint256 allocationSize) pure {\n\n        assembly (\"memory-safe\"){\n            finalize_allocation(memPointer, allocationSize)\n\n            function finalize_allocation(memPtr, size) {\n                let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n                mstore(64, newFreePtr)\n            }\n\n            function round_up_to_mul_of_32(value) -> result {\n                result := and(add(value, 31), not(31))\n            }\n        }\n    }\n"},"@account-abstraction/contracts/core/UserOperationLib.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/* solhint-disable no-inline-assembly */\n\nimport \"../interfaces/PackedUserOperation.sol\";\nimport {calldataKeccak, min} from \"./Helpers.sol\";\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n\n    uint256 public constant PAYMASTER_VALIDATION_GAS_OFFSET = 20;\n    uint256 public constant PAYMASTER_POSTOP_GAS_OFFSET = 36;\n    uint256 public constant PAYMASTER_DATA_OFFSET = 52;\n\n    /**\n     * Relayer/block builder might submit the TX with higher priorityFee,\n     * but the user should not pay above what he signed for.\n     * @param userOp - The user operation data.\n     */\n    function gasPrice(\n        PackedUserOperation calldata userOp\n    ) internal view returns (uint256) {\n        unchecked {\n            (uint256 maxPriorityFeePerGas, uint256 maxFeePerGas) = unpackUints(userOp.gasFees);\n            return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n        }\n    }\n\n    bytes32 internal constant PACKED_USEROP_TYPEHASH =\n    keccak256(\n        \"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)\"\n    );\n\n    /**\n     * Pack the user operation data into bytes for hashing.\n     * @param userOp - The user operation data.\n     * @param overrideInitCodeHash - If set, encode this instead of the initCode field in the userOp.\n     */\n    function encode(\n        PackedUserOperation calldata userOp,\n        bytes32 overrideInitCodeHash\n    ) internal pure returns (bytes memory ret) {\n        address sender = userOp.sender;\n        uint256 nonce = userOp.nonce;\n        bytes32 hashInitCode = overrideInitCodeHash != 0 ? overrideInitCodeHash : calldataKeccak(userOp.initCode);\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\n        bytes32 accountGasLimits = userOp.accountGasLimits;\n        uint256 preVerificationGas = userOp.preVerificationGas;\n        bytes32 gasFees = userOp.gasFees;\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\n\n        return abi.encode(\n            UserOperationLib.PACKED_USEROP_TYPEHASH,\n            sender, nonce,\n            hashInitCode, hashCallData,\n            accountGasLimits, preVerificationGas, gasFees,\n            hashPaymasterAndData\n        );\n    }\n\n    function unpackUints(\n        bytes32 packed\n    ) internal pure returns (uint256 high128, uint256 low128) {\n        return (unpackHigh128(packed), unpackLow128(packed));\n    }\n\n    // Unpack just the high 128-bits from a packed value\n    function unpackHigh128(bytes32 packed) internal pure returns (uint256) {\n        return uint256(packed) >> 128;\n    }\n\n    // Unpack just the low 128-bits from a packed value\n    function unpackLow128(bytes32 packed) internal pure returns (uint256) {\n        return uint128(uint256(packed));\n    }\n\n    function unpackMaxPriorityFeePerGas(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackHigh128(userOp.gasFees);\n    }\n\n    function unpackMaxFeePerGas(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackLow128(userOp.gasFees);\n    }\n\n    function unpackVerificationGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackHigh128(userOp.accountGasLimits);\n    }\n\n    function unpackCallGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackLow128(userOp.accountGasLimits);\n    }\n\n    function unpackPaymasterVerificationGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return uint128(bytes16(userOp.paymasterAndData[PAYMASTER_VALIDATION_GAS_OFFSET : PAYMASTER_POSTOP_GAS_OFFSET]));\n    }\n\n    function unpackPostOpGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return uint128(bytes16(userOp.paymasterAndData[PAYMASTER_POSTOP_GAS_OFFSET : PAYMASTER_DATA_OFFSET]));\n    }\n\n    function unpackPaymasterStaticFields(\n        bytes calldata paymasterAndData\n    ) internal pure returns (address paymaster, uint256 validationGasLimit, uint256 postOpGasLimit) {\n        return (\n            address(bytes20(paymasterAndData[: PAYMASTER_VALIDATION_GAS_OFFSET])),\n            uint128(bytes16(paymasterAndData[PAYMASTER_VALIDATION_GAS_OFFSET : PAYMASTER_POSTOP_GAS_OFFSET])),\n            uint128(bytes16(paymasterAndData[PAYMASTER_POSTOP_GAS_OFFSET : PAYMASTER_DATA_OFFSET]))\n        );\n    }\n\n    /**\n     * Hash the user operation data.\n     * @param userOp - The user operation data.\n     * @param overrideInitCodeHash - If set, the initCode hash will be replaced with this value just for UserOp hashing.\n     */\n    function hash(\n        PackedUserOperation calldata userOp,\n        bytes32 overrideInitCodeHash\n    ) internal pure returns (bytes32) {\n        return keccak256(encode(userOp, overrideInitCodeHash));\n    }\n}\n"},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"./PackedUserOperation.sol\";\n\n/**\n * Aggregated Signatures validator.\n */\ninterface IAggregator {\n    /**\n     * Validate an aggregated signature.\n     * Reverts if the aggregated signature does not match the given list of operations.\n     * @param userOps   - An array of UserOperations to validate the signature for.\n     * @param signature - The aggregated signature.\n     */\n    function validateSignatures(\n        PackedUserOperation[] calldata userOps,\n        bytes calldata signature\n    ) external;\n\n    /**\n     * Validate the signature of a single userOp.\n     * This method should be called by bundler after EntryPointSimulation.simulateValidation() returns\n     * the aggregator this account uses.\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n     * @param userOp        - The userOperation received from the user.\n     * @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n     *                        (usually empty, unless account and aggregator support some kind of \"multisig\".\n     */\n    function validateUserOpSignature(\n        PackedUserOperation calldata userOp\n    ) external view returns (bytes memory sigForUserOp);\n\n    /**\n     * Aggregate multiple signatures into a single value.\n     * This method is called off-chain to calculate the signature to pass with handleOps()\n     * bundler MAY use optimized custom code to perform this aggregation.\n     * @param userOps              - An array of UserOperations to collect the signatures from.\n     * @return aggregatedSignature - The aggregated signature.\n     */\n    function aggregateSignatures(\n        PackedUserOperation[] calldata userOps\n    ) external view returns (bytes memory aggregatedSignature);\n}\n"},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"content":"/**\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\n ** Only one instance required on each chain.\n **/\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"./PackedUserOperation.sol\";\nimport \"./IStakeManager.sol\";\nimport \"./IAggregator.sol\";\nimport \"./INonceManager.sol\";\nimport \"./ISenderCreator.sol\";\n\ninterface IEntryPoint is IStakeManager, INonceManager {\n    /***\n     * An event emitted after each successful request.\n     * @param userOpHash    - Unique identifier for the request (hash its entire content, except signature).\n     * @param sender        - The account that generates this request.\n     * @param paymaster     - If non-null, the paymaster that pays for this request.\n     * @param nonce         - The nonce value from the request.\n     * @param success       - True if the sender transaction succeeded, false if reverted.\n     * @param actualGasCost - Actual amount paid (by account or paymaster) for this UserOperation.\n     * @param actualGasUsed - Total gas used by this UserOperation (including preVerification, creation,\n     *                        validation and execution).\n     */\n    event UserOperationEvent(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        address indexed paymaster,\n        uint256 nonce,\n        bool success,\n        uint256 actualGasCost,\n        uint256 actualGasUsed\n    );\n\n    /**\n     * Account \"sender\" was deployed.\n     * @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n     * @param sender     - The account that is deployed\n     * @param factory    - The factory used to deploy this account (in the initCode)\n     * @param paymaster  - The paymaster used by this UserOp\n     */\n    event AccountDeployed(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        address factory,\n        address paymaster\n    );\n\n    /**\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     * @param revertReason - The return bytes from the reverted \"callData\" call.\n     */\n    event UserOperationRevertReason(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce,\n        bytes revertReason\n    );\n\n    /**\n     * An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     * @param revertReason - The return bytes from the reverted call to \"postOp\".\n     */\n    event PostOpRevertReason(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce,\n        bytes revertReason\n    );\n\n    /**\n     * UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     */\n    event UserOperationPrefundTooLow(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce\n    );\n\n    /**\n     * An event emitted by handleOps() and handleAggregatedOps(), before starting the execution loop.\n     * Any event emitted before this event, is part of the validation.\n     */\n    event BeforeExecution();\n\n    /**\n     * Signature aggregator used by the following UserOperationEvents within this bundle.\n     * @param aggregator - The aggregator used for the following UserOperationEvents.\n     */\n    event SignatureAggregatorChanged(address indexed aggregator);\n\n    /**\n     * A custom revert error of handleOps andhandleAggregatedOps, to identify the offending op.\n     * Should be caught in off-chain handleOps/handleAggregatedOps simulation and not happen on-chain.\n     * Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n     * NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n     * @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n     *                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n     *                  so a failure can be attributed to the correct entity.\n     */\n    error FailedOp(uint256 opIndex, string reason);\n\n    /**\n     * A custom revert error of handleOps and handleAggregatedOps, to report a revert by account or paymaster.\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n     * @param reason  - Revert reason. see FailedOp(uint256,string), above\n     * @param inner   - data from inner cought revert reason\n     * @dev note that inner is truncated to 2048 bytes\n     */\n    error FailedOpWithRevert(uint256 opIndex, string reason, bytes inner);\n\n    error PostOpReverted(bytes returnData);\n\n    /**\n     * Error case when a signature aggregator fails to verify the aggregated signature it had created.\n     * @param aggregator The aggregator that failed to verify the signature\n     */\n    error SignatureValidationFailed(address aggregator);\n\n    // Return value of getSenderAddress.\n    error SenderAddressResult(address sender);\n\n    // UserOps handled, per aggregator.\n    struct UserOpsPerAggregator {\n        PackedUserOperation[] userOps;\n        // Aggregator address\n        IAggregator aggregator;\n        // Aggregated signature\n        bytes signature;\n    }\n\n    /**\n     * Execute a batch of UserOperations.\n     * No signature aggregator is used.\n     * If any account requires an aggregator (that is, it returned an aggregator when\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\n     * @param ops         - The operations to execute.\n     * @param beneficiary - The address to receive the fees.\n     */\n    function handleOps(\n        PackedUserOperation[] calldata ops,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * Execute a batch of UserOperation with Aggregators\n     * @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n     * @param beneficiary      - The address to receive the fees.\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * Generate a request Id - unique identifier for this request.\n     * The request ID is a hash over the content of the userOp (except the signature), entrypoint address, chainId and (optionally) 7702 delegate address\n     * @param userOp - The user operation to generate the request ID for.\n     * @return hash the hash of this UserOperation\n     */\n    function getUserOpHash(\n        PackedUserOperation calldata userOp\n    ) external view returns (bytes32);\n\n    /**\n     * Gas and return values during simulation.\n     * @param preOpGas         - The gas used for validation (including preValidationGas)\n     * @param prefund          - The required prefund for this operation\n     * @param accountValidationData   - returned validationData from account.\n     * @param paymasterValidationData - return validationData from paymaster.\n     * @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)\n     */\n    struct ReturnInfo {\n        uint256 preOpGas;\n        uint256 prefund;\n        uint256 accountValidationData;\n        uint256 paymasterValidationData;\n        bytes paymasterContext;\n    }\n\n    /**\n     * Get counterfactual sender address.\n     * Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n     * This method always revert, and returns the address in SenderAddressResult error.\n     * @notice this method cannot be used for EIP-7702 derived contracts.\n     *\n     * @param initCode - The constructor code to be passed into the UserOperation.\n     */\n    function getSenderAddress(bytes memory initCode) external;\n\n    error DelegateAndRevert(bool success, bytes ret);\n\n    /**\n     * Helper method for dry-run testing.\n     * @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\n     *  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\n     *  actual EntryPoint code is less convenient.\n     * @param target a target contract to make a delegatecall from entrypoint\n     * @param data data to pass to target in a delegatecall\n     */\n    function delegateAndRevert(address target, bytes calldata data) external;\n\n    /**\n     * @notice Retrieves the immutable SenderCreator contract which is responsible for deployment of sender contracts.\n     */\n    function senderCreator() external view returns (ISenderCreator);\n}\n"},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ninterface INonceManager {\n\n    /**\n     * Return the next nonce for this sender.\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n     * But UserOp with different keys can come with arbitrary order.\n     *\n     * @param sender the account address\n     * @param key the high 192 bit of the nonce\n     * @return nonce a full nonce to pass for next UserOp with this sender.\n     */\n    function getNonce(address sender, uint192 key)\n    external view returns (uint256 nonce);\n\n    /**\n     * Manually increment the nonce of the sender.\n     * This method is exposed just for completeness..\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\n     * as the EntryPoint will update the nonce regardless.\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n     * UserOperations will not pay extra for the first transaction with a given key.\n     *\n     * @param key - the \"nonce key\" to increment the \"nonce sequence\" for.\n     */\n    function incrementNonce(uint192 key) external;\n}\n"},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"./PackedUserOperation.sol\";\n\n/**\n * The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n * A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\n */\ninterface IPaymaster {\n    enum PostOpMode {\n        // User op succeeded.\n        opSucceeded,\n        // User op reverted. Still has to pay for gas.\n        opReverted,\n        // Only used internally in the EntryPoint (cleanup after postOp reverts). Never calling paymaster with this value\n        postOpReverted\n    }\n\n    /**\n     * Payment validation: check if paymaster agrees to pay.\n     * Must verify sender is the entryPoint.\n     * Revert to reject this request.\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n     * @param userOp          - The user operation.\n     * @param userOpHash      - Hash of the user's request data.\n     * @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n     * @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n     * @return validationData - Signature and time-range of this operation, encoded the same as the return\n     *                          value of validateUserOperation.\n     *                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n     *                                                    other values are invalid for paymaster.\n     *                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\n     *                          <6-byte> validAfter - first timestamp this operation is valid\n     *                          Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validatePaymasterUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 maxCost\n    ) external returns (bytes memory context, uint256 validationData);\n\n    /**\n     * Post-operation handler.\n     * Must verify sender is the entryPoint.\n     * @param mode          - Enum with the following options:\n     *                        opSucceeded - User operation succeeded.\n     *                        opReverted  - User op reverted. The paymaster still has to pay for gas.\n     *                        postOpReverted - never passed in a call to postOp().\n     * @param context       - The context value returned by validatePaymasterUserOp\n     * @param actualGasCost - Actual cost of gas used so far (without this postOp call).\n     * @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n     *                        and maxPriorityFee (and basefee)\n     *                        It is not the same as tx.gasprice, which is what the bundler pays.\n     */\n    function postOp(\n        PostOpMode mode,\n        bytes calldata context,\n        uint256 actualGasCost,\n        uint256 actualUserOpFeePerGas\n    ) external;\n}\n"},"@account-abstraction/contracts/interfaces/ISenderCreator.sol":{"content":"\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ninterface ISenderCreator {\n    /**\n     * @dev Creates a new sender contract.\n     * @return sender Address of the newly created sender contract.\n     */\n    function createSender(bytes calldata initCode) external returns (address sender);\n\n    /**\n     * Use initCallData to initialize an EIP-7702 account.\n     * The caller is the EntryPoint contract and it is already verified to be an EIP-7702 account.\n     * Note: Can be called multiple times as long as an appropriate initCode is supplied\n     *\n     * @param sender - the 'sender' EIP-7702 account to be initialized.\n     * @param initCallData - the call data to be passed to the sender account call.\n     */\n    function initEip7702Sender(address sender, bytes calldata initCallData) external;\n}\n"},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/**\n * Manage deposits and stakes.\n * Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n * Stake is value locked for at least \"unstakeDelay\" by the staked entity.\n */\ninterface IStakeManager {\n    event Deposited(address indexed account, uint256 totalDeposit);\n\n    event Withdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    // Emitted when stake or unstake delay are modified.\n    event StakeLocked(\n        address indexed account,\n        uint256 totalStaked,\n        uint256 unstakeDelaySec\n    );\n\n    // Emitted once a stake is scheduled for withdrawal.\n    event StakeUnlocked(address indexed account, uint256 withdrawTime);\n\n    event StakeWithdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /**\n     * @param deposit         - The entity's deposit.\n     * @param staked          - True if this entity is staked.\n     * @param stake           - Actual amount of ether staked for this entity.\n     * @param unstakeDelaySec - Minimum delay to withdraw the stake.\n     * @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n     * @dev Sizes were chosen so that deposit fits into one cell (used during handleOp)\n     *      and the rest fit into a 2nd cell (used during stake/unstake)\n     *      - 112 bit allows for 10^15 eth\n     *      - 48 bit for full timestamp\n     *      - 32 bit allows 150 years for unstake delay\n     */\n    struct DepositInfo {\n        uint256 deposit;\n        bool staked;\n        uint112 stake;\n        uint32 unstakeDelaySec;\n        uint48 withdrawTime;\n    }\n\n    // API struct used by getStakeInfo and simulateValidation.\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelaySec;\n    }\n\n    /**\n     * Get deposit info.\n     * @param account - The account to query.\n     * @return info   - Full deposit information of given account.\n     */\n    function getDepositInfo(\n        address account\n    ) external view returns (DepositInfo memory info);\n\n    /**\n     * Get account balance.\n     * @param account - The account to query.\n     * @return        - The deposit (for gas payment) of the account.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * Add to the deposit of the given account.\n     * @param account - The account to add to.\n     */\n    function depositTo(address account) external payable;\n\n    /**\n     * Add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param unstakeDelaySec - The new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 unstakeDelaySec) external payable;\n\n    /**\n     * Attempt to unlock the stake.\n     * The value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external;\n\n    /**\n     * Withdraw from the (unlocked) stake.\n     * Must first call unlockStake and wait for the unstakeDelay to pass.\n     * @param withdrawAddress - The address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external;\n\n    /**\n     * Withdraw from the deposit.\n     * @param withdrawAddress - The address to send withdrawn value.\n     * @param withdrawAmount  - The amount to withdraw.\n     */\n    function withdrawTo(\n        address payable withdrawAddress,\n        uint256 withdrawAmount\n    ) external;\n}\n"},"@account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/**\n * User Operation struct\n * @param sender                - The sender account of this request.\n * @param nonce                 - Unique value the sender uses to verify it is not a replay.\n * @param initCode              - If set, the account contract will be created by this constructor\n * @param callData              - The method call to execute on this account.\n * @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\n * @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n *                                Covers batch overhead.\n * @param gasFees               - packed gas fields maxPriorityFeePerGas and maxFeePerGas - Same as EIP-1559 gas parameters.\n * @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\n *                                The paymaster will pay for the transaction instead of the sender.\n * @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID.\n */\nstruct PackedUserOperation {\n    address sender;\n    uint256 nonce;\n    bytes initCode;\n    bytes callData;\n    bytes32 accountGasLimits;\n    uint256 preVerificationGas;\n    bytes32 gasFees;\n    bytes paymasterAndData;\n    bytes signature;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable2Step.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/Ownable2Step.sol)\n\npragma solidity ^0.8.20;\n\nimport {Ownable} from \"./Ownable.sol\";\n\n/**\n * @dev Contract module which provides access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This extension of the {Ownable} contract includes a two-step mechanism to transfer\n * ownership, where the new owner must call {acceptOwnership} in order to replace the\n * old one. This can help prevent common mistakes, such as transfers of ownership to\n * incorrect accounts, or to contracts that are unable to interact with the\n * permission system.\n *\n * The initial owner is specified at deployment time in the constructor for `Ownable`. This\n * can later be changed with {transferOwnership} and {acceptOwnership}.\n *\n * This module is used through inheritance. It will make available all functions\n * from parent (Ownable).\n */\nabstract contract Ownable2Step is Ownable {\n    address private _pendingOwner;\n\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Returns the address of the pending owner.\n     */\n    function pendingOwner() public view virtual returns (address) {\n        return _pendingOwner;\n    }\n\n    /**\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n     * Can only be called by the current owner.\n     *\n     * Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\n     */\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        _pendingOwner = newOwner;\n        emit OwnershipTransferStarted(owner(), newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual override {\n        delete _pendingOwner;\n        super._transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev The new owner accepts the ownership transfer.\n     */\n    function acceptOwnership() public virtual {\n        address sender = _msgSender();\n        if (pendingOwner() != sender) {\n            revert OwnableUnauthorizedAccount(sender);\n        }\n        _transferOwnership(sender);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/FixedRatePaymaster.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"@account-abstraction/contracts/core/BasePaymaster.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\";\r\n\r\ncontract FixedRatePaymaster is BasePaymaster {\r\n    using SafeERC20 for IERC20;\r\n\r\n    IERC20 public immutable token;     // ERC20 used for payment\r\n    uint256 public immutable rate;     // tokens per 1 wei of gas\r\n\r\n    event TokensCharged(address indexed sender, uint256 amount, uint256 gasUsed);\r\n    event TokensWithdrawn(address indexed to, uint256 amount);\r\n\r\n    constructor(\r\n        IEntryPoint _entryPoint,\r\n        IERC20 _token,\r\n        uint256 _rate\r\n    ) BasePaymaster(_entryPoint) {\r\n        token = _token;\r\n        rate = _rate;\r\n        // owner is already handled by Ownable\r\n    }\r\n\r\n    // calculate required token amount (upper bound)\r\n  function _validatePaymasterUserOp(\r\n    PackedUserOperation calldata userOp,\r\n    bytes32, /* userOpHash */\r\n    uint256 requiredPreFund\r\n) internal view override returns (bytes memory context, uint256 validationData) {\r\n\r\n        uint256 tokenRequired = requiredPreFund * rate;\r\n        address sender = userOp.sender;\r\n\r\n        // check allowance + balance\r\n        if (token.allowance(sender, address(this)) < tokenRequired) {\r\n            return (\"\", 1); // fail validation\r\n        }\r\n        if (token.balanceOf(sender) < tokenRequired) {\r\n            return (\"\", 1); // fail validation\r\n        }\r\n\r\n        // pass context to postOp\r\n        return (abi.encode(sender), 0);\r\n    }\r\n\r\n    // after tx is executed, actually pull the tokens\r\n  function _postOp(\r\n    PostOpMode,\r\n    bytes calldata context,\r\n    uint256 actualGasCost,\r\n    uint256 /* actualUserOpFeePerGas */\r\n) internal override {\r\n    address sender = abi.decode(context, (address));\r\n    uint256 tokensToCharge = actualGasCost * rate;\r\n\r\n    token.safeTransferFrom(sender, address(this), tokensToCharge);\r\n\r\n    emit TokensCharged(sender, tokensToCharge, actualGasCost);\r\n}\r\n\r\n    // allow owner to withdraw tokens\r\n    function withdrawTokens(address to) external onlyOwner {\r\n        uint256 bal = token.balanceOf(address(this));\r\n        token.safeTransfer(to, bal);\r\n        emit TokensWithdrawn(to, bal);\r\n    }\r\n\r\n    // allow owner to top-up ETH for gas\r\n    receive() external payable {}\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@account-abstraction/contracts/core/BasePaymaster.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/core/BasePaymaster.sol","exportedSymbols":{"BasePaymaster":[270],"IAggregator":[829],"IERC165":[2123],"IEntryPoint":[1014],"INonceManager":[1033],"IPaymaster":[1070],"ISenderCreator":[1089],"IStakeManager":[1193],"Ownable":[1363],"Ownable2Step":[1449],"PackedUserOperation":[1215],"UserOperationLib":[795],"calldataKeccak":[431],"min":[449]},"id":271,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:0"},{"absolutePath":"@openzeppelin/contracts/access/Ownable2Step.sol","file":"@openzeppelin/contracts/access/Ownable2Step.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":1450,"src":"95:57:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":2124,"src":"153:65:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IPaymaster.sol","file":"../interfaces/IPaymaster.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":1071,"src":"219:38:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":1015,"src":"258:39:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/core/UserOperationLib.sol","file":"./UserOperationLib.sol","id":6,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":796,"src":"298:32:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":8,"name":"IPaymaster","nameLocations":["519:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":1070,"src":"519:10:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"519:10:0"},{"baseName":{"id":10,"name":"Ownable2Step","nameLocations":["531:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"531:12:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"531:12:0"}],"canonicalName":"BasePaymaster","contractDependencies":[],"contractKind":"contract","documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"331:152:0","text":" Helper class for creating a paymaster.\n provides helper methods for staking.\n Validates that the postOp is called only by the entryPoint."},"fullyImplemented":false,"id":270,"linearizedBaseContracts":[270,1449,1363,2111,1070],"name":"BasePaymaster","nameLocation":"502:13:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b0d691fe","id":14,"mutability":"immutable","name":"entryPoint","nameLocation":"579:10:0","nodeType":"VariableDeclaration","scope":270,"src":"550:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"},"typeName":{"id":13,"nodeType":"UserDefinedTypeName","pathNode":{"id":12,"name":"IEntryPoint","nameLocations":["550:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":1014,"src":"550:11:0"},"referencedDeclaration":1014,"src":"550:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}},"visibility":"public"},{"constant":true,"id":18,"mutability":"constant","name":"PAYMASTER_VALIDATION_GAS_OFFSET","nameLocation":"622:31:0","nodeType":"VariableDeclaration","scope":270,"src":"596:108:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15,"name":"uint256","nodeType":"ElementaryTypeName","src":"596:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"id":16,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"656:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$795_$","typeString":"type(library UserOperationLib)"}},"id":17,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"673:31:0","memberName":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"MemberAccess","referencedDeclaration":469,"src":"656:48:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":true,"id":22,"mutability":"constant","name":"PAYMASTER_POSTOP_GAS_OFFSET","nameLocation":"736:27:0","nodeType":"VariableDeclaration","scope":270,"src":"710:100:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19,"name":"uint256","nodeType":"ElementaryTypeName","src":"710:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"id":20,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"766:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$795_$","typeString":"type(library UserOperationLib)"}},"id":21,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"783:27:0","memberName":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"MemberAccess","referencedDeclaration":472,"src":"766:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":true,"id":26,"mutability":"constant","name":"PAYMASTER_DATA_OFFSET","nameLocation":"842:21:0","nodeType":"VariableDeclaration","scope":270,"src":"816:88:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"816:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"id":24,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"866:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$795_$","typeString":"type(library UserOperationLib)"}},"id":25,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"883:21:0","memberName":"PAYMASTER_DATA_OFFSET","nodeType":"MemberAccess","referencedDeclaration":475,"src":"866:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"body":{"id":44,"nodeType":"Block","src":"968:92:0","statements":[{"expression":{"arguments":[{"id":37,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1007:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}],"id":36,"name":"_validateEntryPointInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"978:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IEntryPoint_$1014_$returns$__$","typeString":"function (contract IEntryPoint)"}},"id":38,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"978:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":39,"nodeType":"ExpressionStatement","src":"978:41:0"},{"expression":{"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":40,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"1029:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":41,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1042:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}},"src":"1029:24:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}},"id":43,"nodeType":"ExpressionStatement","src":"1029:24:0"}]},"id":45,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":32,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"956:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"960:6:0","memberName":"sender","nodeType":"MemberAccess","src":"956:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":34,"kind":"baseConstructorSpecifier","modifierName":{"id":31,"name":"Ownable","nameLocations":["948:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1363,"src":"948:7:0"},"nodeType":"ModifierInvocation","src":"948:19:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"_entryPoint","nameLocation":"935:11:0","nodeType":"VariableDeclaration","scope":45,"src":"923:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"},"typeName":{"id":28,"nodeType":"UserDefinedTypeName","pathNode":{"id":27,"name":"IEntryPoint","nameLocations":["923:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":1014,"src":"923:11:0"},"referencedDeclaration":1014,"src":"923:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"922:25:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[],"src":"968:0:0"},"scope":270,"src":"911:149:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1260:138:0","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"arguments":[{"id":60,"name":"IEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"1331:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEntryPoint_$1014_$","typeString":"type(contract IEntryPoint)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IEntryPoint_$1014_$","typeString":"type(contract IEntryPoint)"}],"id":59,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1326:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":61,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1326:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IEntryPoint_$1014","typeString":"type(contract IEntryPoint)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1344:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"1326:29:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"arguments":[{"arguments":[{"id":55,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1294:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}],"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1286:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"1286:7:0","typeDescriptions":{}}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1286:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":52,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"1278:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2123_$","typeString":"type(contract IERC165)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1278:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC165_$2123","typeString":"contract IERC165"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1308:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2122,"src":"1278:47:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view external returns (bool)"}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1278:78:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49456e747279506f696e7420696e74657266616365206d69736d61746368","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1358:32:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8","typeString":"literal_string \"IEntryPoint interface mismatch\""},"value":"IEntryPoint interface mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8","typeString":"literal_string \"IEntryPoint interface mismatch\""}],"id":51,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1270:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1270:121:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1270:121:0"}]},"id":68,"implemented":true,"kind":"function","modifiers":[],"name":"_validateEntryPointInterface","nameLocation":"1189:28:0","nodeType":"FunctionDefinition","parameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"_entryPoint","nameLocation":"1230:11:0","nodeType":"VariableDeclaration","scope":68,"src":"1218:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"},"typeName":{"id":47,"nodeType":"UserDefinedTypeName","pathNode":{"id":46,"name":"IEntryPoint","nameLocations":["1218:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":1014,"src":"1218:11:0"},"referencedDeclaration":1014,"src":"1218:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1217:25:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[],"src":"1260:0:0"},"scope":270,"src":"1180:218:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1056],"body":{"id":93,"nodeType":"Block","src":"1645:111:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1655:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"1655:24:0"},{"expression":{"arguments":[{"id":88,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"1721:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"id":89,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"1729:10:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":90,"name":"maxCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"1741:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":87,"name":"_validatePaymasterUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"1696:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_PackedUserOperation_$1215_calldata_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"function (struct PackedUserOperation calldata,bytes32,uint256) returns (bytes memory,uint256)"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"functionReturnParameters":83,"id":92,"nodeType":"Return","src":"1689:60:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1404:26:0","text":"@inheritdoc IPaymaster"},"functionSelector":"52b7512c","id":94,"implemented":true,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"1444:23:0","nodeType":"FunctionDefinition","overrides":{"id":78,"nodeType":"OverrideSpecifier","overrides":[],"src":"1581:8:0"},"parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"userOp","nameLocation":"1506:6:0","nodeType":"VariableDeclaration","scope":94,"src":"1477:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":71,"nodeType":"UserDefinedTypeName","pathNode":{"id":70,"name":"PackedUserOperation","nameLocations":["1477:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"1477:19:0"},"referencedDeclaration":1215,"src":"1477:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":74,"mutability":"mutable","name":"userOpHash","nameLocation":"1530:10:0","nodeType":"VariableDeclaration","scope":94,"src":"1522:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":73,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1522:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"maxCost","nameLocation":"1558:7:0","nodeType":"VariableDeclaration","scope":94,"src":"1550:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"1550:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1467:104:0"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"mutability":"mutable","name":"context","nameLocation":"1612:7:0","nodeType":"VariableDeclaration","scope":94,"src":"1599:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":79,"name":"bytes","nodeType":"ElementaryTypeName","src":"1599:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":82,"mutability":"mutable","name":"validationData","nameLocation":"1629:14:0","nodeType":"VariableDeclaration","scope":94,"src":"1621:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1598:46:0"},"scope":270,"src":"1435:321:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"1762:218:0","text":" Validate a user operation.\n @param userOp     - The user operation.\n @param userOpHash - The hash of the user operation.\n @param maxCost    - The maximum cost of the user operation."},"id":109,"implemented":false,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"1994:24:0","nodeType":"FunctionDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"userOp","nameLocation":"2057:6:0","nodeType":"VariableDeclaration","scope":109,"src":"2028:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":97,"nodeType":"UserDefinedTypeName","pathNode":{"id":96,"name":"PackedUserOperation","nameLocations":["2028:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"2028:19:0"},"referencedDeclaration":1215,"src":"2028:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"userOpHash","nameLocation":"2081:10:0","nodeType":"VariableDeclaration","scope":109,"src":"2073:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":99,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"maxCost","nameLocation":"2109:7:0","nodeType":"VariableDeclaration","scope":109,"src":"2101:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2101:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2018:104:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"mutability":"mutable","name":"context","nameLocation":"2162:7:0","nodeType":"VariableDeclaration","scope":109,"src":"2149:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":104,"name":"bytes","nodeType":"ElementaryTypeName","src":"2149:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":107,"mutability":"mutable","name":"validationData","nameLocation":"2179:14:0","nodeType":"VariableDeclaration","scope":109,"src":"2171:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":106,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2148:46:0"},"scope":270,"src":"1985:210:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1069],"body":{"id":133,"nodeType":"Block","src":"2399:111:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":123,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"2409:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2409:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":125,"nodeType":"ExpressionStatement","src":"2409:24:0"},{"expression":{"arguments":[{"id":127,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"2451:4:0","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1041","typeString":"enum IPaymaster.PostOpMode"}},{"id":128,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"2457:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":129,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2466:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":130,"name":"actualUserOpFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2481:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PostOpMode_$1041","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":126,"name":"_postOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"2443:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_PostOpMode_$1041_$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (enum IPaymaster.PostOpMode,bytes calldata,uint256,uint256)"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":132,"nodeType":"ExpressionStatement","src":"2443:60:0"}]},"documentation":{"id":110,"nodeType":"StructuredDocumentation","src":"2201:26:0","text":"@inheritdoc IPaymaster"},"functionSelector":"7c627b21","id":134,"implemented":true,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"2241:6:0","nodeType":"FunctionDefinition","overrides":{"id":121,"nodeType":"OverrideSpecifier","overrides":[],"src":"2390:8:0"},"parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"mode","nameLocation":"2268:4:0","nodeType":"VariableDeclaration","scope":134,"src":"2257:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1041","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":112,"nodeType":"UserDefinedTypeName","pathNode":{"id":111,"name":"PostOpMode","nameLocations":["2257:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":1041,"src":"2257:10:0"},"referencedDeclaration":1041,"src":"2257:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1041","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"context","nameLocation":"2297:7:0","nodeType":"VariableDeclaration","scope":134,"src":"2282:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":114,"name":"bytes","nodeType":"ElementaryTypeName","src":"2282:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"actualGasCost","nameLocation":"2322:13:0","nodeType":"VariableDeclaration","scope":134,"src":"2314:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"2314:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"actualUserOpFeePerGas","nameLocation":"2353:21:0","nodeType":"VariableDeclaration","scope":134,"src":"2345:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2345:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2247:133:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[],"src":"2399:0:0"},"scope":270,"src":"2232:278:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":157,"nodeType":"Block","src":"3689:211:0","statements":[{"expression":{"components":[{"id":147,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"3700:4:0","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1041","typeString":"enum IPaymaster.PostOpMode"}},{"id":148,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"3706:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":149,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"3715:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":150,"name":"actualUserOpFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"3730:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3699:53:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_PostOpMode_$1041_$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint256_$","typeString":"tuple(enum IPaymaster.PostOpMode,bytes calldata,uint256,uint256)"}},"id":152,"nodeType":"ExpressionStatement","src":"3699:53:0"},{"expression":{"arguments":[{"hexValue":"6d757374206f76657272696465","id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3877:15:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""},"value":"must override"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""}],"id":153,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3870:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3870:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"ExpressionStatement","src":"3870:23:0"}]},"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"2516:1001:0","text":" Post-operation handler.\n (verified to be called only through the entryPoint)\n @dev If subclass returns a non-empty context from validatePaymasterUserOp,\n      it must also implement this method.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. The paymaster still has to pay for gas.\n                        postOpReverted - never passed in a call to postOp().\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual cost of gas used so far (without this postOp call).\n @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n                        and maxPriorityFee (and basefee)\n                        It is not the same as tx.gasprice, which is what the bundler pays."},"id":158,"implemented":true,"kind":"function","modifiers":[],"name":"_postOp","nameLocation":"3531:7:0","nodeType":"FunctionDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"mode","nameLocation":"3559:4:0","nodeType":"VariableDeclaration","scope":158,"src":"3548:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1041","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":137,"nodeType":"UserDefinedTypeName","pathNode":{"id":136,"name":"PostOpMode","nameLocations":["3548:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":1041,"src":"3548:10:0"},"referencedDeclaration":1041,"src":"3548:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1041","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":140,"mutability":"mutable","name":"context","nameLocation":"3588:7:0","nodeType":"VariableDeclaration","scope":158,"src":"3573:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":139,"name":"bytes","nodeType":"ElementaryTypeName","src":"3573:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"actualGasCost","nameLocation":"3613:13:0","nodeType":"VariableDeclaration","scope":158,"src":"3605:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"3605:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":144,"mutability":"mutable","name":"actualUserOpFeePerGas","nameLocation":"3644:21:0","nodeType":"VariableDeclaration","scope":158,"src":"3636:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"3636:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:133:0"},"returnParameters":{"id":146,"nodeType":"ParameterList","parameters":[],"src":"3689:0:0"},"scope":270,"src":"3522:378:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":174,"nodeType":"Block","src":"4035:70:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":170,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4092:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$270","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$270","typeString":"contract BasePaymaster"}],"id":169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4084:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:0","typeDescriptions":{}}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":162,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"4045:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:9:0","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":1168,"src":"4045:20:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":165,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4073:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4077:5:0","memberName":"value","nodeType":"MemberAccess","src":"4073:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4045:38:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4045:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":173,"nodeType":"ExpressionStatement","src":"4045:53:0"}]},"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"3906:90:0","text":" Add a deposit for this paymaster, used for paying for transaction fees."},"functionSelector":"d0e30db0","id":175,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"4010:7:0","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"4017:2:0"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"4035:0:0"},"scope":270,"src":"4001:104:0","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"4378:63:0","statements":[{"expression":{"arguments":[{"id":188,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"4410:15:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":189,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"4427:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":185,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"4388:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4399:10:0","memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":1192,"src":"4388:21:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4388:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"ExpressionStatement","src":"4388:46:0"}]},"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"4111:154:0","text":" Withdraw value from the deposit.\n @param withdrawAddress - Target to send to.\n @param amount          - Amount to withdraw."},"functionSelector":"205c2878","id":193,"implemented":true,"kind":"function","modifiers":[{"id":183,"kind":"modifierInvocation","modifierName":{"id":182,"name":"onlyOwner","nameLocations":["4368:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"4368:9:0"},"nodeType":"ModifierInvocation","src":"4368:9:0"}],"name":"withdrawTo","nameLocation":"4279:10:0","nodeType":"FunctionDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"withdrawAddress","nameLocation":"4315:15:0","nodeType":"VariableDeclaration","scope":193,"src":"4299:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"4299:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"amount","nameLocation":"4348:6:0","nodeType":"VariableDeclaration","scope":193,"src":"4340:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"4340:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4289:71:0"},"returnParameters":{"id":184,"nodeType":"ParameterList","parameters":[],"src":"4378:0:0"},"scope":270,"src":"4270:171:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":210,"nodeType":"Block","src":"4735:71:0","statements":[{"expression":{"arguments":[{"id":207,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"4783:15:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":201,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"4745:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4756:8:0","memberName":"addStake","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"4745:19:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$","typeString":"function (uint32) payable external"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":204,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4772:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4776:5:0","memberName":"value","nodeType":"MemberAccess","src":"4772:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4745:37:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$value","typeString":"function (uint32) payable external"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4745:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":209,"nodeType":"ExpressionStatement","src":"4745:54:0"}]},"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"4447:214:0","text":" Add stake for this paymaster.\n This method can also carry eth value to add to the current stake.\n @param unstakeDelaySec - The unstake delay for this paymaster. Can only be increased."},"functionSelector":"0396cb60","id":211,"implemented":true,"kind":"function","modifiers":[{"id":199,"kind":"modifierInvocation","modifierName":{"id":198,"name":"onlyOwner","nameLocations":["4725:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"4725:9:0"},"nodeType":"ModifierInvocation","src":"4725:9:0"}],"name":"addStake","nameLocation":"4675:8:0","nodeType":"FunctionDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"4691:15:0","nodeType":"VariableDeclaration","scope":211,"src":"4684:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":195,"name":"uint32","nodeType":"ElementaryTypeName","src":"4684:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4683:24:0"},"returnParameters":{"id":200,"nodeType":"ParameterList","parameters":[],"src":"4735:0:0"},"scope":270,"src":"4666:140:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":225,"nodeType":"Block","src":"4941:59:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":221,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4987:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$270","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$270","typeString":"contract BasePaymaster"}],"id":220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4979:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"4979:7:0","typeDescriptions":{}}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4979:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":217,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"4958:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4969:9:0","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1162,"src":"4958:20:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4958:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":216,"id":224,"nodeType":"Return","src":"4951:42:0"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"4812:72:0","text":" Return current paymaster's deposit on the entryPoint."},"functionSelector":"c399ec88","id":226,"implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"4898:10:0","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"4908:2:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":226,"src":"4932:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"4932:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4931:9:0"},"scope":270,"src":"4889:111:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":237,"nodeType":"Block","src":"5201:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":232,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"5211:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5222:11:0","memberName":"unlockStake","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"5211:22:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5211:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":236,"nodeType":"ExpressionStatement","src":"5211:24:0"}]},"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"5006:148:0","text":" Unlock the stake, in order to withdraw it.\n The paymaster can't serve requests once unlocked, until it calls addStake again"},"functionSelector":"bb9fe6bf","id":238,"implemented":true,"kind":"function","modifiers":[{"id":230,"kind":"modifierInvocation","modifierName":{"id":229,"name":"onlyOwner","nameLocations":["5191:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"5191:9:0"},"nodeType":"ModifierInvocation","src":"5191:9:0"}],"name":"unlockStake","nameLocation":"5168:11:0","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"5179:2:0"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"5201:0:0"},"scope":270,"src":"5159:83:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":252,"nodeType":"Block","src":"5538:58:0","statements":[{"expression":{"arguments":[{"id":249,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"5573:15:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":246,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"5548:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5559:13:0","memberName":"withdrawStake","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"5548:24:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$returns$__$","typeString":"function (address payable) external"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5548:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":251,"nodeType":"ExpressionStatement","src":"5548:41:0"}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"5248:210:0","text":" Withdraw the entire paymaster's stake.\n stake must be unlocked first (and then wait for the unstakeDelay to be over)\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":253,"implemented":true,"kind":"function","modifiers":[{"id":244,"kind":"modifierInvocation","modifierName":{"id":243,"name":"onlyOwner","nameLocations":["5528:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"5528:9:0"},"nodeType":"ModifierInvocation","src":"5528:9:0"}],"name":"withdrawStake","nameLocation":"5472:13:0","nodeType":"FunctionDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"withdrawAddress","nameLocation":"5502:15:0","nodeType":"VariableDeclaration","scope":253,"src":"5486:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"5486:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5485:33:0"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"5538:0:0"},"scope":270,"src":"5463:133:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":268,"nodeType":"Block","src":"5726:84:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":258,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5744:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5748:6:0","memberName":"sender","nodeType":"MemberAccess","src":"5744:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":262,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"5766:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}],"id":261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5758:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"5758:7:0","typeDescriptions":{}}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5758:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5744:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656e646572206e6f7420456e747279506f696e74","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5779:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""},"value":"Sender not EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""}],"id":257,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5736:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5736:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":267,"nodeType":"ExpressionStatement","src":"5736:67:0"}]},"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"5602:68:0","text":" Validate the call is made from a valid entrypoint"},"id":269,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPoint","nameLocation":"5684:22:0","nodeType":"FunctionDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"5706:2:0"},"returnParameters":{"id":256,"nodeType":"ParameterList","parameters":[],"src":"5726:0:0"},"scope":270,"src":"5675:135:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":271,"src":"484:5328:0","usedErrors":[1229,1234],"usedEvents":[1240,1378]}],"src":"32:5781:0"},"id":0},"@account-abstraction/contracts/core/Helpers.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/core/Helpers.sol","exportedSymbols":{"SIG_VALIDATION_FAILED":[275],"SIG_VALIDATION_SUCCESS":[278],"ValidationData":[286],"_packValidationData":[383,421],"_parseValidationData":[346],"calldataKeccak":[431],"finalizeAllocation":[459],"min":[449]},"id":460,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":272,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:1"},{"constant":true,"id":275,"mutability":"constant","name":"SIG_VALIDATION_FAILED","nameLocation":"277:21:1","nodeType":"VariableDeclaration","scope":460,"src":"260:42:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"260:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"301:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":278,"mutability":"constant","name":"SIG_VALIDATION_SUCCESS","nameLocation":"436:22:1","nodeType":"VariableDeclaration","scope":460,"src":"419:43:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"419:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"461:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"canonicalName":"ValidationData","documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"466:659:1","text":" Returned data from validateUserOp.\n validateUserOp returns a uint256, which is created by `_packedValidationData` and\n parsed by `_parseValidationData`.\n @param aggregator  - address(0) - The account validated the signature by itself.\n                      address(1) - The account failed to validate the signature.\n                      otherwise - This is an address of a signature aggregator that must\n                                  be used to validate the signature.\n @param validAfter  - This UserOp is valid only after this timestamp.\n @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"."},"id":286,"members":[{"constant":false,"id":281,"mutability":"mutable","name":"aggregator","nameLocation":"1162:10:1","nodeType":"VariableDeclaration","scope":286,"src":"1154:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"validAfter","nameLocation":"1185:10:1","nodeType":"VariableDeclaration","scope":286,"src":"1178:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":282,"name":"uint48","nodeType":"ElementaryTypeName","src":"1178:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":285,"mutability":"mutable","name":"validUntil","nameLocation":"1208:10:1","nodeType":"VariableDeclaration","scope":286,"src":"1201:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":284,"name":"uint48","nodeType":"ElementaryTypeName","src":"1201:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"1133:14:1","nodeType":"StructDefinition","scope":460,"src":"1126:95:1","visibility":"public"},{"body":{"id":345,"nodeType":"Block","src":"1556:314:1","statements":[{"assignments":[296],"declarations":[{"constant":false,"id":296,"mutability":"mutable","name":"aggregator","nameLocation":"1570:10:1","nodeType":"VariableDeclaration","scope":345,"src":"1562:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":304,"initialValue":{"arguments":[{"arguments":[{"id":301,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1599:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1591:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":299,"name":"uint160","nodeType":"ElementaryTypeName","src":"1591:7:1","typeDescriptions":{}}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1591:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1583:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:1","typeDescriptions":{}}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1583:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1562:53:1"},{"assignments":[306],"declarations":[{"constant":false,"id":306,"mutability":"mutable","name":"validUntil","nameLocation":"1628:10:1","nodeType":"VariableDeclaration","scope":345,"src":"1621:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":305,"name":"uint48","nodeType":"ElementaryTypeName","src":"1621:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":313,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":309,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1648:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1666:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1648:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1641:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":307,"name":"uint48","nodeType":"ElementaryTypeName","src":"1641:6:1","typeDescriptions":{}}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1641:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1621:49:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":314,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"1680:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1694:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1680:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":326,"nodeType":"IfStatement","src":"1676:67:1","trueBody":{"id":325,"nodeType":"Block","src":"1697:46:1","statements":[{"expression":{"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":317,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"1707:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1725:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":319,"name":"uint48","nodeType":"ElementaryTypeName","src":"1725:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":318,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1720:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1720:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1733:3:1","memberName":"max","nodeType":"MemberAccess","src":"1720:16:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1707:29:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":324,"nodeType":"ExpressionStatement","src":"1707:29:1"}]}},{"assignments":[328],"declarations":[{"constant":false,"id":328,"mutability":"mutable","name":"validAfter","nameLocation":"1755:10:1","nodeType":"VariableDeclaration","scope":345,"src":"1748:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":327,"name":"uint48","nodeType":"ElementaryTypeName","src":"1748:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":338,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":331,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1775:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1794:2:1","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1799:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1794:8:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1793:10:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1775:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1768:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":329,"name":"uint48","nodeType":"ElementaryTypeName","src":"1768:6:1","typeDescriptions":{}}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1748:56:1"},{"expression":{"arguments":[{"id":340,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"1832:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":341,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"1844:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":342,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"1856:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":339,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"1817:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$286_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$286_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":294,"id":344,"nodeType":"Return","src":"1810:57:1"}]},"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"1223:230:1","text":" Extract aggregator/sigFailed, validAfter, validUntil.\n Also convert zero validUntil to type(uint48).max.\n @param validationData - The packed validation data.\n @return data - The unpacked in-memory validation data."},"id":346,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"1463:20:1","nodeType":"FunctionDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"validationData","nameLocation":"1497:14:1","nodeType":"VariableDeclaration","scope":346,"src":"1489:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1489:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1483:30:1"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"data","nameLocation":"1550:4:1","nodeType":"VariableDeclaration","scope":346,"src":"1528:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$286_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":292,"nodeType":"UserDefinedTypeName","pathNode":{"id":291,"name":"ValidationData","nameLocations":["1528:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":286,"src":"1528:14:1"},"referencedDeclaration":286,"src":"1528:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$286_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1527:28:1"},"scope":460,"src":"1454:416:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":382,"nodeType":"Block","src":"2105:143:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":357,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"2134:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$286_memory_ptr","typeString":"struct ValidationData memory"}},"id":358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2139:10:1","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":281,"src":"2134:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2126:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":355,"name":"uint160","nodeType":"ElementaryTypeName","src":"2126:7:1","typeDescriptions":{}}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":362,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"2170:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$286_memory_ptr","typeString":"struct ValidationData memory"}},"id":363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2175:10:1","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":285,"src":"2170:15:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2162:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:1","typeDescriptions":{}}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2190:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2162:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":367,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2161:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2126:68:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":371,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"2214:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$286_memory_ptr","typeString":"struct ValidationData memory"}},"id":372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2219:10:1","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":283,"src":"2214:15:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2206:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"2206:7:1","typeDescriptions":{}}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2206:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2235:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:2:1","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2235:8:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2234:10:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2206:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2205:40:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2126:119:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":354,"id":381,"nodeType":"Return","src":"2111:134:1"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1872:146:1","text":" Helper to pack the return value for validateUserOp.\n @param data - The ValidationData to pack.\n @return the packed validation data."},"id":383,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2028:19:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"mutability":"mutable","name":"data","nameLocation":"2075:4:1","nodeType":"VariableDeclaration","scope":383,"src":"2053:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$286_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":349,"nodeType":"UserDefinedTypeName","pathNode":{"id":348,"name":"ValidationData","nameLocations":["2053:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":286,"src":"2053:14:1"},"referencedDeclaration":286,"src":"2053:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$286_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2047:34:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":383,"src":"2096:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2095:9:1"},"scope":460,"src":"2019:229:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":420,"nodeType":"Block","src":"2731:170:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":395,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2753:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":397,"name":"SIG_VALIDATION_SUCCESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"2790:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2753:59:1","trueExpression":{"id":396,"name":"SIG_VALIDATION_FAILED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"2766:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2752:61:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":402,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2833:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2825:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"2825:7:1","typeDescriptions":{}}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2825:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2848:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2825:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2824:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2752:100:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":410,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2872:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":408,"name":"uint256","nodeType":"ElementaryTypeName","src":"2864:7:1","typeDescriptions":{}}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2888:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2894:2:1","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2888:8:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":415,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2887:10:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2864:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2863:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2752:146:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":394,"id":419,"nodeType":"Return","src":"2737:161:1"}]},"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"2250:360:1","text":" Helper to pack the return value for validateUserOp, when not using an aggregator.\n @param sigFailed  - True for signature failure, false for success.\n @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\".\n @param validAfter - First timestamp this UserOperation is valid.\n @return the packed validation data."},"id":421,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2620:19:1","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"sigFailed","nameLocation":"2650:9:1","nodeType":"VariableDeclaration","scope":421,"src":"2645:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":385,"name":"bool","nodeType":"ElementaryTypeName","src":"2645:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"validUntil","nameLocation":"2672:10:1","nodeType":"VariableDeclaration","scope":421,"src":"2665:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":387,"name":"uint48","nodeType":"ElementaryTypeName","src":"2665:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"validAfter","nameLocation":"2695:10:1","nodeType":"VariableDeclaration","scope":421,"src":"2688:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":389,"name":"uint48","nodeType":"ElementaryTypeName","src":"2688:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2639:68:1"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":421,"src":"2722:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"2722:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2721:9:1"},"scope":460,"src":"2611:290:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":430,"nodeType":"Block","src":"3277:209:1","statements":[{"AST":{"nativeSrc":"3312:168:1","nodeType":"YulBlock","src":"3312:168:1","statements":[{"nativeSrc":"3326:22:1","nodeType":"YulVariableDeclaration","src":"3326:22:1","value":{"arguments":[{"kind":"number","nativeSrc":"3343:4:1","nodeType":"YulLiteral","src":"3343:4:1","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3337:5:1","nodeType":"YulIdentifier","src":"3337:5:1"},"nativeSrc":"3337:11:1","nodeType":"YulFunctionCall","src":"3337:11:1"},"variables":[{"name":"mem","nativeSrc":"3330:3:1","nodeType":"YulTypedName","src":"3330:3:1","type":""}]},{"nativeSrc":"3361:22:1","nodeType":"YulVariableDeclaration","src":"3361:22:1","value":{"name":"data.length","nativeSrc":"3372:11:1","nodeType":"YulIdentifier","src":"3372:11:1"},"variables":[{"name":"len","nativeSrc":"3365:3:1","nodeType":"YulTypedName","src":"3365:3:1","type":""}]},{"expression":{"arguments":[{"name":"mem","nativeSrc":"3409:3:1","nodeType":"YulIdentifier","src":"3409:3:1"},{"name":"data.offset","nativeSrc":"3414:11:1","nodeType":"YulIdentifier","src":"3414:11:1"},{"name":"len","nativeSrc":"3427:3:1","nodeType":"YulIdentifier","src":"3427:3:1"}],"functionName":{"name":"calldatacopy","nativeSrc":"3396:12:1","nodeType":"YulIdentifier","src":"3396:12:1"},"nativeSrc":"3396:35:1","nodeType":"YulFunctionCall","src":"3396:35:1"},"nativeSrc":"3396:35:1","nodeType":"YulExpressionStatement","src":"3396:35:1"},{"nativeSrc":"3444:26:1","nodeType":"YulAssignment","src":"3444:26:1","value":{"arguments":[{"name":"mem","nativeSrc":"3461:3:1","nodeType":"YulIdentifier","src":"3461:3:1"},{"name":"len","nativeSrc":"3466:3:1","nodeType":"YulIdentifier","src":"3466:3:1"}],"functionName":{"name":"keccak256","nativeSrc":"3451:9:1","nodeType":"YulIdentifier","src":"3451:9:1"},"nativeSrc":"3451:19:1","nodeType":"YulFunctionCall","src":"3451:19:1"},"variableNames":[{"name":"ret","nativeSrc":"3444:3:1","nodeType":"YulIdentifier","src":"3444:3:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":424,"isOffset":false,"isSlot":false,"src":"3372:11:1","suffix":"length","valueSize":1},{"declaration":424,"isOffset":true,"isSlot":false,"src":"3414:11:1","suffix":"offset","valueSize":1},{"declaration":427,"isOffset":false,"isSlot":false,"src":"3444:3:1","valueSize":1}],"flags":["memory-safe"],"id":429,"nodeType":"InlineAssembly","src":"3287:193:1"}]},"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"2903:297:1","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n @param data - the calldata bytes array to perform keccak on.\n @return ret - the keccak hash of the 'data' array."},"id":431,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"3214:14:1","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"data","nameLocation":"3244:4:1","nodeType":"VariableDeclaration","scope":431,"src":"3229:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":423,"name":"bytes","nodeType":"ElementaryTypeName","src":"3229:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3228:21:1"},"returnParameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"ret","nameLocation":"3272:3:1","nodeType":"VariableDeclaration","scope":431,"src":"3264:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3264:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3263:13:1"},"scope":460,"src":"3205:281:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":448,"nodeType":"Block","src":"3679:37:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"3696:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3700:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3696:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":445,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3708:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3696:13:1","trueExpression":{"id":444,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"3704:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":440,"id":447,"nodeType":"Return","src":"3689:20:1"}]},"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"3489:127:1","text":" The minimum of two numbers.\n @param a - First number.\n @param b - Second number.\n @return - the minimum value."},"id":449,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"min","nameLocation":"3630:3:1","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"a","nameLocation":"3642:1:1","nodeType":"VariableDeclaration","scope":449,"src":"3634:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3634:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"b","nameLocation":"3653:1:1","nodeType":"VariableDeclaration","scope":449,"src":"3645:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"3645:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3633:22:1"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":449,"src":"3670:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":438,"name":"uint256","nodeType":"ElementaryTypeName","src":"3670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3669:9:1"},"scope":460,"src":"3621:95:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":458,"nodeType":"Block","src":"4009:430:1","statements":[{"AST":{"nativeSrc":"4044:389:1","nodeType":"YulBlock","src":"4044:389:1","statements":[{"expression":{"arguments":[{"name":"memPointer","nativeSrc":"4078:10:1","nodeType":"YulIdentifier","src":"4078:10:1"},{"name":"allocationSize","nativeSrc":"4090:14:1","nodeType":"YulIdentifier","src":"4090:14:1"}],"functionName":{"name":"finalize_allocation","nativeSrc":"4058:19:1","nodeType":"YulIdentifier","src":"4058:19:1"},"nativeSrc":"4058:47:1","nodeType":"YulFunctionCall","src":"4058:47:1"},"nativeSrc":"4058:47:1","nodeType":"YulExpressionStatement","src":"4058:47:1"},{"body":{"nativeSrc":"4162:129:1","nodeType":"YulBlock","src":"4162:129:1","statements":[{"nativeSrc":"4180:58:1","nodeType":"YulVariableDeclaration","src":"4180:58:1","value":{"arguments":[{"name":"memPtr","nativeSrc":"4202:6:1","nodeType":"YulIdentifier","src":"4202:6:1"},{"arguments":[{"name":"size","nativeSrc":"4232:4:1","nodeType":"YulIdentifier","src":"4232:4:1"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"4210:21:1","nodeType":"YulIdentifier","src":"4210:21:1"},"nativeSrc":"4210:27:1","nodeType":"YulFunctionCall","src":"4210:27:1"}],"functionName":{"name":"add","nativeSrc":"4198:3:1","nodeType":"YulIdentifier","src":"4198:3:1"},"nativeSrc":"4198:40:1","nodeType":"YulFunctionCall","src":"4198:40:1"},"variables":[{"name":"newFreePtr","nativeSrc":"4184:10:1","nodeType":"YulTypedName","src":"4184:10:1","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4262:2:1","nodeType":"YulLiteral","src":"4262:2:1","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4266:10:1","nodeType":"YulIdentifier","src":"4266:10:1"}],"functionName":{"name":"mstore","nativeSrc":"4255:6:1","nodeType":"YulIdentifier","src":"4255:6:1"},"nativeSrc":"4255:22:1","nodeType":"YulFunctionCall","src":"4255:22:1"},"nativeSrc":"4255:22:1","nodeType":"YulExpressionStatement","src":"4255:22:1"}]},"name":"finalize_allocation","nativeSrc":"4119:172:1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"4148:6:1","nodeType":"YulTypedName","src":"4148:6:1","type":""},{"name":"size","nativeSrc":"4156:4:1","nodeType":"YulTypedName","src":"4156:4:1","type":""}],"src":"4119:172:1"},{"body":{"nativeSrc":"4353:70:1","nodeType":"YulBlock","src":"4353:70:1","statements":[{"nativeSrc":"4371:38:1","nodeType":"YulAssignment","src":"4371:38:1","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4389:5:1","nodeType":"YulIdentifier","src":"4389:5:1"},{"kind":"number","nativeSrc":"4396:2:1","nodeType":"YulLiteral","src":"4396:2:1","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4385:3:1","nodeType":"YulIdentifier","src":"4385:3:1"},"nativeSrc":"4385:14:1","nodeType":"YulFunctionCall","src":"4385:14:1"},{"arguments":[{"kind":"number","nativeSrc":"4405:2:1","nodeType":"YulLiteral","src":"4405:2:1","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4401:3:1","nodeType":"YulIdentifier","src":"4401:3:1"},"nativeSrc":"4401:7:1","nodeType":"YulFunctionCall","src":"4401:7:1"}],"functionName":{"name":"and","nativeSrc":"4381:3:1","nodeType":"YulIdentifier","src":"4381:3:1"},"nativeSrc":"4381:28:1","nodeType":"YulFunctionCall","src":"4381:28:1"},"variableNames":[{"name":"result","nativeSrc":"4371:6:1","nodeType":"YulIdentifier","src":"4371:6:1"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"4305:118:1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4336:5:1","nodeType":"YulTypedName","src":"4336:5:1","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4346:6:1","nodeType":"YulTypedName","src":"4346:6:1","type":""}],"src":"4305:118:1"}]},"evmVersion":"paris","externalReferences":[{"declaration":454,"isOffset":false,"isSlot":false,"src":"4090:14:1","valueSize":1},{"declaration":452,"isOffset":false,"isSlot":false,"src":"4078:10:1","valueSize":1}],"flags":["memory-safe"],"id":457,"nodeType":"InlineAssembly","src":"4020:413:1"}]},"documentation":{"id":450,"nodeType":"StructuredDocumentation","src":"3718:209:1","text":" standard solidity memory allocation finalization.\n copied from solidity generated code\n @param memPointer - The current memory pointer\n @param allocationSize - Bytes allocated from memPointer."},"id":459,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"finalizeAllocation","nameLocation":"3941:18:1","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"memPointer","nameLocation":"3968:10:1","nodeType":"VariableDeclaration","scope":459,"src":"3960:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":451,"name":"uint256","nodeType":"ElementaryTypeName","src":"3960:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"allocationSize","nameLocation":"3988:14:1","nodeType":"VariableDeclaration","scope":459,"src":"3980:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3959:44:1"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[],"src":"4009:0:1"},"scope":460,"src":"3932:507:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"32:4408:1"},"id":1},"@account-abstraction/contracts/core/UserOperationLib.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/core/UserOperationLib.sol","exportedSymbols":{"PackedUserOperation":[1215],"UserOperationLib":[795],"calldataKeccak":[431],"min":[449]},"id":796,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":461,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:2"},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"../interfaces/PackedUserOperation.sol","id":462,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":796,"sourceUnit":1216,"src":"100:47:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/core/Helpers.sol","file":"./Helpers.sol","id":465,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":796,"sourceUnit":460,"src":"148:50:2","symbolAliases":[{"foreign":{"id":463,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"156:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":464,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"172:3:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"200:77:2","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":795,"linearizedBaseContracts":[795],"name":"UserOperationLib","nameLocation":"286:16:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"b29a8ff4","id":469,"mutability":"constant","name":"PAYMASTER_VALIDATION_GAS_OFFSET","nameLocation":"334:31:2","nodeType":"VariableDeclaration","scope":795,"src":"310:60:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"310:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"368:2:2","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"constant":true,"functionSelector":"25093e1b","id":472,"mutability":"constant","name":"PAYMASTER_POSTOP_GAS_OFFSET","nameLocation":"400:27:2","nodeType":"VariableDeclaration","scope":795,"src":"376:56:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":470,"name":"uint256","nodeType":"ElementaryTypeName","src":"376:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3336","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"430:2:2","typeDescriptions":{"typeIdentifier":"t_rational_36_by_1","typeString":"int_const 36"},"value":"36"},"visibility":"public"},{"constant":true,"functionSelector":"ede31502","id":475,"mutability":"constant","name":"PAYMASTER_DATA_OFFSET","nameLocation":"462:21:2","nodeType":"VariableDeclaration","scope":795,"src":"438:50:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"438:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3532","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"486:2:2","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"visibility":"public"},{"body":{"id":502,"nodeType":"Block","src":"795:209:2","statements":[{"id":501,"nodeType":"UncheckedBlock","src":"805:193:2","statements":[{"assignments":[485,487],"declarations":[{"constant":false,"id":485,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"838:20:2","nodeType":"VariableDeclaration","scope":501,"src":"830:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"830:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"868:12:2","nodeType":"VariableDeclaration","scope":501,"src":"860:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":486,"name":"uint256","nodeType":"ElementaryTypeName","src":"860:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":492,"initialValue":{"arguments":[{"expression":{"id":489,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"896:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"903:7:2","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1210,"src":"896:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":488,"name":"unpackUints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"884:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256,uint256)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"884:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"829:82:2"},{"expression":{"arguments":[{"id":494,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"936:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":495,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"950:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":496,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"973:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"979:7:2","memberName":"basefee","nodeType":"MemberAccess","src":"973:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"950:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":493,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"932:3:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"932:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":483,"id":500,"nodeType":"Return","src":"925:62:2"}]}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"495:194:2","text":" Relayer/block builder might submit the TX with higher priorityFee,\n but the user should not pay above what he signed for.\n @param userOp - The user operation data."},"id":503,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"703:8:2","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"userOp","nameLocation":"750:6:2","nodeType":"VariableDeclaration","scope":503,"src":"721:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":478,"nodeType":"UserDefinedTypeName","pathNode":{"id":477,"name":"PackedUserOperation","nameLocations":["721:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"721:19:2"},"referencedDeclaration":1215,"src":"721:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"711:51:2"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":503,"src":"786:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"785:9:2"},"scope":795,"src":"694:310:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":true,"id":508,"mutability":"constant","name":"PACKED_USEROP_TYPEHASH","nameLocation":"1036:22:2","nodeType":"VariableDeclaration","scope":795,"src":"1010:252:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1010:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5061636b6564557365724f7065726174696f6e28616464726573732073656e6465722c75696e74323536206e6f6e63652c627974657320696e6974436f64652c62797465732063616c6c446174612c62797465733332206163636f756e744761734c696d6974732c75696e7432353620707265566572696669636174696f6e4761732c6279746573333220676173466565732c6279746573207061796d6173746572416e644461746129","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1084:172:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_29a0bca4af4be3421398da00295e58e6d7de38cb492214754cb6a47507dd6f8e","typeString":"literal_string \"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)\""},"value":"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_29a0bca4af4be3421398da00295e58e6d7de38cb492214754cb6a47507dd6f8e","typeString":"literal_string \"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)\""}],"id":505,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1065:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:197:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"body":{"id":584,"nodeType":"Block","src":"1641:761:2","statements":[{"assignments":[520],"declarations":[{"constant":false,"id":520,"mutability":"mutable","name":"sender","nameLocation":"1659:6:2","nodeType":"VariableDeclaration","scope":584,"src":"1651:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"1651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":523,"initialValue":{"expression":{"id":521,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"1668:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1675:6:2","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":1198,"src":"1668:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1651:30:2"},{"assignments":[525],"declarations":[{"constant":false,"id":525,"mutability":"mutable","name":"nonce","nameLocation":"1699:5:2","nodeType":"VariableDeclaration","scope":584,"src":"1691:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1691:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":528,"initialValue":{"expression":{"id":526,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"1707:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1714:5:2","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1200,"src":"1707:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1691:28:2"},{"assignments":[530],"declarations":[{"constant":false,"id":530,"mutability":"mutable","name":"hashInitCode","nameLocation":"1737:12:2","nodeType":"VariableDeclaration","scope":584,"src":"1729:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1729:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":540,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":531,"name":"overrideInitCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"1752:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1776:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1752:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"expression":{"id":536,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"1818:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1825:8:2","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":1202,"src":"1818:15:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":535,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"1803:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1803:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1752:82:2","trueExpression":{"id":534,"name":"overrideInitCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"1780:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1729:105:2"},{"assignments":[542],"declarations":[{"constant":false,"id":542,"mutability":"mutable","name":"hashCallData","nameLocation":"1852:12:2","nodeType":"VariableDeclaration","scope":584,"src":"1844:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1844:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":547,"initialValue":{"arguments":[{"expression":{"id":544,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"1882:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:8:2","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":1204,"src":"1882:15:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":543,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"1867:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1867:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1844:54:2"},{"assignments":[549],"declarations":[{"constant":false,"id":549,"mutability":"mutable","name":"accountGasLimits","nameLocation":"1916:16:2","nodeType":"VariableDeclaration","scope":584,"src":"1908:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1908:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":552,"initialValue":{"expression":{"id":550,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"1935:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1942:16:2","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":1206,"src":"1935:23:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1908:50:2"},{"assignments":[554],"declarations":[{"constant":false,"id":554,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1976:18:2","nodeType":"VariableDeclaration","scope":584,"src":"1968:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1968:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":557,"initialValue":{"expression":{"id":555,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"1997:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2004:18:2","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":1208,"src":"1997:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1968:54:2"},{"assignments":[559],"declarations":[{"constant":false,"id":559,"mutability":"mutable","name":"gasFees","nameLocation":"2040:7:2","nodeType":"VariableDeclaration","scope":584,"src":"2032:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2032:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":562,"initialValue":{"expression":{"id":560,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"2050:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2057:7:2","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1210,"src":"2050:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2032:32:2"},{"assignments":[564],"declarations":[{"constant":false,"id":564,"mutability":"mutable","name":"hashPaymasterAndData","nameLocation":"2082:20:2","nodeType":"VariableDeclaration","scope":584,"src":"2074:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2074:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":569,"initialValue":{"arguments":[{"expression":{"id":566,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"2120:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2127:16:2","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":1212,"src":"2120:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":565,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2105:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2105:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2074:70:2"},{"expression":{"arguments":[{"expression":{"id":572,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"2186:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$795_$","typeString":"type(library UserOperationLib)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2203:22:2","memberName":"PACKED_USEROP_TYPEHASH","nodeType":"MemberAccess","referencedDeclaration":508,"src":"2186:39:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":574,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"2239:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":575,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2247:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":576,"name":"hashInitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"2266:12:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":577,"name":"hashCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"2280:12:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":578,"name":"accountGasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"2306:16:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":579,"name":"preVerificationGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"2324:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":580,"name":"gasFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"2344:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":581,"name":"hashPaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"2365:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":570,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2162:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2166:6:2","memberName":"encode","nodeType":"MemberAccess","src":"2162:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:233:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":518,"id":583,"nodeType":"Return","src":"2155:240:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"1269:221:2","text":" Pack the user operation data into bytes for hashing.\n @param userOp - The user operation data.\n @param overrideInitCodeHash - If set, encode this instead of the initCode field in the userOp."},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"1504:6:2","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"userOp","nameLocation":"1549:6:2","nodeType":"VariableDeclaration","scope":585,"src":"1520:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":511,"nodeType":"UserDefinedTypeName","pathNode":{"id":510,"name":"PackedUserOperation","nameLocations":["1520:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"1520:19:2"},"referencedDeclaration":1215,"src":"1520:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"overrideInitCodeHash","nameLocation":"1573:20:2","nodeType":"VariableDeclaration","scope":585,"src":"1565:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1565:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1510:89:2"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"ret","nameLocation":"1636:3:2","nodeType":"VariableDeclaration","scope":585,"src":"1623:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":516,"name":"bytes","nodeType":"ElementaryTypeName","src":"1623:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1622:18:2"},"scope":795,"src":"1495:907:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":602,"nodeType":"Block","src":"2515:69:2","statements":[{"expression":{"components":[{"arguments":[{"id":595,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"2547:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":594,"name":"unpackHigh128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"2533:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":598,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"2569:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":597,"name":"unpackLow128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"2556:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2556:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2532:45:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":593,"id":601,"nodeType":"Return","src":"2525:52:2"}]},"id":603,"implemented":true,"kind":"function","modifiers":[],"name":"unpackUints","nameLocation":"2417:11:2","nodeType":"FunctionDefinition","parameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"packed","nameLocation":"2446:6:2","nodeType":"VariableDeclaration","scope":603,"src":"2438:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2438:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2428:30:2"},"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"high128","nameLocation":"2490:7:2","nodeType":"VariableDeclaration","scope":603,"src":"2482:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":589,"name":"uint256","nodeType":"ElementaryTypeName","src":"2482:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":592,"mutability":"mutable","name":"low128","nameLocation":"2507:6:2","nodeType":"VariableDeclaration","scope":603,"src":"2499:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint256","nodeType":"ElementaryTypeName","src":"2499:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2481:33:2"},"scope":795,"src":"2408:176:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":617,"nodeType":"Block","src":"2718:46:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":612,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"2743:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2735:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"2735:7:2","typeDescriptions":{}}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2754:3:2","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2735:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":609,"id":616,"nodeType":"Return","src":"2728:29:2"}]},"id":618,"implemented":true,"kind":"function","modifiers":[],"name":"unpackHigh128","nameLocation":"2656:13:2","nodeType":"FunctionDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"packed","nameLocation":"2678:6:2","nodeType":"VariableDeclaration","scope":618,"src":"2670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2670:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2669:16:2"},"returnParameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":618,"src":"2709:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"2709:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2708:9:2"},"scope":795,"src":"2647:117:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":633,"nodeType":"Block","src":"2896:48:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":629,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"2929:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2921:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"2921:7:2","typeDescriptions":{}}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2921:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2913:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":625,"name":"uint128","nodeType":"ElementaryTypeName","src":"2913:7:2","typeDescriptions":{}}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2913:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":624,"id":632,"nodeType":"Return","src":"2906:31:2"}]},"id":634,"implemented":true,"kind":"function","modifiers":[],"name":"unpackLow128","nameLocation":"2835:12:2","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"packed","nameLocation":"2856:6:2","nodeType":"VariableDeclaration","scope":634,"src":"2848:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2848:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2847:16:2"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":634,"src":"2887:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"2887:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2886:9:2"},"scope":795,"src":"2826:118:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":647,"nodeType":"Block","src":"3059:53:2","statements":[{"expression":{"arguments":[{"expression":{"id":643,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"3090:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3097:7:2","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1210,"src":"3090:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":642,"name":"unpackHigh128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"3076:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3076:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":641,"id":646,"nodeType":"Return","src":"3069:36:2"}]},"id":648,"implemented":true,"kind":"function","modifiers":[],"name":"unpackMaxPriorityFeePerGas","nameLocation":"2959:26:2","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"userOp","nameLocation":"3015:6:2","nodeType":"VariableDeclaration","scope":648,"src":"2986:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":636,"nodeType":"UserDefinedTypeName","pathNode":{"id":635,"name":"PackedUserOperation","nameLocations":["2986:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"2986:19:2"},"referencedDeclaration":1215,"src":"2986:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"2985:37:2"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":648,"src":"3050:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:2"},"scope":795,"src":"2950:162:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":661,"nodeType":"Block","src":"3219:52:2","statements":[{"expression":{"arguments":[{"expression":{"id":657,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"3249:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3256:7:2","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1210,"src":"3249:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":656,"name":"unpackLow128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"3236:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":655,"id":660,"nodeType":"Return","src":"3229:35:2"}]},"id":662,"implemented":true,"kind":"function","modifiers":[],"name":"unpackMaxFeePerGas","nameLocation":"3127:18:2","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"userOp","nameLocation":"3175:6:2","nodeType":"VariableDeclaration","scope":662,"src":"3146:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":650,"nodeType":"UserDefinedTypeName","pathNode":{"id":649,"name":"PackedUserOperation","nameLocations":["3146:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"3146:19:2"},"referencedDeclaration":1215,"src":"3146:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3145:37:2"},"returnParameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":662,"src":"3210:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":653,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:2"},"scope":795,"src":"3118:153:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":675,"nodeType":"Block","src":"3386:62:2","statements":[{"expression":{"arguments":[{"expression":{"id":671,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"3417:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3424:16:2","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":1206,"src":"3417:23:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":670,"name":"unpackHigh128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"3403:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3403:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":669,"id":674,"nodeType":"Return","src":"3396:45:2"}]},"id":676,"implemented":true,"kind":"function","modifiers":[],"name":"unpackVerificationGasLimit","nameLocation":"3286:26:2","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"userOp","nameLocation":"3342:6:2","nodeType":"VariableDeclaration","scope":676,"src":"3313:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":664,"nodeType":"UserDefinedTypeName","pathNode":{"id":663,"name":"PackedUserOperation","nameLocations":["3313:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"3313:19:2"},"referencedDeclaration":1215,"src":"3313:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3312:37:2"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":676,"src":"3377:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"3377:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3376:9:2"},"scope":795,"src":"3277:171:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"3555:61:2","statements":[{"expression":{"arguments":[{"expression":{"id":685,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"3585:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3592:16:2","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":1206,"src":"3585:23:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":684,"name":"unpackLow128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"3572:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":683,"id":688,"nodeType":"Return","src":"3565:44:2"}]},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"unpackCallGasLimit","nameLocation":"3463:18:2","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"userOp","nameLocation":"3511:6:2","nodeType":"VariableDeclaration","scope":690,"src":"3482:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":678,"nodeType":"UserDefinedTypeName","pathNode":{"id":677,"name":"PackedUserOperation","nameLocations":["3482:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"3482:19:2"},"referencedDeclaration":1215,"src":"3482:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3481:37:2"},"returnParameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":690,"src":"3546:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"3546:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3545:9:2"},"scope":795,"src":"3454:162:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":710,"nodeType":"Block","src":"3740:128:2","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":702,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"3773:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3780:16:2","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":1212,"src":"3773:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":705,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"3831:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3773:86:2","startExpression":{"id":704,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"3797:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3765:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":700,"name":"bytes16","nodeType":"ElementaryTypeName","src":"3765:7:2","typeDescriptions":{}}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3765:95:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3757:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":698,"name":"uint128","nodeType":"ElementaryTypeName","src":"3757:7:2","typeDescriptions":{}}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3757:104:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":697,"id":709,"nodeType":"Return","src":"3750:111:2"}]},"id":711,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPaymasterVerificationGasLimit","nameLocation":"3631:35:2","nodeType":"FunctionDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"userOp","nameLocation":"3696:6:2","nodeType":"VariableDeclaration","scope":711,"src":"3667:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":692,"nodeType":"UserDefinedTypeName","pathNode":{"id":691,"name":"PackedUserOperation","nameLocations":["3667:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"3667:19:2"},"referencedDeclaration":1215,"src":"3667:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3666:37:2"},"returnParameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":711,"src":"3731:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"3731:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3730:9:2"},"scope":795,"src":"3622:246:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":731,"nodeType":"Block","src":"3977:118:2","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":723,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"4010:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4017:16:2","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":1212,"src":"4010:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":726,"name":"PAYMASTER_DATA_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4064:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4010:76:2","startExpression":{"id":725,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"4034:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4002:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":721,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4002:7:2","typeDescriptions":{}}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4002:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":719,"name":"uint128","nodeType":"ElementaryTypeName","src":"3994:7:2","typeDescriptions":{}}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:94:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":718,"id":730,"nodeType":"Return","src":"3987:101:2"}]},"id":732,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPostOpGasLimit","nameLocation":"3883:20:2","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"userOp","nameLocation":"3933:6:2","nodeType":"VariableDeclaration","scope":732,"src":"3904:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":713,"nodeType":"UserDefinedTypeName","pathNode":{"id":712,"name":"PackedUserOperation","nameLocations":["3904:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"3904:19:2"},"referencedDeclaration":1215,"src":"3904:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3903:37:2"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":732,"src":"3968:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"3968:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3967:9:2"},"scope":795,"src":"3874:221:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":774,"nodeType":"Block","src":"4279:329:2","statements":[{"expression":{"components":[{"arguments":[{"arguments":[{"baseExpression":{"id":747,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"4326:16:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":748,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"4345:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4326:51:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4318:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":745,"name":"bytes20","nodeType":"ElementaryTypeName","src":"4318:7:2","typeDescriptions":{}}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4310:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:2","typeDescriptions":{}}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4310:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"baseExpression":{"id":756,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"4409:16:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":758,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"4460:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4409:79:2","startExpression":{"id":757,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"4426:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4401:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":754,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4401:7:2","typeDescriptions":{}}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4401:88:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4393:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":752,"name":"uint128","nodeType":"ElementaryTypeName","src":"4393:7:2","typeDescriptions":{}}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4393:97:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"arguments":[{"baseExpression":{"id":766,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"4520:16:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":768,"name":"PAYMASTER_DATA_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4567:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4520:69:2","startExpression":{"id":767,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"4537:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4512:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":764,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4512:7:2","typeDescriptions":{}}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4512:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":762,"name":"uint128","nodeType":"ElementaryTypeName","src":"4504:7:2","typeDescriptions":{}}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:87:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4296:305:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint128_$_t_uint128_$","typeString":"tuple(address,uint128,uint128)"}},"functionReturnParameters":742,"id":773,"nodeType":"Return","src":"4289:312:2"}]},"id":775,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPaymasterStaticFields","nameLocation":"4110:27:2","nodeType":"FunctionDefinition","parameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"paymasterAndData","nameLocation":"4162:16:2","nodeType":"VariableDeclaration","scope":775,"src":"4147:31:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":733,"name":"bytes","nodeType":"ElementaryTypeName","src":"4147:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4137:47:2"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"paymaster","nameLocation":"4216:9:2","nodeType":"VariableDeclaration","scope":775,"src":"4208:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"4208:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"validationGasLimit","nameLocation":"4235:18:2","nodeType":"VariableDeclaration","scope":775,"src":"4227:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"4227:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"postOpGasLimit","nameLocation":"4263:14:2","nodeType":"VariableDeclaration","scope":775,"src":"4255:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"4255:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4207:71:2"},"scope":795,"src":"4101:507:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":793,"nodeType":"Block","src":"4971:71:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":788,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"5005:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"id":789,"name":"overrideInitCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"5013:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":787,"name":"encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"4998:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_PackedUserOperation_$1215_calldata_ptr_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct PackedUserOperation calldata,bytes32) pure returns (bytes memory)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4998:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":786,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4988:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4988:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":785,"id":792,"nodeType":"Return","src":"4981:54:2"}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"4614:217:2","text":" Hash the user operation data.\n @param userOp - The user operation data.\n @param overrideInitCodeHash - If set, the initCode hash will be replaced with this value just for UserOp hashing."},"id":794,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"4845:4:2","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"userOp","nameLocation":"4888:6:2","nodeType":"VariableDeclaration","scope":794,"src":"4859:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":778,"nodeType":"UserDefinedTypeName","pathNode":{"id":777,"name":"PackedUserOperation","nameLocations":["4859:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"4859:19:2"},"referencedDeclaration":1215,"src":"4859:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":781,"mutability":"mutable","name":"overrideInitCodeHash","nameLocation":"4912:20:2","nodeType":"VariableDeclaration","scope":794,"src":"4904:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4904:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4849:89:2"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":794,"src":"4962:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4962:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4961:9:2"},"scope":795,"src":"4836:206:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":796,"src":"278:4766:2","usedErrors":[],"usedEvents":[]}],"src":"32:5013:2"},"id":2},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[829],"PackedUserOperation":[1215]},"id":830,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":797,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":798,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":830,"sourceUnit":1216,"src":"58:35:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"95:43:3","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":829,"linearizedBaseContracts":[829],"name":"IAggregator","nameLocation":"149:11:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"167:276:3","text":" Validate an aggregated signature.\n Reverts if the aggregated signature does not match the given list of operations.\n @param userOps   - An array of UserOperations to validate the signature for.\n @param signature - The aggregated signature."},"functionSelector":"2dd81133","id":809,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"457:18:3","nodeType":"FunctionDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"userOps","nameLocation":"516:7:3","nodeType":"VariableDeclaration","scope":809,"src":"485:38:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1215_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":802,"nodeType":"UserDefinedTypeName","pathNode":{"id":801,"name":"PackedUserOperation","nameLocations":["485:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"485:19:3"},"referencedDeclaration":1215,"src":"485:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"id":803,"nodeType":"ArrayTypeName","src":"485:21:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1215_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"signature","nameLocation":"548:9:3","nodeType":"VariableDeclaration","scope":809,"src":"533:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":805,"name":"bytes","nodeType":"ElementaryTypeName","src":"533:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"475:88:3"},"returnParameters":{"id":808,"nodeType":"ParameterList","parameters":[],"src":"572:0:3"},"scope":829,"src":"448:125:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"579:614:3","text":" Validate the signature of a single userOp.\n This method should be called by bundler after EntryPointSimulation.simulateValidation() returns\n the aggregator this account uses.\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp        - The userOperation received from the user.\n @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n                        (usually empty, unless account and aggregator support some kind of \"multisig\"."},"functionSelector":"062a422b","id":818,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1207:23:3","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"userOp","nameLocation":"1269:6:3","nodeType":"VariableDeclaration","scope":818,"src":"1240:35:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":812,"nodeType":"UserDefinedTypeName","pathNode":{"id":811,"name":"PackedUserOperation","nameLocations":["1240:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"1240:19:3"},"referencedDeclaration":1215,"src":"1240:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"1230:51:3"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1318:12:3","nodeType":"VariableDeclaration","scope":818,"src":"1305:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":815,"name":"bytes","nodeType":"ElementaryTypeName","src":"1305:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1304:27:3"},"scope":829,"src":"1198:134:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"1338:393:3","text":" Aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code to perform this aggregation.\n @param userOps              - An array of UserOperations to collect the signatures from.\n @return aggregatedSignature - The aggregated signature."},"functionSelector":"ae574a43","id":828,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1745:19:3","nodeType":"FunctionDefinition","parameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"userOps","nameLocation":"1805:7:3","nodeType":"VariableDeclaration","scope":828,"src":"1774:38:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1215_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":821,"nodeType":"UserDefinedTypeName","pathNode":{"id":820,"name":"PackedUserOperation","nameLocations":["1774:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"1774:19:3"},"referencedDeclaration":1215,"src":"1774:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"id":822,"nodeType":"ArrayTypeName","src":"1774:21:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1215_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"}],"src":"1764:54:3"},"returnParameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1855:19:3","nodeType":"VariableDeclaration","scope":828,"src":"1842:32:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":825,"name":"bytes","nodeType":"ElementaryTypeName","src":"1842:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1841:34:3"},"scope":829,"src":"1736:140:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":830,"src":"139:1739:3","usedErrors":[],"usedEvents":[]}],"src":"32:1847:3"},"id":3},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[829],"IEntryPoint":[1014],"INonceManager":[1033],"ISenderCreator":[1089],"IStakeManager":[1193],"PackedUserOperation":[1215]},"id":1015,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":831,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"159:24:4"},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":832,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1015,"sourceUnit":1216,"src":"307:35:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":833,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1015,"sourceUnit":1194,"src":"343:29:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":834,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1015,"sourceUnit":830,"src":"373:27:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":835,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1015,"sourceUnit":1034,"src":"401:29:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/ISenderCreator.sol","file":"./ISenderCreator.sol","id":836,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1015,"sourceUnit":1090,"src":"431:30:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":837,"name":"IStakeManager","nameLocations":["488:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":1193,"src":"488:13:4"},"id":838,"nodeType":"InheritanceSpecifier","src":"488:13:4"},{"baseName":{"id":839,"name":"INonceManager","nameLocations":["503:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":1033,"src":"503:13:4"},"id":840,"nodeType":"InheritanceSpecifier","src":"503:13:4"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1014,"linearizedBaseContracts":[1014,1033,1193],"name":"IEntryPoint","nameLocation":"473:11:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":856,"name":"UserOperationEvent","nameLocation":"1282:18:4","nodeType":"EventDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1326:10:4","nodeType":"VariableDeclaration","scope":856,"src":"1310:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1310:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":844,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1362:6:4","nodeType":"VariableDeclaration","scope":856,"src":"1346:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"1346:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":846,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1394:9:4","nodeType":"VariableDeclaration","scope":856,"src":"1378:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"1378:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1421:5:4","nodeType":"VariableDeclaration","scope":856,"src":"1413:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":850,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1441:7:4","nodeType":"VariableDeclaration","scope":856,"src":"1436:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":849,"name":"bool","nodeType":"ElementaryTypeName","src":"1436:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":852,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1466:13:4","nodeType":"VariableDeclaration","scope":856,"src":"1458:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1458:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":854,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1497:13:4","nodeType":"VariableDeclaration","scope":856,"src":"1489:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":853,"name":"uint256","nodeType":"ElementaryTypeName","src":"1489:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1300:216:4"},"src":"1276:241:4"},{"anonymous":false,"documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"1523:349:4","text":" Account \"sender\" was deployed.\n @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n @param sender     - The account that is deployed\n @param factory    - The factory used to deploy this account (in the initCode)\n @param paymaster  - The paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":867,"name":"AccountDeployed","nameLocation":"1883:15:4","nodeType":"EventDefinition","parameters":{"id":866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1924:10:4","nodeType":"VariableDeclaration","scope":867,"src":"1908:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1908:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":861,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1960:6:4","nodeType":"VariableDeclaration","scope":867,"src":"1944:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"1944:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":863,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1984:7:4","nodeType":"VariableDeclaration","scope":867,"src":"1976:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"1976:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":865,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"2009:9:4","nodeType":"VariableDeclaration","scope":867,"src":"2001:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"2001:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1898:126:4"},"src":"1877:148:4"},{"anonymous":false,"documentation":{"id":868,"nodeType":"StructuredDocumentation","src":"2031:356:4","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the reverted \"callData\" call."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":878,"name":"UserOperationRevertReason","nameLocation":"2398:25:4","nodeType":"EventDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2449:10:4","nodeType":"VariableDeclaration","scope":878,"src":"2433:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":869,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2433:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":872,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2485:6:4","nodeType":"VariableDeclaration","scope":878,"src":"2469:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2509:5:4","nodeType":"VariableDeclaration","scope":878,"src":"2501:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2501:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":876,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2530:12:4","nodeType":"VariableDeclaration","scope":878,"src":"2524:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":875,"name":"bytes","nodeType":"ElementaryTypeName","src":"2524:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2423:125:4"},"src":"2392:157:4"},{"anonymous":false,"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"2555:372:4","text":" An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the reverted call to \"postOp\"."},"eventSelector":"f62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792","id":889,"name":"PostOpRevertReason","nameLocation":"2938:18:4","nodeType":"EventDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2982:10:4","nodeType":"VariableDeclaration","scope":889,"src":"2966:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2966:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":883,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3018:6:4","nodeType":"VariableDeclaration","scope":889,"src":"3002:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"3002:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":885,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3042:5:4","nodeType":"VariableDeclaration","scope":889,"src":"3034:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"3034:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":887,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"3063:12:4","nodeType":"VariableDeclaration","scope":889,"src":"3057:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":886,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2956:125:4"},"src":"2932:150:4"},{"anonymous":false,"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"3088:284:4","text":" UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request."},"eventSelector":"67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e","id":898,"name":"UserOperationPrefundTooLow","nameLocation":"3383:26:4","nodeType":"EventDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"3435:10:4","nodeType":"VariableDeclaration","scope":898,"src":"3419:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":894,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3471:6:4","nodeType":"VariableDeclaration","scope":898,"src":"3455:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"3455:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3495:5:4","nodeType":"VariableDeclaration","scope":898,"src":"3487:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"3487:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3409:97:4"},"src":"3377:130:4"},{"anonymous":false,"documentation":{"id":899,"nodeType":"StructuredDocumentation","src":"3513:184:4","text":" An event emitted by handleOps() and handleAggregatedOps(), before starting the execution loop.\n Any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":901,"name":"BeforeExecution","nameLocation":"3708:15:4","nodeType":"EventDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[],"src":"3723:2:4"},"src":"3702:24:4"},{"anonymous":false,"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"3732:187:4","text":" Signature aggregator used by the following UserOperationEvents within this bundle.\n @param aggregator - The aggregator used for the following UserOperationEvents."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":906,"name":"SignatureAggregatorChanged","nameLocation":"3930:26:4","nodeType":"EventDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"3973:10:4","nodeType":"VariableDeclaration","scope":906,"src":"3957:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"3957:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3956:28:4"},"src":"3924:61:4"},{"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"3991:819:4","text":" A custom revert error of handleOps andhandleAggregatedOps, to identify the offending op.\n Should be caught in off-chain handleOps/handleAggregatedOps simulation and not happen on-chain.\n Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n                  so a failure can be attributed to the correct entity."},"errorSelector":"220266b6","id":913,"name":"FailedOp","nameLocation":"4821:8:4","nodeType":"ErrorDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"opIndex","nameLocation":"4838:7:4","nodeType":"VariableDeclaration","scope":913,"src":"4830:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"4830:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":911,"mutability":"mutable","name":"reason","nameLocation":"4854:6:4","nodeType":"VariableDeclaration","scope":913,"src":"4847:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":910,"name":"string","nodeType":"ElementaryTypeName","src":"4847:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4829:32:4"},"src":"4815:47:4"},{"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"4868:429:4","text":" A custom revert error of handleOps and handleAggregatedOps, to report a revert by account or paymaster.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. see FailedOp(uint256,string), above\n @param inner   - data from inner cought revert reason\n @dev note that inner is truncated to 2048 bytes"},"errorSelector":"65c8fd4d","id":922,"name":"FailedOpWithRevert","nameLocation":"5308:18:4","nodeType":"ErrorDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"opIndex","nameLocation":"5335:7:4","nodeType":"VariableDeclaration","scope":922,"src":"5327:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"5327:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"reason","nameLocation":"5351:6:4","nodeType":"VariableDeclaration","scope":922,"src":"5344:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":917,"name":"string","nodeType":"ElementaryTypeName","src":"5344:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"inner","nameLocation":"5365:5:4","nodeType":"VariableDeclaration","scope":922,"src":"5359:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":919,"name":"bytes","nodeType":"ElementaryTypeName","src":"5359:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5326:45:4"},"src":"5302:70:4"},{"errorSelector":"ad7954bc","id":926,"name":"PostOpReverted","nameLocation":"5384:14:4","nodeType":"ErrorDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"returnData","nameLocation":"5405:10:4","nodeType":"VariableDeclaration","scope":926,"src":"5399:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":923,"name":"bytes","nodeType":"ElementaryTypeName","src":"5399:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5398:18:4"},"src":"5378:39:4"},{"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"5423:190:4","text":" Error case when a signature aggregator fails to verify the aggregated signature it had created.\n @param aggregator The aggregator that failed to verify the signature"},"errorSelector":"86a9f750","id":931,"name":"SignatureValidationFailed","nameLocation":"5624:25:4","nodeType":"ErrorDefinition","parameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"aggregator","nameLocation":"5658:10:4","nodeType":"VariableDeclaration","scope":931,"src":"5650:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"5650:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5649:20:4"},"src":"5618:52:4"},{"errorSelector":"6ca7b806","id":935,"name":"SenderAddressResult","nameLocation":"5723:19:4","nodeType":"ErrorDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"sender","nameLocation":"5751:6:4","nodeType":"VariableDeclaration","scope":935,"src":"5743:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"5743:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5742:16:4"},"src":"5717:42:4"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":945,"members":[{"constant":false,"id":939,"mutability":"mutable","name":"userOps","nameLocation":"5865:7:4","nodeType":"VariableDeclaration","scope":945,"src":"5843:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1215_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":937,"nodeType":"UserDefinedTypeName","pathNode":{"id":936,"name":"PackedUserOperation","nameLocations":["5843:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"5843:19:4"},"referencedDeclaration":1215,"src":"5843:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"id":938,"nodeType":"ArrayTypeName","src":"5843:21:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1215_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"aggregator","nameLocation":"5924:10:4","nodeType":"VariableDeclaration","scope":945,"src":"5912:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$829","typeString":"contract IAggregator"},"typeName":{"id":941,"nodeType":"UserDefinedTypeName","pathNode":{"id":940,"name":"IAggregator","nameLocations":["5912:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":829,"src":"5912:11:4"},"referencedDeclaration":829,"src":"5912:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$829","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"signature","nameLocation":"5982:9:4","nodeType":"VariableDeclaration","scope":945,"src":"5976:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":943,"name":"bytes","nodeType":"ElementaryTypeName","src":"5976:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"5812:20:4","nodeType":"StructDefinition","scope":1014,"src":"5805:193:4","visibility":"public"},{"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"6004:383:4","text":" Execute a batch of UserOperations.\n No signature aggregator is used.\n If any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops         - The operations to execute.\n @param beneficiary - The address to receive the fees."},"functionSelector":"765e827f","id":955,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"6401:9:4","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"ops","nameLocation":"6451:3:4","nodeType":"VariableDeclaration","scope":955,"src":"6420:34:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1215_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":948,"nodeType":"UserDefinedTypeName","pathNode":{"id":947,"name":"PackedUserOperation","nameLocations":["6420:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"6420:19:4"},"referencedDeclaration":1215,"src":"6420:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"id":949,"nodeType":"ArrayTypeName","src":"6420:21:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1215_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"beneficiary","nameLocation":"6480:11:4","nodeType":"VariableDeclaration","scope":955,"src":"6464:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"6464:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6410:87:4"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[],"src":"6506:0:4"},"scope":1014,"src":"6392:115:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"6513:260:4","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n @param beneficiary      - The address to receive the fees."},"functionSelector":"dbed18e0","id":965,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"6787:19:4","nodeType":"FunctionDefinition","parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"6848:16:4","nodeType":"VariableDeclaration","scope":965,"src":"6816:48:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$945_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":958,"nodeType":"UserDefinedTypeName","pathNode":{"id":957,"name":"UserOpsPerAggregator","nameLocations":["6816:20:4"],"nodeType":"IdentifierPath","referencedDeclaration":945,"src":"6816:20:4"},"referencedDeclaration":945,"src":"6816:20:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$945_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":959,"nodeType":"ArrayTypeName","src":"6816:22:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$945_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"beneficiary","nameLocation":"6890:11:4","nodeType":"VariableDeclaration","scope":965,"src":"6874:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"6874:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6806:101:4"},"returnParameters":{"id":964,"nodeType":"ParameterList","parameters":[],"src":"6916:0:4"},"scope":1014,"src":"6778:139:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"6923:357:4","text":" Generate a request Id - unique identifier for this request.\n The request ID is a hash over the content of the userOp (except the signature), entrypoint address, chainId and (optionally) 7702 delegate address\n @param userOp - The user operation to generate the request ID for.\n @return hash the hash of this UserOperation"},"functionSelector":"22cdde4c","id":974,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"7294:13:4","nodeType":"FunctionDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"userOp","nameLocation":"7346:6:4","nodeType":"VariableDeclaration","scope":974,"src":"7317:35:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":968,"nodeType":"UserDefinedTypeName","pathNode":{"id":967,"name":"PackedUserOperation","nameLocations":["7317:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"7317:19:4"},"referencedDeclaration":1215,"src":"7317:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"7307:51:4"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":974,"src":"7382:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7382:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7381:9:4"},"scope":1014,"src":"7285:106:4","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"7397:474:4","text":" Gas and return values during simulation.\n @param preOpGas         - The gas used for validation (including preValidationGas)\n @param prefund          - The required prefund for this operation\n @param accountValidationData   - returned validationData from account.\n @param paymasterValidationData - return validationData from paymaster.\n @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)"},"id":986,"members":[{"constant":false,"id":977,"mutability":"mutable","name":"preOpGas","nameLocation":"7912:8:4","nodeType":"VariableDeclaration","scope":986,"src":"7904:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"7904:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"prefund","nameLocation":"7938:7:4","nodeType":"VariableDeclaration","scope":986,"src":"7930:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"7930:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"accountValidationData","nameLocation":"7963:21:4","nodeType":"VariableDeclaration","scope":986,"src":"7955:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"7955:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"8002:23:4","nodeType":"VariableDeclaration","scope":986,"src":"7994:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"7994:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":985,"mutability":"mutable","name":"paymasterContext","nameLocation":"8041:16:4","nodeType":"VariableDeclaration","scope":986,"src":"8035:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":984,"name":"bytes","nodeType":"ElementaryTypeName","src":"8035:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7883:10:4","nodeType":"StructDefinition","scope":1014,"src":"7876:188:4","visibility":"public"},{"documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"8070:420:4","text":" Get counterfactual sender address.\n Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n This method always revert, and returns the address in SenderAddressResult error.\n @notice this method cannot be used for EIP-7702 derived contracts.\n @param initCode - The constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":992,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"8504:16:4","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"initCode","nameLocation":"8534:8:4","nodeType":"VariableDeclaration","scope":992,"src":"8521:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":988,"name":"bytes","nodeType":"ElementaryTypeName","src":"8521:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8520:23:4"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[],"src":"8552:0:4"},"scope":1014,"src":"8495:58:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"errorSelector":"99410554","id":998,"name":"DelegateAndRevert","nameLocation":"8565:17:4","nodeType":"ErrorDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"success","nameLocation":"8588:7:4","nodeType":"VariableDeclaration","scope":998,"src":"8583:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":993,"name":"bool","nodeType":"ElementaryTypeName","src":"8583:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"ret","nameLocation":"8603:3:4","nodeType":"VariableDeclaration","scope":998,"src":"8597:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":995,"name":"bytes","nodeType":"ElementaryTypeName","src":"8597:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8582:25:4"},"src":"8559:49:4"},{"documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"8614:492:4","text":" Helper method for dry-run testing.\n @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\n  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\n  actual EntryPoint code is less convenient.\n @param target a target contract to make a delegatecall from entrypoint\n @param data data to pass to target in a delegatecall"},"functionSelector":"850aaf62","id":1006,"implemented":false,"kind":"function","modifiers":[],"name":"delegateAndRevert","nameLocation":"9120:17:4","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1001,"mutability":"mutable","name":"target","nameLocation":"9146:6:4","nodeType":"VariableDeclaration","scope":1006,"src":"9138:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1000,"name":"address","nodeType":"ElementaryTypeName","src":"9138:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"data","nameLocation":"9169:4:4","nodeType":"VariableDeclaration","scope":1006,"src":"9154:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1002,"name":"bytes","nodeType":"ElementaryTypeName","src":"9154:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9137:37:4"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[],"src":"9183:0:4"},"scope":1014,"src":"9111:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"9190:130:4","text":" @notice Retrieves the immutable SenderCreator contract which is responsible for deployment of sender contracts."},"functionSelector":"09ccb880","id":1013,"implemented":false,"kind":"function","modifiers":[],"name":"senderCreator","nameLocation":"9334:13:4","nodeType":"FunctionDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[],"src":"9347:2:4"},"returnParameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1013,"src":"9373:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISenderCreator_$1089","typeString":"contract ISenderCreator"},"typeName":{"id":1010,"nodeType":"UserDefinedTypeName","pathNode":{"id":1009,"name":"ISenderCreator","nameLocations":["9373:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":1089,"src":"9373:14:4"},"referencedDeclaration":1089,"src":"9373:14:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISenderCreator_$1089","typeString":"contract ISenderCreator"}},"visibility":"internal"}],"src":"9372:16:4"},"scope":1014,"src":"9325:64:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1015,"src":"463:8928:4","usedErrors":[913,922,926,931,935,998],"usedEvents":[856,867,878,889,898,901,906,1098,1106,1114,1120,1128]}],"src":"159:9233:4"},"id":4},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[1033]},"id":1034,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1016,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1033,"linearizedBaseContracts":[1033],"name":"INonceManager","nameLocation":"68:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1017,"nodeType":"StructuredDocumentation","src":"89:416:5","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":1026,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"519:8:5","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"sender","nameLocation":"536:6:5","nodeType":"VariableDeclaration","scope":1026,"src":"528:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"528:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"key","nameLocation":"552:3:5","nodeType":"VariableDeclaration","scope":1026,"src":"544:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":1020,"name":"uint192","nodeType":"ElementaryTypeName","src":"544:7:5","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"527:29:5"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"nonce","nameLocation":"592:5:5","nodeType":"VariableDeclaration","scope":1026,"src":"584:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"584:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"583:15:5"},"scope":1033,"src":"510:89:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"605:531:5","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key.\n @param key - the \"nonce key\" to increment the \"nonce sequence\" for."},"functionSelector":"0bd28e3b","id":1032,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1150:14:5","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"key","nameLocation":"1173:3:5","nodeType":"VariableDeclaration","scope":1032,"src":"1165:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":1028,"name":"uint192","nodeType":"ElementaryTypeName","src":"1165:7:5","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1164:13:5"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[],"src":"1186:0:5"},"scope":1033,"src":"1141:46:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1034,"src":"58:1131:5","usedErrors":[],"usedEvents":[]}],"src":"32:1158:5"},"id":5},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IPaymaster.sol","exportedSymbols":{"IPaymaster":[1070],"PackedUserOperation":[1215]},"id":1071,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1035,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:6"},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":1036,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1071,"sourceUnit":1216,"src":"58:35:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"95:216:6","text":" The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":1070,"linearizedBaseContracts":[1070],"name":"IPaymaster","nameLocation":"322:10:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":1041,"members":[{"id":1038,"name":"opSucceeded","nameLocation":"395:11:6","nodeType":"EnumValue","src":"395:11:6"},{"id":1039,"name":"opReverted","nameLocation":"471:10:6","nodeType":"EnumValue","src":"471:10:6"},{"id":1040,"name":"postOpReverted","nameLocation":"613:14:6","nodeType":"EnumValue","src":"613:14:6"}],"name":"PostOpMode","nameLocation":"344:10:6","nodeType":"EnumDefinition","src":"339:294:6"},{"documentation":{"id":1042,"nodeType":"StructuredDocumentation","src":"639:1444:6","text":" Payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp          - The user operation.\n @param userOpHash      - Hash of the user's request data.\n @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n @return validationData - Signature and time-range of this operation, encoded the same as the return\n                          value of validateUserOperation.\n                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n                                                    other values are invalid for paymaster.\n                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\n                          <6-byte> validAfter - first timestamp this operation is valid\n                          Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"52b7512c","id":1056,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"2097:23:6","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"userOp","nameLocation":"2159:6:6","nodeType":"VariableDeclaration","scope":1056,"src":"2130:35:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":1044,"nodeType":"UserDefinedTypeName","pathNode":{"id":1043,"name":"PackedUserOperation","nameLocations":["2130:19:6"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"2130:19:6"},"referencedDeclaration":1215,"src":"2130:19:6","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"userOpHash","nameLocation":"2183:10:6","nodeType":"VariableDeclaration","scope":1056,"src":"2175:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2175:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"maxCost","nameLocation":"2211:7:6","nodeType":"VariableDeclaration","scope":1056,"src":"2203:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"2203:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2120:104:6"},"returnParameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"context","nameLocation":"2256:7:6","nodeType":"VariableDeclaration","scope":1056,"src":"2243:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1051,"name":"bytes","nodeType":"ElementaryTypeName","src":"2243:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"validationData","nameLocation":"2273:14:6","nodeType":"VariableDeclaration","scope":1056,"src":"2265:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2242:46:6"},"scope":1070,"src":"2088:201:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1057,"nodeType":"StructuredDocumentation","src":"2295:857:6","text":" Post-operation handler.\n Must verify sender is the entryPoint.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. The paymaster still has to pay for gas.\n                        postOpReverted - never passed in a call to postOp().\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual cost of gas used so far (without this postOp call).\n @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n                        and maxPriorityFee (and basefee)\n                        It is not the same as tx.gasprice, which is what the bundler pays."},"functionSelector":"7c627b21","id":1069,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"3166:6:6","nodeType":"FunctionDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"mode","nameLocation":"3193:4:6","nodeType":"VariableDeclaration","scope":1069,"src":"3182:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1041","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":1059,"nodeType":"UserDefinedTypeName","pathNode":{"id":1058,"name":"PostOpMode","nameLocations":["3182:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1041,"src":"3182:10:6"},"referencedDeclaration":1041,"src":"3182:10:6","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1041","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"context","nameLocation":"3222:7:6","nodeType":"VariableDeclaration","scope":1069,"src":"3207:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1061,"name":"bytes","nodeType":"ElementaryTypeName","src":"3207:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"actualGasCost","nameLocation":"3247:13:6","nodeType":"VariableDeclaration","scope":1069,"src":"3239:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"3239:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"actualUserOpFeePerGas","nameLocation":"3278:21:6","nodeType":"VariableDeclaration","scope":1069,"src":"3270:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"3270:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3172:133:6"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[],"src":"3314:0:6"},"scope":1070,"src":"3157:158:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1071,"src":"312:3005:6","usedErrors":[],"usedEvents":[]}],"src":"32:3286:6"},"id":6},"@account-abstraction/contracts/interfaces/ISenderCreator.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/ISenderCreator.sol","exportedSymbols":{"ISenderCreator":[1089]},"id":1090,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1072,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"ISenderCreator","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1089,"linearizedBaseContracts":[1089],"name":"ISenderCreator","nameLocation":"69:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"90:122:7","text":" @dev Creates a new sender contract.\n @return sender Address of the newly created sender contract."},"functionSelector":"570e1a36","id":1080,"implemented":false,"kind":"function","modifiers":[],"name":"createSender","nameLocation":"226:12:7","nodeType":"FunctionDefinition","parameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"initCode","nameLocation":"254:8:7","nodeType":"VariableDeclaration","scope":1080,"src":"239:23:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1074,"name":"bytes","nodeType":"ElementaryTypeName","src":"239:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"238:25:7"},"returnParameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"mutability":"mutable","name":"sender","nameLocation":"290:6:7","nodeType":"VariableDeclaration","scope":1080,"src":"282:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"282:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"281:16:7"},"scope":1089,"src":"217:81:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"304:421:7","text":" Use initCallData to initialize an EIP-7702 account.\n The caller is the EntryPoint contract and it is already verified to be an EIP-7702 account.\n Note: Can be called multiple times as long as an appropriate initCode is supplied\n @param sender - the 'sender' EIP-7702 account to be initialized.\n @param initCallData - the call data to be passed to the sender account call."},"functionSelector":"c09ad0d9","id":1088,"implemented":false,"kind":"function","modifiers":[],"name":"initEip7702Sender","nameLocation":"739:17:7","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"sender","nameLocation":"765:6:7","nodeType":"VariableDeclaration","scope":1088,"src":"757:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"757:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"initCallData","nameLocation":"788:12:7","nodeType":"VariableDeclaration","scope":1088,"src":"773:27:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1084,"name":"bytes","nodeType":"ElementaryTypeName","src":"773:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"756:45:7"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"810:0:7"},"scope":1089,"src":"730:81:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1090,"src":"59:754:7","usedErrors":[],"usedEvents":[]}],"src":"33:781:7"},"id":7},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[1193]},"id":1194,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1091,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"58:212:8","text":" Manage deposits and stakes.\n Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n Stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":1193,"linearizedBaseContracts":[1193],"name":"IStakeManager","nameLocation":"281:13:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":1098,"name":"Deposited","nameLocation":"307:9:8","nodeType":"EventDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"333:7:8","nodeType":"VariableDeclaration","scope":1098,"src":"317:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"317:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1096,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"350:12:8","nodeType":"VariableDeclaration","scope":1098,"src":"342:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"342:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"316:47:8"},"src":"301:63:8"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":1106,"name":"Withdrawn","nameLocation":"376:9:8","nodeType":"EventDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"411:7:8","nodeType":"VariableDeclaration","scope":1106,"src":"395:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1099,"name":"address","nodeType":"ElementaryTypeName","src":"395:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1102,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"436:15:8","nodeType":"VariableDeclaration","scope":1106,"src":"428:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"469:6:8","nodeType":"VariableDeclaration","scope":1106,"src":"461:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"385:96:8"},"src":"370:112:8"},{"anonymous":false,"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":1114,"name":"StakeLocked","nameLocation":"551:11:8","nodeType":"EventDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"588:7:8","nodeType":"VariableDeclaration","scope":1114,"src":"572:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1110,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"613:11:8","nodeType":"VariableDeclaration","scope":1114,"src":"605:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1112,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"642:15:8","nodeType":"VariableDeclaration","scope":1114,"src":"634:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"562:101:8"},"src":"545:119:8"},{"anonymous":false,"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":1120,"name":"StakeUnlocked","nameLocation":"733:13:8","nodeType":"EventDefinition","parameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"763:7:8","nodeType":"VariableDeclaration","scope":1120,"src":"747:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"747:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1118,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"780:12:8","nodeType":"VariableDeclaration","scope":1120,"src":"772:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"746:47:8"},"src":"727:67:8"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":1128,"name":"StakeWithdrawn","nameLocation":"806:14:8","nodeType":"EventDefinition","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"846:7:8","nodeType":"VariableDeclaration","scope":1128,"src":"830:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"830:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"871:15:8","nodeType":"VariableDeclaration","scope":1128,"src":"863:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"863:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1126,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"904:6:8","nodeType":"VariableDeclaration","scope":1128,"src":"896:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:96:8"},"src":"800:117:8"},{"canonicalName":"IStakeManager.DepositInfo","documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"923:697:8","text":" @param deposit         - The entity's deposit.\n @param staked          - True if this entity is staked.\n @param stake           - Actual amount of ether staked for this entity.\n @param unstakeDelaySec - Minimum delay to withdraw the stake.\n @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n @dev Sizes were chosen so that deposit fits into one cell (used during handleOp)\n      and the rest fit into a 2nd cell (used during stake/unstake)\n      - 112 bit allows for 10^15 eth\n      - 48 bit for full timestamp\n      - 32 bit allows 150 years for unstake delay"},"id":1140,"members":[{"constant":false,"id":1131,"mutability":"mutable","name":"deposit","nameLocation":"1662:7:8","nodeType":"VariableDeclaration","scope":1140,"src":"1654:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1130,"name":"uint256","nodeType":"ElementaryTypeName","src":"1654:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"staked","nameLocation":"1684:6:8","nodeType":"VariableDeclaration","scope":1140,"src":"1679:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1132,"name":"bool","nodeType":"ElementaryTypeName","src":"1679:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"stake","nameLocation":"1708:5:8","nodeType":"VariableDeclaration","scope":1140,"src":"1700:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1134,"name":"uint112","nodeType":"ElementaryTypeName","src":"1700:7:8","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1730:15:8","nodeType":"VariableDeclaration","scope":1140,"src":"1723:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1136,"name":"uint32","nodeType":"ElementaryTypeName","src":"1723:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"withdrawTime","nameLocation":"1762:12:8","nodeType":"VariableDeclaration","scope":1140,"src":"1755:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1138,"name":"uint48","nodeType":"ElementaryTypeName","src":"1755:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1632:11:8","nodeType":"StructDefinition","scope":1193,"src":"1625:156:8","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":1145,"members":[{"constant":false,"id":1142,"mutability":"mutable","name":"stake","nameLocation":"1885:5:8","nodeType":"VariableDeclaration","scope":1145,"src":"1877:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1877:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1908:15:8","nodeType":"VariableDeclaration","scope":1145,"src":"1900:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1857:9:8","nodeType":"StructDefinition","scope":1193,"src":"1850:80:8","visibility":"public"},{"documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"1936:149:8","text":" Get deposit info.\n @param account - The account to query.\n @return info   - Full deposit information of given account."},"functionSelector":"5287ce12","id":1154,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"2099:14:8","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"account","nameLocation":"2131:7:8","nodeType":"VariableDeclaration","scope":1154,"src":"2123:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2113:31:8"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"info","nameLocation":"2187:4:8","nodeType":"VariableDeclaration","scope":1154,"src":"2168:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$1140_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":1151,"nodeType":"UserDefinedTypeName","pathNode":{"id":1150,"name":"DepositInfo","nameLocations":["2168:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1140,"src":"2168:11:8"},"referencedDeclaration":1140,"src":"2168:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$1140_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2167:25:8"},"scope":1193,"src":"2090:103:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"2199:155:8","text":" Get account balance.\n @param account - The account to query.\n @return        - The deposit (for gas payment) of the account."},"functionSelector":"70a08231","id":1162,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2368:9:8","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"account","nameLocation":"2386:7:8","nodeType":"VariableDeclaration","scope":1162,"src":"2378:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"2378:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2377:17:8"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1162,"src":"2418:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"2418:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2417:9:8"},"scope":1193,"src":"2359:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"2433:106:8","text":" Add to the deposit of the given account.\n @param account - The account to add to."},"functionSelector":"b760faf9","id":1168,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2553:9:8","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"account","nameLocation":"2571:7:8","nodeType":"VariableDeclaration","scope":1168,"src":"2563:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"2563:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2562:17:8"},"returnParameters":{"id":1167,"nodeType":"ParameterList","parameters":[],"src":"2596:0:8"},"scope":1193,"src":"2544:53:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1169,"nodeType":"StructuredDocumentation","src":"2603:202:8","text":" Add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param unstakeDelaySec - The new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":1174,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2819:8:8","nodeType":"FunctionDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"2835:15:8","nodeType":"VariableDeclaration","scope":1174,"src":"2828:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1170,"name":"uint32","nodeType":"ElementaryTypeName","src":"2828:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2827:24:8"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[],"src":"2868:0:8"},"scope":1193,"src":"2810:59:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"2875:128:8","text":" Attempt to unlock the stake.\n The value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":1178,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"3017:11:8","nodeType":"FunctionDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[],"src":"3028:2:8"},"returnParameters":{"id":1177,"nodeType":"ParameterList","parameters":[],"src":"3039:0:8"},"scope":1193,"src":"3008:32:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"3046:197:8","text":" Withdraw from the (unlocked) stake.\n Must first call unlockStake and wait for the unstakeDelay to pass.\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":1184,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"3257:13:8","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3287:15:8","nodeType":"VariableDeclaration","scope":1184,"src":"3271:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"3271:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3270:33:8"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[],"src":"3312:0:8"},"scope":1193,"src":"3248:65:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"3319:170:8","text":" Withdraw from the deposit.\n @param withdrawAddress - The address to send withdrawn value.\n @param withdrawAmount  - The amount to withdraw."},"functionSelector":"205c2878","id":1192,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3503:10:8","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3539:15:8","nodeType":"VariableDeclaration","scope":1192,"src":"3523:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"3523:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3572:14:8","nodeType":"VariableDeclaration","scope":1192,"src":"3564:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"3564:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3513:79:8"},"returnParameters":{"id":1191,"nodeType":"ParameterList","parameters":[],"src":"3601:0:8"},"scope":1193,"src":"3494:108:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1194,"src":"271:3333:8","usedErrors":[],"usedEvents":[1098,1106,1114,1120,1128]}],"src":"32:3573:8"},"id":8},"@account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","exportedSymbols":{"PackedUserOperation":[1215]},"id":1216,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1195,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:9"},{"canonicalName":"PackedUserOperation","documentation":{"id":1196,"nodeType":"StructuredDocumentation","src":"58:1163:9","text":" User Operation struct\n @param sender                - The sender account of this request.\n @param nonce                 - Unique value the sender uses to verify it is not a replay.\n @param initCode              - If set, the account contract will be created by this constructor\n @param callData              - The method call to execute on this account.\n @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\n @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n                                Covers batch overhead.\n @param gasFees               - packed gas fields maxPriorityFeePerGas and maxFeePerGas - Same as EIP-1559 gas parameters.\n @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\n                                The paymaster will pay for the transaction instead of the sender.\n @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID."},"id":1215,"members":[{"constant":false,"id":1198,"mutability":"mutable","name":"sender","nameLocation":"1263:6:9","nodeType":"VariableDeclaration","scope":1215,"src":"1255:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"nonce","nameLocation":"1283:5:9","nodeType":"VariableDeclaration","scope":1215,"src":"1275:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1275:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"initCode","nameLocation":"1300:8:9","nodeType":"VariableDeclaration","scope":1215,"src":"1294:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1201,"name":"bytes","nodeType":"ElementaryTypeName","src":"1294:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1204,"mutability":"mutable","name":"callData","nameLocation":"1320:8:9","nodeType":"VariableDeclaration","scope":1215,"src":"1314:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1203,"name":"bytes","nodeType":"ElementaryTypeName","src":"1314:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1206,"mutability":"mutable","name":"accountGasLimits","nameLocation":"1342:16:9","nodeType":"VariableDeclaration","scope":1215,"src":"1334:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1334:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1372:18:9","nodeType":"VariableDeclaration","scope":1215,"src":"1364:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1364:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1210,"mutability":"mutable","name":"gasFees","nameLocation":"1404:7:9","nodeType":"VariableDeclaration","scope":1215,"src":"1396:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1396:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1212,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1423:16:9","nodeType":"VariableDeclaration","scope":1215,"src":"1417:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1211,"name":"bytes","nodeType":"ElementaryTypeName","src":"1417:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1214,"mutability":"mutable","name":"signature","nameLocation":"1451:9:9","nodeType":"VariableDeclaration","scope":1215,"src":"1445:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1213,"name":"bytes","nodeType":"ElementaryTypeName","src":"1445:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PackedUserOperation","nameLocation":"1229:19:9","nodeType":"StructDefinition","scope":1216,"src":"1222:241:9","visibility":"public"}],"src":"32:1432:9"},"id":9},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2111],"Ownable":[1363]},"id":1364,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1217,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1219,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1364,"sourceUnit":2112,"src":"128:45:10","symbolAliases":[{"foreign":{"id":1218,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"136:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1221,"name":"Context","nameLocations":["692:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2111,"src":"692:7:10"},"id":1222,"nodeType":"InheritanceSpecifier","src":"692:7:10"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1220,"nodeType":"StructuredDocumentation","src":"175:487:10","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1363,"linearizedBaseContracts":[1363,2111],"name":"Ownable","nameLocation":"681:7:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1224,"mutability":"mutable","name":"_owner","nameLocation":"722:6:10","nodeType":"VariableDeclaration","scope":1363,"src":"706:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"735:85:10","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":1229,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:10","nodeType":"ErrorDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"account","nameLocation":"866:7:10","nodeType":"VariableDeclaration","scope":1229,"src":"858:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:10"},"src":"825:50:10"},{"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"881:82:10","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":1234,"name":"OwnableInvalidOwner","nameLocation":"974:19:10","nodeType":"ErrorDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"owner","nameLocation":"1002:5:10","nodeType":"VariableDeclaration","scope":1234,"src":"994:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:10"},"src":"968:41:10"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1240,"name":"OwnershipTransferred","nameLocation":"1021:20:10","nodeType":"EventDefinition","parameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:10","nodeType":"VariableDeclaration","scope":1240,"src":"1042:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1238,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:10","nodeType":"VariableDeclaration","scope":1240,"src":"1073:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:10"},"src":"1015:84:10"},{"body":{"id":1265,"nodeType":"Block","src":"1259:153:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1246,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"1273:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:10","typeDescriptions":{}}},"id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1260,"nodeType":"IfStatement","src":"1269:95:10","trueBody":{"id":1259,"nodeType":"Block","src":"1301:63:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:10","typeDescriptions":{}}},"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1252,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1322:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1258,"nodeType":"RevertStatement","src":"1315:38:10"}]}},{"expression":{"arguments":[{"id":1262,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"1392:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1261,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"1373:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1264,"nodeType":"ExpressionStatement","src":"1373:32:10"}]},"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"1105:115:10","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":1266,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:10","nodeType":"VariableDeclaration","scope":1266,"src":"1237:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:10"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[],"src":"1259:0:10"},"scope":1363,"src":"1225:187:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1273,"nodeType":"Block","src":"1521:41:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1269,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"1531:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1271,"nodeType":"ExpressionStatement","src":"1531:13:10"},{"id":1272,"nodeType":"PlaceholderStatement","src":"1554:1:10"}]},"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"1418:77:10","text":" @dev Throws if called by any account other than the owner."},"id":1274,"name":"onlyOwner","nameLocation":"1509:9:10","nodeType":"ModifierDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[],"src":"1518:2:10"},"src":"1500:62:10","virtual":false,"visibility":"internal"},{"body":{"id":1282,"nodeType":"Block","src":"1693:30:10","statements":[{"expression":{"id":1280,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"1710:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1279,"id":1281,"nodeType":"Return","src":"1703:13:10"}]},"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"1568:65:10","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1283,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:10","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"1652:2:10"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1283,"src":"1684:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:10"},"scope":1363,"src":"1638:85:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1299,"nodeType":"Block","src":"1841:117:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1287,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"1855:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1289,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"1866:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1298,"nodeType":"IfStatement","src":"1851:101:10","trueBody":{"id":1297,"nodeType":"Block","src":"1880:72:10","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1293,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"1928:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1292,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"1901:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1296,"nodeType":"RevertStatement","src":"1894:47:10"}]}}]},"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"1729:62:10","text":" @dev Throws if the sender is not the owner."},"id":1300,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:10","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[],"src":"1816:2:10"},"returnParameters":{"id":1286,"nodeType":"ParameterList","parameters":[],"src":"1841:0:10"},"scope":1363,"src":"1796:162:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1313,"nodeType":"Block","src":"2347:47:10","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:10","typeDescriptions":{}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1306,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"2357:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1312,"nodeType":"ExpressionStatement","src":"2357:30:10"}]},"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"1964:324:10","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1314,"implemented":true,"kind":"function","modifiers":[{"id":1304,"kind":"modifierInvocation","modifierName":{"id":1303,"name":"onlyOwner","nameLocations":["2337:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2337:9:10"},"nodeType":"ModifierInvocation","src":"2337:9:10"}],"name":"renounceOwnership","nameLocation":"2302:17:10","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"2319:2:10"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[],"src":"2347:0:10"},"scope":1363,"src":"2293:101:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1341,"nodeType":"Block","src":"2613:145:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1322,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"2627:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:10","typeDescriptions":{}}},"id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1336,"nodeType":"IfStatement","src":"2623:91:10","trueBody":{"id":1335,"nodeType":"Block","src":"2651:63:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:10","typeDescriptions":{}}},"id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1328,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"2672:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1334,"nodeType":"RevertStatement","src":"2665:38:10"}]}},{"expression":{"arguments":[{"id":1338,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"2742:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1337,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"2723:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1340,"nodeType":"ExpressionStatement","src":"2723:28:10"}]},"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"2400:138:10","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1342,"implemented":true,"kind":"function","modifiers":[{"id":1320,"kind":"modifierInvocation","modifierName":{"id":1319,"name":"onlyOwner","nameLocations":["2603:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2603:9:10"},"nodeType":"ModifierInvocation","src":"2603:9:10"}],"name":"transferOwnership","nameLocation":"2552:17:10","nodeType":"FunctionDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:10","nodeType":"VariableDeclaration","scope":1342,"src":"2570:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:10"},"returnParameters":{"id":1321,"nodeType":"ParameterList","parameters":[],"src":"2613:0:10"},"scope":1363,"src":"2543:215:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1361,"nodeType":"Block","src":"2975:124:10","statements":[{"assignments":[1349],"declarations":[{"constant":false,"id":1349,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:10","nodeType":"VariableDeclaration","scope":1361,"src":"2985:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1351,"initialValue":{"id":1350,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"3004:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:10"},{"expression":{"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1352,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"3020:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1353,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"3029:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1355,"nodeType":"ExpressionStatement","src":"3020:17:10"},{"eventCall":{"arguments":[{"id":1357,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"3073:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1358,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"3083:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1356,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3052:20:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1360,"nodeType":"EmitStatement","src":"3047:45:10"}]},"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"2764:143:10","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1362,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:10","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:10","nodeType":"VariableDeclaration","scope":1362,"src":"2940:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:10"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[],"src":"2975:0:10"},"scope":1363,"src":"2912:187:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1364,"src":"663:2438:10","usedErrors":[1229,1234],"usedEvents":[1240]}],"src":"102:3000:10"},"id":10},"@openzeppelin/contracts/access/Ownable2Step.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable2Step.sol","exportedSymbols":{"Ownable":[1363],"Ownable2Step":[1449]},"id":1450,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1365,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:11"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"./Ownable.sol","id":1367,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1450,"sourceUnit":1364,"src":"133:38:11","symbolAliases":[{"foreign":{"id":1366,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"141:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1369,"name":"Ownable","nameLocations":["1018:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1363,"src":"1018:7:11"},"id":1370,"nodeType":"InheritanceSpecifier","src":"1018:7:11"}],"canonicalName":"Ownable2Step","contractDependencies":[],"contractKind":"contract","documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"173:810:11","text":" @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n This extension of the {Ownable} contract includes a two-step mechanism to transfer\n ownership, where the new owner must call {acceptOwnership} in order to replace the\n old one. This can help prevent common mistakes, such as transfers of ownership to\n incorrect accounts, or to contracts that are unable to interact with the\n permission system.\n The initial owner is specified at deployment time in the constructor for `Ownable`. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."},"fullyImplemented":true,"id":1449,"linearizedBaseContracts":[1449,1363,2111],"name":"Ownable2Step","nameLocation":"1002:12:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1372,"mutability":"mutable","name":"_pendingOwner","nameLocation":"1048:13:11","nodeType":"VariableDeclaration","scope":1449,"src":"1032:29:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"1032:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700","id":1378,"name":"OwnershipTransferStarted","nameLocation":"1074:24:11","nodeType":"EventDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1115:13:11","nodeType":"VariableDeclaration","scope":1378,"src":"1099:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"1099:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1376,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1146:8:11","nodeType":"VariableDeclaration","scope":1378,"src":"1130:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1375,"name":"address","nodeType":"ElementaryTypeName","src":"1130:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1098:57:11"},"src":"1068:88:11"},{"body":{"id":1386,"nodeType":"Block","src":"1294:37:11","statements":[{"expression":{"id":1384,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"1311:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1383,"id":1385,"nodeType":"Return","src":"1304:20:11"}]},"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"1162:65:11","text":" @dev Returns the address of the pending owner."},"functionSelector":"e30c3978","id":1387,"implemented":true,"kind":"function","modifiers":[],"name":"pendingOwner","nameLocation":"1241:12:11","nodeType":"FunctionDefinition","parameters":{"id":1380,"nodeType":"ParameterList","parameters":[],"src":"1253:2:11"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1387,"src":"1285:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1284:9:11"},"scope":1449,"src":"1232:99:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1342],"body":{"id":1406,"nodeType":"Block","src":"1728:99:11","statements":[{"expression":{"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1396,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"1738:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1397,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"1754:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1738:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1399,"nodeType":"ExpressionStatement","src":"1738:24:11"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"1802:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1403,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"1811:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1400,"name":"OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"1777:24:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1777:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1405,"nodeType":"EmitStatement","src":"1772:48:11"}]},"documentation":{"id":1388,"nodeType":"StructuredDocumentation","src":"1337:307:11","text":" @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner.\n Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."},"functionSelector":"f2fde38b","id":1407,"implemented":true,"kind":"function","modifiers":[{"id":1394,"kind":"modifierInvocation","modifierName":{"id":1393,"name":"onlyOwner","nameLocations":["1718:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"1718:9:11"},"nodeType":"ModifierInvocation","src":"1718:9:11"}],"name":"transferOwnership","nameLocation":"1658:17:11","nodeType":"FunctionDefinition","overrides":{"id":1392,"nodeType":"OverrideSpecifier","overrides":[],"src":"1709:8:11"},"parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"newOwner","nameLocation":"1684:8:11","nodeType":"VariableDeclaration","scope":1407,"src":"1676:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"1676:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1675:18:11"},"returnParameters":{"id":1395,"nodeType":"ParameterList","parameters":[],"src":"1728:0:11"},"scope":1449,"src":"1649:178:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1362],"body":{"id":1423,"nodeType":"Block","src":"2083:81:11","statements":[{"expression":{"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2093:20:11","subExpression":{"id":1414,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"2100:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"ExpressionStatement","src":"2093:20:11"},{"expression":{"arguments":[{"id":1420,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"2148:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1417,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2123:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Ownable2Step_$1449_$","typeString":"type(contract super Ownable2Step)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2129:18:11","memberName":"_transferOwnership","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"2123:24:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2123:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1422,"nodeType":"ExpressionStatement","src":"2123:34:11"}]},"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"1833:173:11","text":" @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."},"id":1424,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2020:18:11","nodeType":"FunctionDefinition","overrides":{"id":1412,"nodeType":"OverrideSpecifier","overrides":[],"src":"2074:8:11"},"parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"newOwner","nameLocation":"2047:8:11","nodeType":"VariableDeclaration","scope":1424,"src":"2039:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1409,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2038:18:11"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[],"src":"2083:0:11"},"scope":1449,"src":"2011:153:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1447,"nodeType":"Block","src":"2286:187:11","statements":[{"assignments":[1429],"declarations":[{"constant":false,"id":1429,"mutability":"mutable","name":"sender","nameLocation":"2304:6:11","nodeType":"VariableDeclaration","scope":1447,"src":"2296:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"2296:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1432,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1430,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"2313:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2313:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2296:29:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1433,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"2339:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2339:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1435,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"2357:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2339:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1442,"nodeType":"IfStatement","src":"2335:96:11","trueBody":{"id":1441,"nodeType":"Block","src":"2365:66:11","statements":[{"errorCall":{"arguments":[{"id":1438,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"2413:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1437,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"2386:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2386:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1440,"nodeType":"RevertStatement","src":"2379:41:11"}]}},{"expression":{"arguments":[{"id":1444,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"2459:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1443,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[1424],"referencedDeclaration":1424,"src":"2440:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2440:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1446,"nodeType":"ExpressionStatement","src":"2440:26:11"}]},"documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"2170:69:11","text":" @dev The new owner accepts the ownership transfer."},"functionSelector":"79ba5097","id":1448,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"2253:15:11","nodeType":"FunctionDefinition","parameters":{"id":1426,"nodeType":"ParameterList","parameters":[],"src":"2268:2:11"},"returnParameters":{"id":1427,"nodeType":"ParameterList","parameters":[],"src":"2286:0:11"},"scope":1449,"src":"2244:229:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1450,"src":"984:1491:11","usedErrors":[1229,1234],"usedEvents":[1240,1378]}],"src":"107:2369:11"},"id":11},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[1531],"IERC165":[2123],"IERC20":[1617]},"id":1532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1451,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:12"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":1453,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1532,"sourceUnit":1540,"src":"133:36:12","symbolAliases":[{"foreign":{"id":1452,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"141:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":1455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1532,"sourceUnit":1536,"src":"170:38:12","symbolAliases":[{"foreign":{"id":1454,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"178:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1457,"name":"IERC20","nameLocations":["590:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"590:6:12"},"id":1458,"nodeType":"InheritanceSpecifier","src":"590:6:12"},{"baseName":{"id":1459,"name":"IERC165","nameLocations":["598:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2123,"src":"598:7:12"},"id":1460,"nodeType":"InheritanceSpecifier","src":"598:7:12"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":1456,"nodeType":"StructuredDocumentation","src":"210:357:12","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":1531,"linearizedBaseContracts":[1531,2123,1617],"name":"IERC1363","nameLocation":"578:8:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"1148:370:12","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":1470,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:12","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"to","nameLocation":"1556:2:12","nodeType":"VariableDeclaration","scope":1470,"src":"1548:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"value","nameLocation":"1568:5:12","nodeType":"VariableDeclaration","scope":1470,"src":"1560:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:12"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1470,"src":"1593:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1467,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:12"},"scope":1531,"src":"1523:76:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"1605:453:12","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":1482,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:12","nodeType":"FunctionDefinition","parameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"to","nameLocation":"2096:2:12","nodeType":"VariableDeclaration","scope":1482,"src":"2088:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1475,"mutability":"mutable","name":"value","nameLocation":"2108:5:12","nodeType":"VariableDeclaration","scope":1482,"src":"2100:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1477,"mutability":"mutable","name":"data","nameLocation":"2130:4:12","nodeType":"VariableDeclaration","scope":1482,"src":"2115:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1476,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:12"},"returnParameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1482,"src":"2154:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1479,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:12"},"scope":1531,"src":"2063:97:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1483,"nodeType":"StructuredDocumentation","src":"2166:453:12","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":1494,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:12","nodeType":"FunctionDefinition","parameters":{"id":1490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"from","nameLocation":"2661:4:12","nodeType":"VariableDeclaration","scope":1494,"src":"2653:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1487,"mutability":"mutable","name":"to","nameLocation":"2675:2:12","nodeType":"VariableDeclaration","scope":1494,"src":"2667:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1486,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1489,"mutability":"mutable","name":"value","nameLocation":"2687:5:12","nodeType":"VariableDeclaration","scope":1494,"src":"2679:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:12"},"returnParameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1494,"src":"2712:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1491,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:12"},"scope":1531,"src":"2624:94:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"2724:536:12","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":1508,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:12","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"from","nameLocation":"3302:4:12","nodeType":"VariableDeclaration","scope":1508,"src":"3294:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"to","nameLocation":"3316:2:12","nodeType":"VariableDeclaration","scope":1508,"src":"3308:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"value","nameLocation":"3328:5:12","nodeType":"VariableDeclaration","scope":1508,"src":"3320:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"data","nameLocation":"3350:4:12","nodeType":"VariableDeclaration","scope":1508,"src":"3335:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1502,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:12"},"returnParameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1508,"src":"3374:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1505,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:12"},"scope":1531,"src":"3265:115:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1509,"nodeType":"StructuredDocumentation","src":"3386:390:12","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":1518,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:12","nodeType":"FunctionDefinition","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"mutability":"mutable","name":"spender","nameLocation":"3813:7:12","nodeType":"VariableDeclaration","scope":1518,"src":"3805:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1510,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"value","nameLocation":"3830:5:12","nodeType":"VariableDeclaration","scope":1518,"src":"3822:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:12"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1518,"src":"3855:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1515,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:12"},"scope":1531,"src":"3781:80:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"3867:478:12","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":1530,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:12","nodeType":"FunctionDefinition","parameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"spender","nameLocation":"4382:7:12","nodeType":"VariableDeclaration","scope":1530,"src":"4374:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1523,"mutability":"mutable","name":"value","nameLocation":"4399:5:12","nodeType":"VariableDeclaration","scope":1530,"src":"4391:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1525,"mutability":"mutable","name":"data","nameLocation":"4421:4:12","nodeType":"VariableDeclaration","scope":1530,"src":"4406:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:12"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1530,"src":"4445:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1527,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:12"},"scope":1531,"src":"4350:101:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1532,"src":"568:3885:12","usedErrors":[],"usedEvents":[1551,1560]}],"src":"107:4347:12"},"id":12},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[2123]},"id":1536,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1533,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:13"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":1535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1536,"sourceUnit":2124,"src":"133:59:13","symbolAliases":[{"foreign":{"id":1534,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"141:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:13"},"id":13},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[1617]},"id":1540,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1537,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"105:25:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":1539,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1540,"sourceUnit":1618,"src":"132:49:14","symbolAliases":[{"foreign":{"id":1538,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"140:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:77:14"},"id":14},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1617]},"id":1618,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1541,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"133:71:15","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1617,"linearizedBaseContracts":[1617],"name":"IERC20","nameLocation":"215:6:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"228:158:15","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1551,"name":"Transfer","nameLocation":"397:8:15","nodeType":"EventDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:15","nodeType":"VariableDeclaration","scope":1551,"src":"406:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1547,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:15","nodeType":"VariableDeclaration","scope":1551,"src":"428:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:15","nodeType":"VariableDeclaration","scope":1551,"src":"448:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:15"},"src":"391:72:15"},{"anonymous":false,"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"469:148:15","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1560,"name":"Approval","nameLocation":"628:8:15","nodeType":"EventDefinition","parameters":{"id":1559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:15","nodeType":"VariableDeclaration","scope":1560,"src":"637:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1556,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:15","nodeType":"VariableDeclaration","scope":1560,"src":"660:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1558,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:15","nodeType":"VariableDeclaration","scope":1560,"src":"685:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:15"},"src":"622:78:15"},{"documentation":{"id":1561,"nodeType":"StructuredDocumentation","src":"706:65:15","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1566,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:15","nodeType":"FunctionDefinition","parameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"796:2:15"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1566,"src":"822:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:15"},"scope":1617,"src":"776:55:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1567,"nodeType":"StructuredDocumentation","src":"837:71:15","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1574,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:15","nodeType":"FunctionDefinition","parameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"account","nameLocation":"940:7:15","nodeType":"VariableDeclaration","scope":1574,"src":"932:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1568,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:15"},"returnParameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1574,"src":"972:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:15"},"scope":1617,"src":"913:68:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"987:213:15","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1584,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:15","nodeType":"FunctionDefinition","parameters":{"id":1580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"to","nameLocation":"1231:2:15","nodeType":"VariableDeclaration","scope":1584,"src":"1223:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1579,"mutability":"mutable","name":"value","nameLocation":"1243:5:15","nodeType":"VariableDeclaration","scope":1584,"src":"1235:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:15"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1584,"src":"1268:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1581,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:15"},"scope":1617,"src":"1205:69:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"1280:264:15","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1594,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:15","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"owner","nameLocation":"1576:5:15","nodeType":"VariableDeclaration","scope":1594,"src":"1568:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"spender","nameLocation":"1591:7:15","nodeType":"VariableDeclaration","scope":1594,"src":"1583:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1588,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:15"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1594,"src":"1623:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:15"},"scope":1617,"src":"1549:83:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"1638:667:15","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1604,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:15","nodeType":"FunctionDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"spender","nameLocation":"2335:7:15","nodeType":"VariableDeclaration","scope":1604,"src":"2327:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1599,"mutability":"mutable","name":"value","nameLocation":"2352:5:15","nodeType":"VariableDeclaration","scope":1604,"src":"2344:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:15"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1604,"src":"2377:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1601,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:15"},"scope":1617,"src":"2310:73:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"2389:297:15","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1616,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:15","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"from","nameLocation":"2721:4:15","nodeType":"VariableDeclaration","scope":1616,"src":"2713:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"to","nameLocation":"2735:2:15","nodeType":"VariableDeclaration","scope":1616,"src":"2727:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"value","nameLocation":"2747:5:15","nodeType":"VariableDeclaration","scope":1616,"src":"2739:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:15"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1616,"src":"2772:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1613,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:15"},"scope":1617,"src":"2691:87:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1618,"src":"205:2575:15","usedErrors":[],"usedEvents":[1551,1560]}],"src":"106:2675:15"},"id":15},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[1531],"IERC20":[1617],"SafeERC20":[2081]},"id":2082,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1619,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1621,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2082,"sourceUnit":1618,"src":"141:37:16","symbolAliases":[{"foreign":{"id":1620,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"149:6:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":1623,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2082,"sourceUnit":1532,"src":"179:58:16","symbolAliases":[{"foreign":{"id":1622,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"187:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"239:458:16","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2081,"linearizedBaseContracts":[2081],"name":"SafeERC20","nameLocation":"706:9:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"722:65:16","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":1629,"name":"SafeERC20FailedOperation","nameLocation":"798:24:16","nodeType":"ErrorDefinition","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"token","nameLocation":"831:5:16","nodeType":"VariableDeclaration","scope":1629,"src":"823:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1626,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:16"},"src":"792:46:16"},{"documentation":{"id":1630,"nodeType":"StructuredDocumentation","src":"844:71:16","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1638,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:16","nodeType":"ErrorDefinition","parameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1632,"mutability":"mutable","name":"spender","nameLocation":"967:7:16","nodeType":"VariableDeclaration","scope":1638,"src":"959:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1631,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1634,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:16","nodeType":"VariableDeclaration","scope":1638,"src":"976:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1633,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:16","nodeType":"VariableDeclaration","scope":1638,"src":"1002:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:16"},"src":"920:109:16"},{"body":{"id":1661,"nodeType":"Block","src":"1291:88:16","statements":[{"expression":{"arguments":[{"id":1650,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1321:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1653,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1343:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:16","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1584,"src":"1343:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1655,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"1360:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"1364:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1657,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1651,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:16","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1649,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1301:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1617_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1660,"nodeType":"ExpressionStatement","src":"1301:71:16"}]},"documentation":{"id":1639,"nodeType":"StructuredDocumentation","src":"1035:179:16","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1662,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:16","nodeType":"FunctionDefinition","parameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"token","nameLocation":"1248:5:16","nodeType":"VariableDeclaration","scope":1662,"src":"1241:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},"typeName":{"id":1641,"nodeType":"UserDefinedTypeName","pathNode":{"id":1640,"name":"IERC20","nameLocations":["1241:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"1241:6:16"},"referencedDeclaration":1617,"src":"1241:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1644,"mutability":"mutable","name":"to","nameLocation":"1263:2:16","nodeType":"VariableDeclaration","scope":1662,"src":"1255:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1643,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1646,"mutability":"mutable","name":"value","nameLocation":"1275:5:16","nodeType":"VariableDeclaration","scope":1662,"src":"1267:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:16"},"returnParameters":{"id":1648,"nodeType":"ParameterList","parameters":[],"src":"1291:0:16"},"scope":2081,"src":"1219:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1688,"nodeType":"Block","src":"1708:98:16","statements":[{"expression":{"arguments":[{"id":1676,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"1738:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1679,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"1760:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:16","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"1760:18:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1681,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"1781:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1682,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"1787:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"1791:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1677,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:16","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1675,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1718:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1617_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1687,"nodeType":"ExpressionStatement","src":"1718:81:16"}]},"documentation":{"id":1663,"nodeType":"StructuredDocumentation","src":"1385:228:16","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1689,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:16","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"token","nameLocation":"1651:5:16","nodeType":"VariableDeclaration","scope":1689,"src":"1644:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},"typeName":{"id":1665,"nodeType":"UserDefinedTypeName","pathNode":{"id":1664,"name":"IERC20","nameLocations":["1644:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"1644:6:16"},"referencedDeclaration":1617,"src":"1644:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"from","nameLocation":"1666:4:16","nodeType":"VariableDeclaration","scope":1689,"src":"1658:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1670,"mutability":"mutable","name":"to","nameLocation":"1680:2:16","nodeType":"VariableDeclaration","scope":1689,"src":"1672:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1669,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1672,"mutability":"mutable","name":"value","nameLocation":"1692:5:16","nodeType":"VariableDeclaration","scope":1689,"src":"1684:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:16"},"returnParameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"1708:0:16"},"scope":2081,"src":"1618:188:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1714,"nodeType":"Block","src":"2033:99:16","statements":[{"expression":{"arguments":[{"id":1703,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"2074:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1706,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"2096:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:16","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1584,"src":"2096:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1708,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"2113:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"2117:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1710,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1704,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:16","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1702,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"2050:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1617_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1701,"id":1713,"nodeType":"Return","src":"2043:82:16"}]},"documentation":{"id":1690,"nodeType":"StructuredDocumentation","src":"1812:126:16","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":1715,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:16","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"token","nameLocation":"1975:5:16","nodeType":"VariableDeclaration","scope":1715,"src":"1968:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},"typeName":{"id":1692,"nodeType":"UserDefinedTypeName","pathNode":{"id":1691,"name":"IERC20","nameLocations":["1968:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"1968:6:16"},"referencedDeclaration":1617,"src":"1968:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1695,"mutability":"mutable","name":"to","nameLocation":"1990:2:16","nodeType":"VariableDeclaration","scope":1715,"src":"1982:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1697,"mutability":"mutable","name":"value","nameLocation":"2002:5:16","nodeType":"VariableDeclaration","scope":1715,"src":"1994:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:16"},"returnParameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1715,"src":"2027:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1699,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:16"},"scope":2081,"src":"1943:189:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1743,"nodeType":"Block","src":"2381:109:16","statements":[{"expression":{"arguments":[{"id":1731,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"2422:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1734,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"2444:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:16","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"2444:18:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1736,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"2465:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1737,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"2471:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"2475:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1732,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:16","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1730,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"2398:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1617_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1729,"id":1742,"nodeType":"Return","src":"2391:92:16"}]},"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"2138:130:16","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:16","nodeType":"FunctionDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"token","nameLocation":"2309:5:16","nodeType":"VariableDeclaration","scope":1744,"src":"2302:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},"typeName":{"id":1718,"nodeType":"UserDefinedTypeName","pathNode":{"id":1717,"name":"IERC20","nameLocations":["2302:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"2302:6:16"},"referencedDeclaration":1617,"src":"2302:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"from","nameLocation":"2324:4:16","nodeType":"VariableDeclaration","scope":1744,"src":"2316:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"to","nameLocation":"2338:2:16","nodeType":"VariableDeclaration","scope":1744,"src":"2330:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1722,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1725,"mutability":"mutable","name":"value","nameLocation":"2350:5:16","nodeType":"VariableDeclaration","scope":1744,"src":"2342:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:16"},"returnParameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1744,"src":"2375:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1727,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:16"},"scope":2081,"src":"2273:217:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1774,"nodeType":"Block","src":"3232:139:16","statements":[{"assignments":[1756],"declarations":[{"constant":false,"id":1756,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:16","nodeType":"VariableDeclaration","scope":1774,"src":"3242:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1755,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1765,"initialValue":{"arguments":[{"arguments":[{"id":1761,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2081","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2081","typeString":"library SafeERC20"}],"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:16","typeDescriptions":{}}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1763,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"3296:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1757,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"3265:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:16","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1594,"src":"3265:15:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:16"},{"expression":{"arguments":[{"id":1767,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"3327:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},{"id":1768,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"3334:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1769,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"3343:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"3358:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1766,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"3314:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1617_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1773,"nodeType":"ExpressionStatement","src":"3314:50:16"}]},"documentation":{"id":1745,"nodeType":"StructuredDocumentation","src":"2496:645:16","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1775,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:16","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"token","nameLocation":"3184:5:16","nodeType":"VariableDeclaration","scope":1775,"src":"3177:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},"typeName":{"id":1747,"nodeType":"UserDefinedTypeName","pathNode":{"id":1746,"name":"IERC20","nameLocations":["3177:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"3177:6:16"},"referencedDeclaration":1617,"src":"3177:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"spender","nameLocation":"3199:7:16","nodeType":"VariableDeclaration","scope":1775,"src":"3191:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1749,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1752,"mutability":"mutable","name":"value","nameLocation":"3216:5:16","nodeType":"VariableDeclaration","scope":1775,"src":"3208:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1751,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:16"},"returnParameters":{"id":1754,"nodeType":"ParameterList","parameters":[],"src":"3232:0:16"},"scope":2081,"src":"3146:225:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1817,"nodeType":"Block","src":"4137:370:16","statements":[{"id":1816,"nodeType":"UncheckedBlock","src":"4147:354:16","statements":[{"assignments":[1787],"declarations":[{"constant":false,"id":1787,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:16","nodeType":"VariableDeclaration","scope":1816,"src":"4171:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1786,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1796,"initialValue":{"arguments":[{"arguments":[{"id":1792,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2081","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2081","typeString":"library SafeERC20"}],"id":1791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1790,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:16","typeDescriptions":{}}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1794,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"4229:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1788,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"4198:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:16","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1594,"src":"4198:15:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1797,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"4255:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1798,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"4274:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1807,"nodeType":"IfStatement","src":"4251:160:16","trueBody":{"id":1806,"nodeType":"Block","src":"4293:118:16","statements":[{"errorCall":{"arguments":[{"id":1801,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"4351:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1802,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"4360:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1803,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"4378:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1800,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"4318:32:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1805,"nodeType":"RevertStatement","src":"4311:85:16"}]}},{"expression":{"arguments":[{"id":1809,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"4437:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},{"id":1810,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"4444:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1811,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"4453:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1812,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"4472:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1808,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"4424:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1617_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1815,"nodeType":"ExpressionStatement","src":"4424:66:16"}]}]},"documentation":{"id":1776,"nodeType":"StructuredDocumentation","src":"3377:657:16","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:16","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"token","nameLocation":"4077:5:16","nodeType":"VariableDeclaration","scope":1818,"src":"4070:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},"typeName":{"id":1778,"nodeType":"UserDefinedTypeName","pathNode":{"id":1777,"name":"IERC20","nameLocations":["4070:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"4070:6:16"},"referencedDeclaration":1617,"src":"4070:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"spender","nameLocation":"4092:7:16","nodeType":"VariableDeclaration","scope":1818,"src":"4084:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1780,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:16","nodeType":"VariableDeclaration","scope":1818,"src":"4101:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:16"},"returnParameters":{"id":1785,"nodeType":"ParameterList","parameters":[],"src":"4137:0:16"},"scope":2081,"src":"4039:468:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1864,"nodeType":"Block","src":"5161:303:16","statements":[{"assignments":[1830],"declarations":[{"constant":false,"id":1830,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:16","nodeType":"VariableDeclaration","scope":1864,"src":"5171:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1829,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1839,"initialValue":{"arguments":[{"expression":{"id":1833,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"5214:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1604,"src":"5214:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1835,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"5230:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"5239:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1837,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1831,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:16","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:16"},{"condition":{"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:16","subExpression":{"arguments":[{"id":1841,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"5286:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},{"id":1842,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"5293:12:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1840,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"5262:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1617_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1863,"nodeType":"IfStatement","src":"5257:201:16","trueBody":{"id":1862,"nodeType":"Block","src":"5308:150:16","statements":[{"expression":{"arguments":[{"id":1846,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"5342:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1849,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"5364:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1604,"src":"5364:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1851,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"5380:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1847,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:16","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1845,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"5322:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1617_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1856,"nodeType":"ExpressionStatement","src":"5322:71:16"},{"expression":{"arguments":[{"id":1858,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"5427:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},{"id":1859,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"5434:12:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1857,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"5407:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1617_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1861,"nodeType":"ExpressionStatement","src":"5407:40:16"}]}}]},"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"4513:566:16","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":1865,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:16","nodeType":"FunctionDefinition","parameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"token","nameLocation":"5113:5:16","nodeType":"VariableDeclaration","scope":1865,"src":"5106:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},"typeName":{"id":1821,"nodeType":"UserDefinedTypeName","pathNode":{"id":1820,"name":"IERC20","nameLocations":["5106:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"5106:6:16"},"referencedDeclaration":1617,"src":"5106:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"spender","nameLocation":"5128:7:16","nodeType":"VariableDeclaration","scope":1865,"src":"5120:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1826,"mutability":"mutable","name":"value","nameLocation":"5145:5:16","nodeType":"VariableDeclaration","scope":1865,"src":"5137:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:16"},"returnParameters":{"id":1828,"nodeType":"ParameterList","parameters":[],"src":"5161:0:16"},"scope":2081,"src":"5084:380:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1907,"nodeType":"Block","src":"5911:219:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1878,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"5925:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:16","memberName":"code","nodeType":"MemberAccess","src":"5925:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:16","memberName":"length","nodeType":"MemberAccess","src":"5925:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:16","subExpression":{"arguments":[{"id":1892,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"6034:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"6038:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1894,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"6045:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1890,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"6012:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:16","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":1482,"src":"6012:21:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1905,"nodeType":"IfStatement","src":"6007:117:16","trueBody":{"id":1904,"nodeType":"Block","src":"6052:72:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1900,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"6106:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"}],"id":1899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1898,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:16","typeDescriptions":{}}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1897,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"6073:24:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1903,"nodeType":"RevertStatement","src":"6066:47:16"}]}},"id":1906,"nodeType":"IfStatement","src":"5921:203:16","trueBody":{"id":1889,"nodeType":"Block","src":"5946:55:16","statements":[{"expression":{"arguments":[{"id":1884,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"5973:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"}},{"id":1885,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"5980:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"5984:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1883,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"5960:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1617_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1888,"nodeType":"ExpressionStatement","src":"5960:30:16"}]}}]},"documentation":{"id":1866,"nodeType":"StructuredDocumentation","src":"5470:333:16","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1908,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:16","nodeType":"FunctionDefinition","parameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1869,"mutability":"mutable","name":"token","nameLocation":"5849:5:16","nodeType":"VariableDeclaration","scope":1908,"src":"5840:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"},"typeName":{"id":1868,"nodeType":"UserDefinedTypeName","pathNode":{"id":1867,"name":"IERC1363","nameLocations":["5840:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":1531,"src":"5840:8:16"},"referencedDeclaration":1531,"src":"5840:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1871,"mutability":"mutable","name":"to","nameLocation":"5864:2:16","nodeType":"VariableDeclaration","scope":1908,"src":"5856:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1870,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1873,"mutability":"mutable","name":"value","nameLocation":"5876:5:16","nodeType":"VariableDeclaration","scope":1908,"src":"5868:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1872,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1875,"mutability":"mutable","name":"data","nameLocation":"5896:4:16","nodeType":"VariableDeclaration","scope":1908,"src":"5883:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1874,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:16"},"returnParameters":{"id":1877,"nodeType":"ParameterList","parameters":[],"src":"5911:0:16"},"scope":2081,"src":"5808:322:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1954,"nodeType":"Block","src":"6649:239:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1923,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"6663:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:16","memberName":"code","nodeType":"MemberAccess","src":"6663:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:16","memberName":"length","nodeType":"MemberAccess","src":"6663:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:16","subExpression":{"arguments":[{"id":1938,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"6786:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1939,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"6792:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"6796:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1941,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"6803:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1936,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"6760:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:16","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":1508,"src":"6760:25:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1952,"nodeType":"IfStatement","src":"6755:127:16","trueBody":{"id":1951,"nodeType":"Block","src":"6810:72:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1947,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"6864:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"}],"id":1946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1945,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:16","typeDescriptions":{}}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1944,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"6831:24:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1950,"nodeType":"RevertStatement","src":"6824:47:16"}]}},"id":1953,"nodeType":"IfStatement","src":"6659:223:16","trueBody":{"id":1935,"nodeType":"Block","src":"6684:65:16","statements":[{"expression":{"arguments":[{"id":1929,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"6715:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"}},{"id":1930,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"6722:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1931,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"6728:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"6732:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1928,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"6698:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1617_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1934,"nodeType":"ExpressionStatement","src":"6698:40:16"}]}}]},"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"6136:341:16","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1955,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:16","nodeType":"FunctionDefinition","parameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"token","nameLocation":"6536:5:16","nodeType":"VariableDeclaration","scope":1955,"src":"6527:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"},"typeName":{"id":1911,"nodeType":"UserDefinedTypeName","pathNode":{"id":1910,"name":"IERC1363","nameLocations":["6527:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":1531,"src":"6527:8:16"},"referencedDeclaration":1531,"src":"6527:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"from","nameLocation":"6559:4:16","nodeType":"VariableDeclaration","scope":1955,"src":"6551:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"to","nameLocation":"6581:2:16","nodeType":"VariableDeclaration","scope":1955,"src":"6573:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1915,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"value","nameLocation":"6601:5:16","nodeType":"VariableDeclaration","scope":1955,"src":"6593:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1917,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1920,"mutability":"mutable","name":"data","nameLocation":"6629:4:16","nodeType":"VariableDeclaration","scope":1955,"src":"6616:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1919,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:16"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[],"src":"6649:0:16"},"scope":2081,"src":"6482:406:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1997,"nodeType":"Block","src":"7655:218:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1968,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"7669:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:16","memberName":"code","nodeType":"MemberAccess","src":"7669:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:16","memberName":"length","nodeType":"MemberAccess","src":"7669:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:16","subExpression":{"arguments":[{"id":1982,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"7777:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"7781:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1984,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"7788:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1980,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"7756:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:16","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"7756:20:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1995,"nodeType":"IfStatement","src":"7751:116:16","trueBody":{"id":1994,"nodeType":"Block","src":"7795:72:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1990,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"7849:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"}],"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1988,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:16","typeDescriptions":{}}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1987,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"7816:24:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1993,"nodeType":"RevertStatement","src":"7809:47:16"}]}},"id":1996,"nodeType":"IfStatement","src":"7665:202:16","trueBody":{"id":1979,"nodeType":"Block","src":"7690:55:16","statements":[{"expression":{"arguments":[{"id":1974,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"7717:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"}},{"id":1975,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"7724:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"7728:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1973,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"7704:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1617_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1978,"nodeType":"ExpressionStatement","src":"7704:30:16"}]}}]},"documentation":{"id":1956,"nodeType":"StructuredDocumentation","src":"6894:654:16","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":1998,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:16","nodeType":"FunctionDefinition","parameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"token","nameLocation":"7593:5:16","nodeType":"VariableDeclaration","scope":1998,"src":"7584:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"},"typeName":{"id":1958,"nodeType":"UserDefinedTypeName","pathNode":{"id":1957,"name":"IERC1363","nameLocations":["7584:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":1531,"src":"7584:8:16"},"referencedDeclaration":1531,"src":"7584:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1531","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1961,"mutability":"mutable","name":"to","nameLocation":"7608:2:16","nodeType":"VariableDeclaration","scope":1998,"src":"7600:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1960,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"value","nameLocation":"7620:5:16","nodeType":"VariableDeclaration","scope":1998,"src":"7612:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1965,"mutability":"mutable","name":"data","nameLocation":"7640:4:16","nodeType":"VariableDeclaration","scope":1998,"src":"7627:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1964,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:16"},"returnParameters":{"id":1967,"nodeType":"ParameterList","parameters":[],"src":"7655:0:16"},"scope":2081,"src":"7553:320:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2038,"nodeType":"Block","src":"8440:650:16","statements":[{"assignments":[2008],"declarations":[{"constant":false,"id":2008,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:16","nodeType":"VariableDeclaration","scope":2038,"src":"8450:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2007,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2009,"nodeType":"VariableDeclarationStatement","src":"8450:18:16"},{"assignments":[2011],"declarations":[{"constant":false,"id":2011,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:16","nodeType":"VariableDeclaration","scope":2038,"src":"8478:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2010,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2012,"nodeType":"VariableDeclarationStatement","src":"8478:19:16"},{"AST":{"nativeSrc":"8532:396:16","nodeType":"YulBlock","src":"8532:396:16","statements":[{"nativeSrc":"8546:75:16","nodeType":"YulVariableDeclaration","src":"8546:75:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"8566:3:16","nodeType":"YulIdentifier","src":"8566:3:16"},"nativeSrc":"8566:5:16","nodeType":"YulFunctionCall","src":"8566:5:16"},{"name":"token","nativeSrc":"8573:5:16","nodeType":"YulIdentifier","src":"8573:5:16"},{"kind":"number","nativeSrc":"8580:1:16","nodeType":"YulLiteral","src":"8580:1:16","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"8587:4:16","nodeType":"YulIdentifier","src":"8587:4:16"},{"kind":"number","nativeSrc":"8593:4:16","nodeType":"YulLiteral","src":"8593:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8583:3:16","nodeType":"YulIdentifier","src":"8583:3:16"},"nativeSrc":"8583:15:16","nodeType":"YulFunctionCall","src":"8583:15:16"},{"arguments":[{"name":"data","nativeSrc":"8606:4:16","nodeType":"YulIdentifier","src":"8606:4:16"}],"functionName":{"name":"mload","nativeSrc":"8600:5:16","nodeType":"YulIdentifier","src":"8600:5:16"},"nativeSrc":"8600:11:16","nodeType":"YulFunctionCall","src":"8600:11:16"},{"kind":"number","nativeSrc":"8613:1:16","nodeType":"YulLiteral","src":"8613:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"8616:4:16","nodeType":"YulLiteral","src":"8616:4:16","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"8561:4:16","nodeType":"YulIdentifier","src":"8561:4:16"},"nativeSrc":"8561:60:16","nodeType":"YulFunctionCall","src":"8561:60:16"},"variables":[{"name":"success","nativeSrc":"8550:7:16","nodeType":"YulTypedName","src":"8550:7:16","type":""}]},{"body":{"nativeSrc":"8682:157:16","nodeType":"YulBlock","src":"8682:157:16","statements":[{"nativeSrc":"8700:22:16","nodeType":"YulVariableDeclaration","src":"8700:22:16","value":{"arguments":[{"kind":"number","nativeSrc":"8717:4:16","nodeType":"YulLiteral","src":"8717:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8711:5:16","nodeType":"YulIdentifier","src":"8711:5:16"},"nativeSrc":"8711:11:16","nodeType":"YulFunctionCall","src":"8711:11:16"},"variables":[{"name":"ptr","nativeSrc":"8704:3:16","nodeType":"YulTypedName","src":"8704:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8754:3:16","nodeType":"YulIdentifier","src":"8754:3:16"},{"kind":"number","nativeSrc":"8759:1:16","nodeType":"YulLiteral","src":"8759:1:16","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8762:14:16","nodeType":"YulIdentifier","src":"8762:14:16"},"nativeSrc":"8762:16:16","nodeType":"YulFunctionCall","src":"8762:16:16"}],"functionName":{"name":"returndatacopy","nativeSrc":"8739:14:16","nodeType":"YulIdentifier","src":"8739:14:16"},"nativeSrc":"8739:40:16","nodeType":"YulFunctionCall","src":"8739:40:16"},"nativeSrc":"8739:40:16","nodeType":"YulExpressionStatement","src":"8739:40:16"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8803:3:16","nodeType":"YulIdentifier","src":"8803:3:16"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8808:14:16","nodeType":"YulIdentifier","src":"8808:14:16"},"nativeSrc":"8808:16:16","nodeType":"YulFunctionCall","src":"8808:16:16"}],"functionName":{"name":"revert","nativeSrc":"8796:6:16","nodeType":"YulIdentifier","src":"8796:6:16"},"nativeSrc":"8796:29:16","nodeType":"YulFunctionCall","src":"8796:29:16"},"nativeSrc":"8796:29:16","nodeType":"YulExpressionStatement","src":"8796:29:16"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8673:7:16","nodeType":"YulIdentifier","src":"8673:7:16"}],"functionName":{"name":"iszero","nativeSrc":"8666:6:16","nodeType":"YulIdentifier","src":"8666:6:16"},"nativeSrc":"8666:15:16","nodeType":"YulFunctionCall","src":"8666:15:16"},"nativeSrc":"8663:176:16","nodeType":"YulIf","src":"8663:176:16"},{"nativeSrc":"8852:30:16","nodeType":"YulAssignment","src":"8852:30:16","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8866:14:16","nodeType":"YulIdentifier","src":"8866:14:16"},"nativeSrc":"8866:16:16","nodeType":"YulFunctionCall","src":"8866:16:16"},"variableNames":[{"name":"returnSize","nativeSrc":"8852:10:16","nodeType":"YulIdentifier","src":"8852:10:16"}]},{"nativeSrc":"8895:23:16","nodeType":"YulAssignment","src":"8895:23:16","value":{"arguments":[{"kind":"number","nativeSrc":"8916:1:16","nodeType":"YulLiteral","src":"8916:1:16","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8910:5:16","nodeType":"YulIdentifier","src":"8910:5:16"},"nativeSrc":"8910:8:16","nodeType":"YulFunctionCall","src":"8910:8:16"},"variableNames":[{"name":"returnValue","nativeSrc":"8895:11:16","nodeType":"YulIdentifier","src":"8895:11:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2004,"isOffset":false,"isSlot":false,"src":"8587:4:16","valueSize":1},{"declaration":2004,"isOffset":false,"isSlot":false,"src":"8606:4:16","valueSize":1},{"declaration":2008,"isOffset":false,"isSlot":false,"src":"8852:10:16","valueSize":1},{"declaration":2011,"isOffset":false,"isSlot":false,"src":"8895:11:16","valueSize":1},{"declaration":2002,"isOffset":false,"isSlot":false,"src":"8573:5:16","valueSize":1}],"flags":["memory-safe"],"id":2013,"nodeType":"InlineAssembly","src":"8507:421:16"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2014,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"8942:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2025,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"8994:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:16","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2019,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"8968:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}],"id":2018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2017,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:16","typeDescriptions":{}}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:16","memberName":"code","nodeType":"MemberAccess","src":"8960:19:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:16","memberName":"length","nodeType":"MemberAccess","src":"8960:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2037,"nodeType":"IfStatement","src":"8938:146:16","trueBody":{"id":2036,"nodeType":"Block","src":"9012:72:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2032,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"9066:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}],"id":2031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2030,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:16","typeDescriptions":{}}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2029,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"9033:24:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2035,"nodeType":"RevertStatement","src":"9026:47:16"}]}}]},"documentation":{"id":1999,"nodeType":"StructuredDocumentation","src":"7879:486:16","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":2039,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:16","nodeType":"FunctionDefinition","parameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"token","nameLocation":"8406:5:16","nodeType":"VariableDeclaration","scope":2039,"src":"8399:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},"typeName":{"id":2001,"nodeType":"UserDefinedTypeName","pathNode":{"id":2000,"name":"IERC20","nameLocations":["8399:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"8399:6:16"},"referencedDeclaration":1617,"src":"8399:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2004,"mutability":"mutable","name":"data","nameLocation":"8426:4:16","nodeType":"VariableDeclaration","scope":2039,"src":"8413:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2003,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:16"},"returnParameters":{"id":2006,"nodeType":"ParameterList","parameters":[],"src":"8440:0:16"},"scope":2081,"src":"8370:720:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2079,"nodeType":"Block","src":"9681:391:16","statements":[{"assignments":[2051],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"success","nameLocation":"9696:7:16","nodeType":"VariableDeclaration","scope":2079,"src":"9691:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2050,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2052,"nodeType":"VariableDeclarationStatement","src":"9691:12:16"},{"assignments":[2054],"declarations":[{"constant":false,"id":2054,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:16","nodeType":"VariableDeclaration","scope":2079,"src":"9713:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2055,"nodeType":"VariableDeclarationStatement","src":"9713:18:16"},{"assignments":[2057],"declarations":[{"constant":false,"id":2057,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:16","nodeType":"VariableDeclaration","scope":2079,"src":"9741:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2058,"nodeType":"VariableDeclarationStatement","src":"9741:19:16"},{"AST":{"nativeSrc":"9795:174:16","nodeType":"YulBlock","src":"9795:174:16","statements":[{"nativeSrc":"9809:71:16","nodeType":"YulAssignment","src":"9809:71:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9825:3:16","nodeType":"YulIdentifier","src":"9825:3:16"},"nativeSrc":"9825:5:16","nodeType":"YulFunctionCall","src":"9825:5:16"},{"name":"token","nativeSrc":"9832:5:16","nodeType":"YulIdentifier","src":"9832:5:16"},{"kind":"number","nativeSrc":"9839:1:16","nodeType":"YulLiteral","src":"9839:1:16","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9846:4:16","nodeType":"YulIdentifier","src":"9846:4:16"},{"kind":"number","nativeSrc":"9852:4:16","nodeType":"YulLiteral","src":"9852:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9842:3:16","nodeType":"YulIdentifier","src":"9842:3:16"},"nativeSrc":"9842:15:16","nodeType":"YulFunctionCall","src":"9842:15:16"},{"arguments":[{"name":"data","nativeSrc":"9865:4:16","nodeType":"YulIdentifier","src":"9865:4:16"}],"functionName":{"name":"mload","nativeSrc":"9859:5:16","nodeType":"YulIdentifier","src":"9859:5:16"},"nativeSrc":"9859:11:16","nodeType":"YulFunctionCall","src":"9859:11:16"},{"kind":"number","nativeSrc":"9872:1:16","nodeType":"YulLiteral","src":"9872:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"9875:4:16","nodeType":"YulLiteral","src":"9875:4:16","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9820:4:16","nodeType":"YulIdentifier","src":"9820:4:16"},"nativeSrc":"9820:60:16","nodeType":"YulFunctionCall","src":"9820:60:16"},"variableNames":[{"name":"success","nativeSrc":"9809:7:16","nodeType":"YulIdentifier","src":"9809:7:16"}]},{"nativeSrc":"9893:30:16","nodeType":"YulAssignment","src":"9893:30:16","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9907:14:16","nodeType":"YulIdentifier","src":"9907:14:16"},"nativeSrc":"9907:16:16","nodeType":"YulFunctionCall","src":"9907:16:16"},"variableNames":[{"name":"returnSize","nativeSrc":"9893:10:16","nodeType":"YulIdentifier","src":"9893:10:16"}]},{"nativeSrc":"9936:23:16","nodeType":"YulAssignment","src":"9936:23:16","value":{"arguments":[{"kind":"number","nativeSrc":"9957:1:16","nodeType":"YulLiteral","src":"9957:1:16","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9951:5:16","nodeType":"YulIdentifier","src":"9951:5:16"},"nativeSrc":"9951:8:16","nodeType":"YulFunctionCall","src":"9951:8:16"},"variableNames":[{"name":"returnValue","nativeSrc":"9936:11:16","nodeType":"YulIdentifier","src":"9936:11:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2045,"isOffset":false,"isSlot":false,"src":"9846:4:16","valueSize":1},{"declaration":2045,"isOffset":false,"isSlot":false,"src":"9865:4:16","valueSize":1},{"declaration":2054,"isOffset":false,"isSlot":false,"src":"9893:10:16","valueSize":1},{"declaration":2057,"isOffset":false,"isSlot":false,"src":"9936:11:16","valueSize":1},{"declaration":2051,"isOffset":false,"isSlot":false,"src":"9809:7:16","valueSize":1},{"declaration":2043,"isOffset":false,"isSlot":false,"src":"9832:5:16","valueSize":1}],"flags":["memory-safe"],"id":2059,"nodeType":"InlineAssembly","src":"9770:199:16"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2060,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9985:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2061,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"9997:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2072,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"10048:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:16","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2066,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"10023:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}],"id":2065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2064,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:16","typeDescriptions":{}}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:16","memberName":"code","nodeType":"MemberAccess","src":"10015:19:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:16","memberName":"length","nodeType":"MemberAccess","src":"10015:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2049,"id":2078,"nodeType":"Return","src":"9978:87:16"}]},"documentation":{"id":2040,"nodeType":"StructuredDocumentation","src":"9096:491:16","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":2080,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:16","nodeType":"FunctionDefinition","parameters":{"id":2046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"token","nameLocation":"9632:5:16","nodeType":"VariableDeclaration","scope":2080,"src":"9625:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},"typeName":{"id":2042,"nodeType":"UserDefinedTypeName","pathNode":{"id":2041,"name":"IERC20","nameLocations":["9625:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"9625:6:16"},"referencedDeclaration":1617,"src":"9625:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2045,"mutability":"mutable","name":"data","nameLocation":"9652:4:16","nodeType":"VariableDeclaration","scope":2080,"src":"9639:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2044,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:16"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2080,"src":"9675:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2047,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:16"},"scope":2081,"src":"9592:480:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2082,"src":"698:9376:16","usedErrors":[1629,1638],"usedEvents":[]}],"src":"115:9960:16"},"id":16},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2111]},"id":2112,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2083,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:17"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2084,"nodeType":"StructuredDocumentation","src":"127:496:17","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2111,"linearizedBaseContracts":[2111],"name":"Context","nameLocation":"642:7:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":2092,"nodeType":"Block","src":"718:34:17","statements":[{"expression":{"expression":{"id":2089,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:17","memberName":"sender","nodeType":"MemberAccess","src":"735:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2088,"id":2091,"nodeType":"Return","src":"728:17:17"}]},"id":2093,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:17","nodeType":"FunctionDefinition","parameters":{"id":2085,"nodeType":"ParameterList","parameters":[],"src":"675:2:17"},"returnParameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2093,"src":"709:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2086,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:17"},"scope":2111,"src":"656:96:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2101,"nodeType":"Block","src":"825:32:17","statements":[{"expression":{"expression":{"id":2098,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:17","memberName":"data","nodeType":"MemberAccess","src":"842:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2097,"id":2100,"nodeType":"Return","src":"835:15:17"}]},"id":2102,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:17","nodeType":"FunctionDefinition","parameters":{"id":2094,"nodeType":"ParameterList","parameters":[],"src":"775:2:17"},"returnParameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2102,"src":"809:14:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2095,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:17"},"scope":2111,"src":"758:99:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2109,"nodeType":"Block","src":"935:25:17","statements":[{"expression":{"hexValue":"30","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2106,"id":2108,"nodeType":"Return","src":"945:8:17"}]},"id":2110,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:17","nodeType":"FunctionDefinition","parameters":{"id":2103,"nodeType":"ParameterList","parameters":[],"src":"892:2:17"},"returnParameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2110,"src":"926:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:17"},"scope":2111,"src":"863:97:17","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2112,"src":"624:338:17","usedErrors":[],"usedEvents":[]}],"src":"101:862:17"},"id":17},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2123]},"id":2124,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2113,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"142:280:18","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2123,"linearizedBaseContracts":[2123],"name":"IERC165","nameLocation":"433:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"447:340:18","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2122,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:18","nodeType":"FunctionDefinition","parameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:18","nodeType":"VariableDeclaration","scope":2122,"src":"819:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2116,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:18"},"returnParameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2122,"src":"862:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2119,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:18"},"scope":2123,"src":"792:76:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2124,"src":"423:447:18","usedErrors":[],"usedEvents":[]}],"src":"115:756:18"},"id":18},"contracts/FixedRatePaymaster.sol":{"ast":{"absolutePath":"contracts/FixedRatePaymaster.sol","exportedSymbols":{"BasePaymaster":[270],"FixedRatePaymaster":[2320],"IAggregator":[829],"IERC1363":[1531],"IERC165":[2123],"IERC20":[1617],"IEntryPoint":[1014],"INonceManager":[1033],"IPaymaster":[1070],"ISenderCreator":[1089],"IStakeManager":[1193],"Ownable":[1363],"Ownable2Step":[1449],"PackedUserOperation":[1215],"SafeERC20":[2081],"UserOperationLib":[795],"calldataKeccak":[431],"min":[449]},"id":2321,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2125,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:19"},{"absolutePath":"@account-abstraction/contracts/core/BasePaymaster.sol","file":"@account-abstraction/contracts/core/BasePaymaster.sol","id":2126,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2321,"sourceUnit":271,"src":"61:63:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":2127,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2321,"sourceUnit":2082,"src":"126:65:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","id":2128,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2321,"sourceUnit":1216,"src":"193:75:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2129,"name":"BasePaymaster","nameLocations":["303:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":270,"src":"303:13:19"},"id":2130,"nodeType":"InheritanceSpecifier","src":"303:13:19"}],"canonicalName":"FixedRatePaymaster","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2320,"linearizedBaseContracts":[2320,270,1449,1363,2111,1070],"name":"FixedRatePaymaster","nameLocation":"281:18:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2134,"libraryName":{"id":2131,"name":"SafeERC20","nameLocations":["330:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2081,"src":"330:9:19"},"nodeType":"UsingForDirective","src":"324:27:19","typeName":{"id":2133,"nodeType":"UserDefinedTypeName","pathNode":{"id":2132,"name":"IERC20","nameLocations":["344:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"344:6:19"},"referencedDeclaration":1617,"src":"344:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"fc0c546a","id":2137,"mutability":"immutable","name":"token","nameLocation":"383:5:19","nodeType":"VariableDeclaration","scope":2320,"src":"359:29:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},"typeName":{"id":2136,"nodeType":"UserDefinedTypeName","pathNode":{"id":2135,"name":"IERC20","nameLocations":["359:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"359:6:19"},"referencedDeclaration":1617,"src":"359:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"2c4e722e","id":2139,"mutability":"immutable","name":"rate","nameLocation":"450:4:19","nodeType":"VariableDeclaration","scope":2320,"src":"425:29:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2138,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"ffd0b669a1dd6cd4e81d5fa668229de53f1912281efd7c8374dfc2208164962f","id":2147,"name":"TokensCharged","nameLocation":"500:13:19","nodeType":"EventDefinition","parameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"530:6:19","nodeType":"VariableDeclaration","scope":2147,"src":"514:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2140,"name":"address","nodeType":"ElementaryTypeName","src":"514:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2143,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"546:6:19","nodeType":"VariableDeclaration","scope":2147,"src":"538:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2142,"name":"uint256","nodeType":"ElementaryTypeName","src":"538:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2145,"indexed":false,"mutability":"mutable","name":"gasUsed","nameLocation":"562:7:19","nodeType":"VariableDeclaration","scope":2147,"src":"554:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2144,"name":"uint256","nodeType":"ElementaryTypeName","src":"554:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"513:57:19"},"src":"494:77:19"},{"anonymous":false,"eventSelector":"6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b","id":2153,"name":"TokensWithdrawn","nameLocation":"583:15:19","nodeType":"EventDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"615:2:19","nodeType":"VariableDeclaration","scope":2153,"src":"599:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"599:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2151,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"627:6:19","nodeType":"VariableDeclaration","scope":2153,"src":"619:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"619:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"598:36:19"},"src":"577:58:19"},{"body":{"id":2175,"nodeType":"Block","src":"771:104:19","statements":[{"expression":{"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2167,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"782:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2168,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"790:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"src":"782:14:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":2170,"nodeType":"ExpressionStatement","src":"782:14:19"},{"expression":{"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2171,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"807:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2172,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"814:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"807:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2174,"nodeType":"ExpressionStatement","src":"807:12:19"}]},"id":2176,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2164,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"758:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}}],"id":2165,"kind":"baseConstructorSpecifier","modifierName":{"id":2163,"name":"BasePaymaster","nameLocations":["744:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":270,"src":"744:13:19"},"nodeType":"ModifierInvocation","src":"744:26:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"_entryPoint","nameLocation":"677:11:19","nodeType":"VariableDeclaration","scope":2176,"src":"665:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"},"typeName":{"id":2155,"nodeType":"UserDefinedTypeName","pathNode":{"id":2154,"name":"IEntryPoint","nameLocations":["665:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":1014,"src":"665:11:19"},"referencedDeclaration":1014,"src":"665:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1014","typeString":"contract IEntryPoint"}},"visibility":"internal"},{"constant":false,"id":2159,"mutability":"mutable","name":"_token","nameLocation":"706:6:19","nodeType":"VariableDeclaration","scope":2176,"src":"699:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"},"typeName":{"id":2158,"nodeType":"UserDefinedTypeName","pathNode":{"id":2157,"name":"IERC20","nameLocations":["699:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"699:6:19"},"referencedDeclaration":1617,"src":"699:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2161,"mutability":"mutable","name":"_rate","nameLocation":"731:5:19","nodeType":"VariableDeclaration","scope":2176,"src":"723:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"723:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:89:19"},"returnParameters":{"id":2166,"nodeType":"ParameterList","parameters":[],"src":"771:0:19"},"scope":2320,"src":"643:232:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[109],"body":{"id":2237,"nodeType":"Block","src":"1153:471:19","statements":[{"assignments":[2192],"declarations":[{"constant":false,"id":2192,"mutability":"mutable","name":"tokenRequired","nameLocation":"1174:13:19","nodeType":"VariableDeclaration","scope":2237,"src":"1166:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1166:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2196,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2193,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"1190:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2194,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"1208:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1190:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1166:46:19"},{"assignments":[2198],"declarations":[{"constant":false,"id":2198,"mutability":"mutable","name":"sender","nameLocation":"1231:6:19","nodeType":"VariableDeclaration","scope":2237,"src":"1223:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2197,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2201,"initialValue":{"expression":{"id":2199,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"1240:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1247:6:19","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":1198,"src":"1240:13:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1223:30:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2204,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"1324:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2207,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1340:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_FixedRatePaymaster_$2320","typeString":"contract FixedRatePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FixedRatePaymaster_$2320","typeString":"contract FixedRatePaymaster"}],"id":2206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1332:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2205,"name":"address","nodeType":"ElementaryTypeName","src":"1332:7:19","typeDescriptions":{}}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1332:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2202,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"1308:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1314:9:19","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1594,"src":"1308:15:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2210,"name":"tokenRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"1349:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1308:54:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2217,"nodeType":"IfStatement","src":"1304:120:19","trueBody":{"id":2216,"nodeType":"Block","src":"1364:60:19","statements":[{"expression":{"components":[{"hexValue":"","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1387:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"31","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1391:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"id":2214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1386:7:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_1_by_1_$","typeString":"tuple(literal_string \"\",int_const 1)"}},"functionReturnParameters":2190,"id":2215,"nodeType":"Return","src":"1379:14:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2220,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"1454:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2218,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"1438:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1444:9:19","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1574,"src":"1438:15:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1438:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2222,"name":"tokenRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"1464:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1438:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2229,"nodeType":"IfStatement","src":"1434:105:19","trueBody":{"id":2228,"nodeType":"Block","src":"1479:60:19","statements":[{"expression":{"components":[{"hexValue":"","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1502:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"31","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1506:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"id":2226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1501:7:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_1_by_1_$","typeString":"tuple(literal_string \"\",int_const 1)"}},"functionReturnParameters":2190,"id":2227,"nodeType":"Return","src":"1494:14:19"}]}},{"expression":{"components":[{"arguments":[{"id":2232,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"1605:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2230,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1594:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1598:6:19","memberName":"encode","nodeType":"MemberAccess","src":"1594:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1594:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1614:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1593:23:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_rational_0_by_1_$","typeString":"tuple(bytes memory,int_const 0)"}},"functionReturnParameters":2190,"id":2236,"nodeType":"Return","src":"1586:30:19"}]},"id":2238,"implemented":true,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"944:24:19","nodeType":"FunctionDefinition","overrides":{"id":2185,"nodeType":"OverrideSpecifier","overrides":[],"src":"1089:8:19"},"parameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"userOp","nameLocation":"1004:6:19","nodeType":"VariableDeclaration","scope":2238,"src":"975:35:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":2178,"nodeType":"UserDefinedTypeName","pathNode":{"id":2177,"name":"PackedUserOperation","nameLocations":["975:19:19"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"975:19:19"},"referencedDeclaration":1215,"src":"975:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1215_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":2181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2238,"src":"1017:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1017:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2183,"mutability":"mutable","name":"requiredPreFund","nameLocation":"1056:15:19","nodeType":"VariableDeclaration","scope":2238,"src":"1048:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"1048:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:106:19"},"returnParameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2187,"mutability":"mutable","name":"context","nameLocation":"1120:7:19","nodeType":"VariableDeclaration","scope":2238,"src":"1107:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2186,"name":"bytes","nodeType":"ElementaryTypeName","src":"1107:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2189,"mutability":"mutable","name":"validationData","nameLocation":"1137:14:19","nodeType":"VariableDeclaration","scope":2238,"src":"1129:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1129:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1106:46:19"},"scope":2320,"src":"935:689:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[158],"body":{"id":2284,"nodeType":"Block","src":"1839:246:19","statements":[{"assignments":[2252],"declarations":[{"constant":false,"id":2252,"mutability":"mutable","name":"sender","nameLocation":"1854:6:19","nodeType":"VariableDeclaration","scope":2284,"src":"1846:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2251,"name":"address","nodeType":"ElementaryTypeName","src":"1846:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2260,"initialValue":{"arguments":[{"id":2255,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"1874:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":2257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1884:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"1884:7:19","typeDescriptions":{}}}],"id":2258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1883:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":2253,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1863:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1867:6:19","memberName":"decode","nodeType":"MemberAccess","src":"1863:10:19","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1863:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"1846:47:19"},{"assignments":[2262],"declarations":[{"constant":false,"id":2262,"mutability":"mutable","name":"tokensToCharge","nameLocation":"1908:14:19","nodeType":"VariableDeclaration","scope":2284,"src":"1900:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2266,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2263,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"1925:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2264,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"1941:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1925:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1900:45:19"},{"expression":{"arguments":[{"id":2270,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"1977:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2273,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1993:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_FixedRatePaymaster_$2320","typeString":"contract FixedRatePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FixedRatePaymaster_$2320","typeString":"contract FixedRatePaymaster"}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1985:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"1985:7:19","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1985:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2275,"name":"tokensToCharge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"2000:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2267,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"1954:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1960:16:19","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1689,"src":"1954:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1617_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1617_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1954:61:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2277,"nodeType":"ExpressionStatement","src":"1954:61:19"},{"eventCall":{"arguments":[{"id":2279,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"2043:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2280,"name":"tokensToCharge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"2051:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2281,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"2067:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2278,"name":"TokensCharged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"2029:13:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2029:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2283,"nodeType":"EmitStatement","src":"2024:57:19"}]},"id":2285,"implemented":true,"kind":"function","modifiers":[],"name":"_postOp","nameLocation":"1694:7:19","nodeType":"FunctionDefinition","overrides":{"id":2249,"nodeType":"OverrideSpecifier","overrides":[],"src":"1830:8:19"},"parameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2285,"src":"1708:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1041","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":2240,"nodeType":"UserDefinedTypeName","pathNode":{"id":2239,"name":"PostOpMode","nameLocations":["1708:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":1041,"src":"1708:10:19"},"referencedDeclaration":1041,"src":"1708:10:19","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1041","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":2243,"mutability":"mutable","name":"context","nameLocation":"1740:7:19","nodeType":"VariableDeclaration","scope":2285,"src":"1725:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2242,"name":"bytes","nodeType":"ElementaryTypeName","src":"1725:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2245,"mutability":"mutable","name":"actualGasCost","nameLocation":"1762:13:19","nodeType":"VariableDeclaration","scope":2285,"src":"1754:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1754:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2285,"src":"1782:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2246,"name":"uint256","nodeType":"ElementaryTypeName","src":"1782:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1701:119:19"},"returnParameters":{"id":2250,"nodeType":"ParameterList","parameters":[],"src":"1839:0:19"},"scope":2320,"src":"1685:400:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2314,"nodeType":"Block","src":"2187:141:19","statements":[{"assignments":[2293],"declarations":[{"constant":false,"id":2293,"mutability":"mutable","name":"bal","nameLocation":"2206:3:19","nodeType":"VariableDeclaration","scope":2314,"src":"2198:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2301,"initialValue":{"arguments":[{"arguments":[{"id":2298,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2236:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_FixedRatePaymaster_$2320","typeString":"contract FixedRatePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FixedRatePaymaster_$2320","typeString":"contract FixedRatePaymaster"}],"id":2297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2228:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2296,"name":"address","nodeType":"ElementaryTypeName","src":"2228:7:19","typeDescriptions":{}}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2228:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2294,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"2212:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2218:9:19","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1574,"src":"2212:15:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2212:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2198:44:19"},{"expression":{"arguments":[{"id":2305,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"2272:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2306,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2276:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2302,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"2253:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2259:12:19","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1662,"src":"2253:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1617_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1617_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2253:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2308,"nodeType":"ExpressionStatement","src":"2253:27:19"},{"eventCall":{"arguments":[{"id":2310,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"2312:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2311,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2316:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2309,"name":"TokensWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"2296:15:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2313,"nodeType":"EmitStatement","src":"2291:29:19"}]},"functionSelector":"49df728c","id":2315,"implemented":true,"kind":"function","modifiers":[{"id":2290,"kind":"modifierInvocation","modifierName":{"id":2289,"name":"onlyOwner","nameLocations":["2177:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2177:9:19"},"nodeType":"ModifierInvocation","src":"2177:9:19"}],"name":"withdrawTokens","nameLocation":"2141:14:19","nodeType":"FunctionDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"to","nameLocation":"2164:2:19","nodeType":"VariableDeclaration","scope":2315,"src":"2156:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2286,"name":"address","nodeType":"ElementaryTypeName","src":"2156:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2155:12:19"},"returnParameters":{"id":2291,"nodeType":"ParameterList","parameters":[],"src":"2187:0:19"},"scope":2320,"src":"2132:196:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2318,"nodeType":"Block","src":"2405:2:19","statements":[]},"id":2319,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[],"src":"2385:2:19"},"returnParameters":{"id":2317,"nodeType":"ParameterList","parameters":[],"src":"2405:0:19"},"scope":2320,"src":"2378:29:19","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2321,"src":"272:2138:19","usedErrors":[1229,1234,1629],"usedEvents":[1240,1378,2147,2153]}],"src":"33:2377:19"},"id":19}},"contracts":{"@account-abstraction/contracts/core/BasePaymaster.sol":{"BasePaymaster":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptOwnership()":"79ba5097","addStake(uint32)":"0396cb60","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","owner()":"8da5cb5b","pendingOwner()":"e30c3978","postOp(uint8,bytes,uint256,uint256)":"7c627b21","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual cost of gas used so far (without this postOp call).\",\"actualUserOpFeePerGas\":\"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp().\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \\\"indefinitely\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"}},\"notice\":\"Helper class for creating a paymaster. provides helper methods for staking. Validates that the postOp is called only by the entryPoint.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/core/BasePaymaster.sol\":\"BasePaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x133b7392daa1fc943d834b7d7721c8dd76327df47ae93f53de5c3a0fa79d9741\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c55d47733ff9b5fb9f37056cfd17b96c4ec2bf3c744072aa577fd4abd4b14b\",\"dweb:/ipfs/QmZN6t9t388kbFnw8sZTitU94YE6xCBcmcqt9qj98tpCnm\"]},\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x42b948af5fa14a96149611595df1186800c7558b2de8762e4b45a7c45c16f65e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://737a7908131ece48a5df1faaa3d0be79c42792379c27f5615dae6aa14cd68c2f\",\"dweb:/ipfs/QmPAxGMDxuek7XWSUVfZpvYE8bustfsjTDVDK8hmE88e1f\"]},\"@account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x2d3450fa3906422b6fdbbe7f2a2a9e36d6f3751bfa9cd80af88befd6a5be78c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292a0ef5295d7f2016e99d2c228958f7f6de94f5bd9652d8696af15af0094a99\",\"dweb:/ipfs/QmVg4fhkZbUB7AopGcaVPmTdvChq7W9ga8fjrc3XaJNTM2\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xdf580eafa015b81bde436d6a5468cc92b531ada84007cef885e923f6dfc5e8bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99f0060626568619ac94d750eb4c0888d92ca5775a6bd957fef9847843835b77\",\"dweb:/ipfs/QmXJer3D9sTkEj3mmUDqpdqfGpe46Rn9G22nGrfZdP2wAT\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3b0423737e810dd886183ed32cfed9b45edd315f5fb3e1076fc19f86791adc64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c43081efaa2eda581b6249053281bb58cb0c4eeb6bf87efc55d95daaec2fc931\",\"dweb:/ipfs/QmXRN2JnyzWZNeFMHauTnDuc7jhxGY4ZkY37HTtjXKdC87\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xee493ae200b8c675bdc0da66f7ac6bb883ecea33672d7d0a95526b9eecdedf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://979784a0333ac4ef3cc53ab9323a4b7fa574d929bd511f0eed03d3b0370db22d\",\"dweb:/ipfs/QmeiciN5gs4upM6vfKvrRxWiDBUzMU4uJQRRkJajhim9gX\"]},\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x6be37abc0760d60a41124e2e3f46185a0d3df48b32bd73174790981f76fbdae8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c144ba15a63883c7da41fc0729a46108f7d5487dbac2da0bde00aed67f5a2f00\",\"dweb:/ipfs/Qmdh7MzQmCQLh7wz719xMuG2yvMUkKDVwyN44P7pLofJfS\"]},\"@account-abstraction/contracts/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0x677f651d733162b80d1af7901e4f36469e362737a8353d1d0cc7bb94489e4ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6905a80acd70b444ea230b5b582164cb99aaae518bf72c88f8292df31615570\",\"dweb:/ipfs/QmfTKTPwJYf9pmA3T5PE5cCG8GLLDrLaq3jQqMP3pVRL6w\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xe48e904fcac02295aad07fbfa1c1d449a74bf44c04e432afef6f34d1ef726ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5882b635ea6f5da9ae411485975888431de571f85d4baf35e3db1a83c1f14b85\",\"dweb:/ipfs/QmVSTX36Byr48y8JBmz1hCTGAAyQdTYegQbsSqdRNuSQYz\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2c9d517f0c136d54bd00cd57959d25681d4d6273f5bbbc263afe228303772f0\",\"dweb:/ipfs/QmReNFjXBiufByiAAzfSQ2SM5r3qeUErn46BmN3yVRvrek\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@account-abstraction/contracts/core/UserOperationLib.sol":{"UserOperationLib":{"abi":[{"inputs":[],"name":"PAYMASTER_DATA_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAYMASTER_POSTOP_GAS_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAYMASTER_VALIDATION_GAS_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"61010f610052600b82828239805160001a6073146045577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060475760003560e01c806325093e1b14604c578063b29a8ff4146066578063ede31502146080575b600080fd5b6052609a565b604051605d919060c0565b60405180910390f35b606c609f565b6040516077919060c0565b60405180910390f35b608660a4565b6040516091919060c0565b60405180910390f35b602481565b601481565b603481565b6000819050919050565b60ba8160a9565b82525050565b600060208201905060d3600083018460b3565b9291505056fea26469706673582212207bf42134d967fd1ef1f01afa7c84386424a4f860423ee8263bfbf38581c1f95e64736f6c634300081c0033","opcodes":"PUSH2 0x10F PUSH2 0x52 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x45 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x47 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25093E1B EQ PUSH1 0x4C JUMPI DUP1 PUSH4 0xB29A8FF4 EQ PUSH1 0x66 JUMPI DUP1 PUSH4 0xEDE31502 EQ PUSH1 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x52 PUSH1 0x9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x5D SWAP2 SWAP1 PUSH1 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6C PUSH1 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x77 SWAP2 SWAP1 PUSH1 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x86 PUSH1 0xA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x91 SWAP2 SWAP1 PUSH1 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x24 DUP2 JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x34 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xBA DUP2 PUSH1 0xA9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xD3 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xF42134D967FD1EF1F01AFA7C84386424A4F860423EE8263BFBF38581 0xC1 0xF9 MCOPY PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"278:4766:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@PAYMASTER_DATA_OFFSET_475":{"entryPoint":164,"id":475,"parameterSlots":0,"returnSlots":0},"@PAYMASTER_POSTOP_GAS_OFFSET_472":{"entryPoint":154,"id":472,"parameterSlots":0,"returnSlots":0},"@PAYMASTER_VALIDATION_GAS_OFFSET_469":{"entryPoint":159,"id":469,"parameterSlots":0,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack_library":{"entryPoint":179,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed":{"entryPoint":192,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":169,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:463:20","nodeType":"YulBlock","src":"0:463:20","statements":[{"body":{"nativeSrc":"52:32:20","nodeType":"YulBlock","src":"52:32:20","statements":[{"nativeSrc":"62:16:20","nodeType":"YulAssignment","src":"62:16:20","value":{"name":"value","nativeSrc":"73:5:20","nodeType":"YulIdentifier","src":"73:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:20","nodeType":"YulIdentifier","src":"62:7:20"}]}]},"name":"cleanup_t_uint256","nativeSrc":"7:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:20","nodeType":"YulTypedName","src":"34:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:20","nodeType":"YulTypedName","src":"44:7:20","type":""}],"src":"7:77:20"},{"body":{"nativeSrc":"163:53:20","nodeType":"YulBlock","src":"163:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"180:3:20","nodeType":"YulIdentifier","src":"180:3:20"},{"arguments":[{"name":"value","nativeSrc":"203:5:20","nodeType":"YulIdentifier","src":"203:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"185:17:20","nodeType":"YulIdentifier","src":"185:17:20"},"nativeSrc":"185:24:20","nodeType":"YulFunctionCall","src":"185:24:20"}],"functionName":{"name":"mstore","nativeSrc":"173:6:20","nodeType":"YulIdentifier","src":"173:6:20"},"nativeSrc":"173:37:20","nodeType":"YulFunctionCall","src":"173:37:20"},"nativeSrc":"173:37:20","nodeType":"YulExpressionStatement","src":"173:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack_library","nativeSrc":"90:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"151:5:20","nodeType":"YulTypedName","src":"151:5:20","type":""},{"name":"pos","nativeSrc":"158:3:20","nodeType":"YulTypedName","src":"158:3:20","type":""}],"src":"90:126:20"},{"body":{"nativeSrc":"328:132:20","nodeType":"YulBlock","src":"328:132:20","statements":[{"nativeSrc":"338:26:20","nodeType":"YulAssignment","src":"338:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"350:9:20","nodeType":"YulIdentifier","src":"350:9:20"},{"kind":"number","nativeSrc":"361:2:20","nodeType":"YulLiteral","src":"361:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"346:3:20","nodeType":"YulIdentifier","src":"346:3:20"},"nativeSrc":"346:18:20","nodeType":"YulFunctionCall","src":"346:18:20"},"variableNames":[{"name":"tail","nativeSrc":"338:4:20","nodeType":"YulIdentifier","src":"338:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"426:6:20","nodeType":"YulIdentifier","src":"426:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"439:9:20","nodeType":"YulIdentifier","src":"439:9:20"},{"kind":"number","nativeSrc":"450:1:20","nodeType":"YulLiteral","src":"450:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"435:3:20","nodeType":"YulIdentifier","src":"435:3:20"},"nativeSrc":"435:17:20","nodeType":"YulFunctionCall","src":"435:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack_library","nativeSrc":"374:51:20","nodeType":"YulIdentifier","src":"374:51:20"},"nativeSrc":"374:79:20","nodeType":"YulFunctionCall","src":"374:79:20"},"nativeSrc":"374:79:20","nodeType":"YulExpressionStatement","src":"374:79:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed","nativeSrc":"222:238:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"300:9:20","nodeType":"YulTypedName","src":"300:9:20","type":""},{"name":"value0","nativeSrc":"312:6:20","nodeType":"YulTypedName","src":"312:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"323:4:20","nodeType":"YulTypedName","src":"323:4:20","type":""}],"src":"222:238:20"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060475760003560e01c806325093e1b14604c578063b29a8ff4146066578063ede31502146080575b600080fd5b6052609a565b604051605d919060c0565b60405180910390f35b606c609f565b6040516077919060c0565b60405180910390f35b608660a4565b6040516091919060c0565b60405180910390f35b602481565b601481565b603481565b6000819050919050565b60ba8160a9565b82525050565b600060208201905060d3600083018460b3565b9291505056fea26469706673582212207bf42134d967fd1ef1f01afa7c84386424a4f860423ee8263bfbf38581c1f95e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x47 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25093E1B EQ PUSH1 0x4C JUMPI DUP1 PUSH4 0xB29A8FF4 EQ PUSH1 0x66 JUMPI DUP1 PUSH4 0xEDE31502 EQ PUSH1 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x52 PUSH1 0x9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x5D SWAP2 SWAP1 PUSH1 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6C PUSH1 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x77 SWAP2 SWAP1 PUSH1 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x86 PUSH1 0xA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x91 SWAP2 SWAP1 PUSH1 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x24 DUP2 JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x34 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xBA DUP2 PUSH1 0xA9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xD3 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xF42134D967FD1EF1F01AFA7C84386424A4F860423EE8263BFBF38581 0xC1 0xF9 MCOPY PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"278:4766:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;376:56;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;310:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;438:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;376:56;430:2;376:56;:::o;310:60::-;368:2;310:60;:::o;438:50::-;486:2;438:50;:::o;7:77:20:-;44:7;73:5;62:16;;7:77;;;:::o;90:126::-;185:24;203:5;185:24;:::i;:::-;180:3;173:37;90:126;;:::o;222:238::-;323:4;361:2;350:9;346:18;338:26;;374:79;450:1;439:9;435:17;426:6;374:79;:::i;:::-;222:238;;;;:::o"},"methodIdentifiers":{"PAYMASTER_DATA_OFFSET()":"ede31502","PAYMASTER_POSTOP_GAS_OFFSET()":"25093e1b","PAYMASTER_VALIDATION_GAS_OFFSET()":"b29a8ff4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PAYMASTER_DATA_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_POSTOP_GAS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_VALIDATION_GAS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/core/UserOperationLib.sol\":\"UserOperationLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x42b948af5fa14a96149611595df1186800c7558b2de8762e4b45a7c45c16f65e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://737a7908131ece48a5df1faaa3d0be79c42792379c27f5615dae6aa14cd68c2f\",\"dweb:/ipfs/QmPAxGMDxuek7XWSUVfZpvYE8bustfsjTDVDK8hmE88e1f\"]},\"@account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x2d3450fa3906422b6fdbbe7f2a2a9e36d6f3751bfa9cd80af88befd6a5be78c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292a0ef5295d7f2016e99d2c228958f7f6de94f5bd9652d8696af15af0094a99\",\"dweb:/ipfs/QmVg4fhkZbUB7AopGcaVPmTdvChq7W9ga8fjrc3XaJNTM2\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])":"ae574a43","validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)":"2dd81133","validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))":"062a422b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"params\":{\"userOps\":\"- An array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"- The aggregated signature.\"}},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"params\":{\"signature\":\"- The aggregated signature.\",\"userOps\":\"- An array of UserOperations to validate the signature for.\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"params\":{\"userOp\":\"- The userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"- The value to put into the signature field of the userOp when calling handleOps.                        (usually empty, unless account and aggregator support some kind of \\\"multisig\\\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"notice\":\"Aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code to perform this aggregation.\"},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"notice\":\"Validate an aggregated signature. Reverts if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"notice\":\"Validate the signature of a single userOp. This method should be called by bundler after EntryPointSimulation.simulateValidation() returns the aggregator this account uses. First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xdf580eafa015b81bde436d6a5468cc92b531ada84007cef885e923f6dfc5e8bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99f0060626568619ac94d750eb4c0888d92ca5775a6bd957fef9847843835b77\",\"dweb:/ipfs/QmXJer3D9sTkEj3mmUDqpdqfGpe46Rn9G22nGrfZdP2wAT\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"ret","type":"bytes"}],"name":"DelegateAndRevert","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"inner","type":"bytes"}],"name":"FailedOpWithRevert","type":"error"},{"inputs":[{"internalType":"bytes","name":"returnData","type":"bytes"}],"name":"PostOpReverted","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"PostOpRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"UserOperationPrefundTooLow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"delegateAndRevert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"senderCreator","outputs":[{"internalType":"contract ISenderCreator","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","delegateAndRevert(address,bytes)":"850aaf62","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))":"22cdde4c","handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)":"dbed18e0","handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)":"765e827f","incrementNonce(uint192)":"0bd28e3b","senderCreator()":"09ccb880","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ret\",\"type\":\"bytes\"}],\"name\":\"DelegateAndRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"inner\",\"type\":\"bytes\"}],\"name\":\"FailedOpWithRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"PostOpReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"PostOpRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"UserOperationPrefundTooLow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderCreator\",\"outputs\":[{\"internalType\":\"contract ISenderCreator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. The string starts with a unique code \\\"AAmn\\\",                  where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,                  so a failure can be attributed to the correct entity.\"}}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"details\":\"note that inner is truncated to 2048 bytes\",\"params\":{\"inner\":\"- data from inner cought revert reason\",\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. see FailedOp(uint256,string), above\"}}],\"SignatureValidationFailed(address)\":[{\"params\":{\"aggregator\":\"The aggregator that failed to verify the signature\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"- The factory used to deploy this account (in the initCode)\",\"paymaster\":\"- The paymaster used by this UserOp\",\"sender\":\"- The account that is deployed\",\"userOpHash\":\"- The userOp that deployed this account. UserOperationEvent will follow.\"}},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the reverted call to \\\"postOp\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"SignatureAggregatorChanged(address)\":{\"params\":{\"aggregator\":\"- The aggregator used for the following UserOperationEvents.\"}},\"UserOperationPrefundTooLow(bytes32,address,uint256)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the reverted \\\"callData\\\" call.\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"delegateAndRevert(address,bytes)\":{\"details\":\"calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace  actual EntryPoint code is less convenient.\",\"params\":{\"data\":\"data to pass to target in a delegatecall\",\"target\":\"a target contract to make a delegatecall from entrypoint\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"- The constructor code to be passed into the UserOperation.\"}},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"params\":{\"userOp\":\"- The user operation to generate the request ID for.\"},\"returns\":{\"_0\":\"hash the hash of this UserOperation\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"opsPerAggregator\":\"- The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\"}},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"ops\":\"- The operations to execute.\"}},\"incrementNonce(uint192)\":{\"params\":{\"key\":\"- the \\\"nonce key\\\" to increment the \\\"nonce sequence\\\" for.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"notice\":\"A custom revert error of handleOps andhandleAggregatedOps, to identify the offending op. Should be caught in off-chain handleOps/handleAggregatedOps simulation and not happen on-chain. Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts. NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"notice\":\"A custom revert error of handleOps and handleAggregatedOps, to report a revert by account or paymaster.\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"Error case when a signature aggregator fails to verify the aggregated signature it had created.\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"Account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"An event emitted by handleOps() and handleAggregatedOps(), before starting the execution loop. Any event emitted before this event, is part of the validation.\"},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation Paymaster's \\\"postOp\\\" call reverted with non-zero length.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"Signature aggregator used by the following UserOperationEvents within this bundle.\"},\"UserOperationPrefundTooLow(bytes32,address,uint256)\":{\"notice\":\"UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length.\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"delegateAndRevert(address,bytes)\":{\"notice\":\"Helper method for dry-run testing.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address. Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. This method always revert, and returns the address in SenderAddressResult error.this method cannot be used for EIP-7702 derived contracts.\"},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"notice\":\"Generate a request Id - unique identifier for this request. The request ID is a hash over the content of the userOp (except the signature), entrypoint address, chainId and (optionally) 7702 delegate address\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperations. No signature aggregator is used. If any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"senderCreator()\":{\"notice\":\"Retrieves the immutable SenderCreator contract which is responsible for deployment of sender contracts.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xdf580eafa015b81bde436d6a5468cc92b531ada84007cef885e923f6dfc5e8bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99f0060626568619ac94d750eb4c0888d92ca5775a6bd957fef9847843835b77\",\"dweb:/ipfs/QmXJer3D9sTkEj3mmUDqpdqfGpe46Rn9G22nGrfZdP2wAT\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3b0423737e810dd886183ed32cfed9b45edd315f5fb3e1076fc19f86791adc64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c43081efaa2eda581b6249053281bb58cb0c4eeb6bf87efc55d95daaec2fc931\",\"dweb:/ipfs/QmXRN2JnyzWZNeFMHauTnDuc7jhxGY4ZkY37HTtjXKdC87\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xee493ae200b8c675bdc0da66f7ac6bb883ecea33672d7d0a95526b9eecdedf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://979784a0333ac4ef3cc53ab9323a4b7fa574d929bd511f0eed03d3b0370db22d\",\"dweb:/ipfs/QmeiciN5gs4upM6vfKvrRxWiDBUzMU4uJQRRkJajhim9gX\"]},\"@account-abstraction/contracts/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0x677f651d733162b80d1af7901e4f36469e362737a8353d1d0cc7bb94489e4ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6905a80acd70b444ea230b5b582164cb99aaae518bf72c88f8292df31615570\",\"dweb:/ipfs/QmfTKTPwJYf9pmA3T5PE5cCG8GLLDrLaq3jQqMP3pVRL6w\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xe48e904fcac02295aad07fbfa1c1d449a74bf44c04e432afef6f34d1ef726ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5882b635ea6f5da9ae411485975888431de571f85d4baf35e3db1a83c1f14b85\",\"dweb:/ipfs/QmVSTX36Byr48y8JBmz1hCTGAAyQdTYegQbsSqdRNuSQYz\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"incrementNonce(uint192)\":{\"params\":{\"key\":\"- the \\\"nonce key\\\" to increment the \\\"nonce sequence\\\" for.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xee493ae200b8c675bdc0da66f7ac6bb883ecea33672d7d0a95526b9eecdedf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://979784a0333ac4ef3cc53ab9323a4b7fa574d929bd511f0eed03d3b0370db22d\",\"dweb:/ipfs/QmeiciN5gs4upM6vfKvrRxWiDBUzMU4uJQRRkJajhim9gX\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postOp(uint8,bytes,uint256,uint256)":"7c627b21","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual cost of gas used so far (without this postOp call).\",\"actualUserOpFeePerGas\":\"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp().\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \\\"indefinitely\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x6be37abc0760d60a41124e2e3f46185a0d3df48b32bd73174790981f76fbdae8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c144ba15a63883c7da41fc0729a46108f7d5487dbac2da0bde00aed67f5a2f00\",\"dweb:/ipfs/Qmdh7MzQmCQLh7wz719xMuG2yvMUkKDVwyN44P7pLofJfS\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/ISenderCreator.sol":{"ISenderCreator":{"abi":[{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"createSender","outputs":[{"internalType":"address","name":"sender","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"initCallData","type":"bytes"}],"name":"initEip7702Sender","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"createSender(bytes)":"570e1a36","initEip7702Sender(address,bytes)":"c09ad0d9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"createSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initCallData\",\"type\":\"bytes\"}],\"name\":\"initEip7702Sender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSender(bytes)\":{\"details\":\"Creates a new sender contract.\",\"returns\":{\"sender\":\"Address of the newly created sender contract.\"}},\"initEip7702Sender(address,bytes)\":{\"params\":{\"initCallData\":\"- the call data to be passed to the sender account call.\",\"sender\":\"- the 'sender' EIP-7702 account to be initialized.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initEip7702Sender(address,bytes)\":{\"notice\":\"Use initCallData to initialize an EIP-7702 account. The caller is the EntryPoint contract and it is already verified to be an EIP-7702 account. Note: Can be called multiple times as long as an appropriate initCode is supplied\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/ISenderCreator.sol\":\"ISenderCreator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0x677f651d733162b80d1af7901e4f36469e362737a8353d1d0cc7bb94489e4ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6905a80acd70b444ea230b5b582164cb99aaae518bf72c88f8292df31615570\",\"dweb:/ipfs/QmfTKTPwJYf9pmA3T5PE5cCG8GLLDrLaq3jQqMP3pVRL6w\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"notice\":\"Manage deposits and stakes. Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account). Stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xe48e904fcac02295aad07fbfa1c1d449a74bf44c04e432afef6f34d1ef726ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5882b635ea6f5da9ae411485975888431de571f85d4baf35e3db1a83c1f14b85\",\"dweb:/ipfs/QmVSTX36Byr48y8JBmz1hCTGAAyQdTYegQbsSqdRNuSQYz\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable2Step.sol":{"Ownable2Step":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This extension of the {Ownable} contract includes a two-step mechanism to transfer ownership, where the new owner must call {acceptOwnership} in order to replace the old one. This can help prevent common mistakes, such as transfers of ownership to incorrect accounts, or to contracts that are unable to interact with the permission system. The initial owner is specified at deployment time in the constructor for `Ownable`. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable2Step.sol\":\"Ownable2Step\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2c9d517f0c136d54bd00cd57959d25681d4d6273f5bbbc263afe228303772f0\",\"dweb:/ipfs/QmReNFjXBiufByiAAzfSQ2SM5r3qeUErn46BmN3yVRvrek\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202191b960965a242c100331e3314698dc306ea974706d4575a36882975d69554364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 SWAP2 0xB9 PUSH1 0x96 GAS 0x24 0x2C LT SUB BALANCE 0xE3 BALANCE CHAINID SWAP9 0xDC ADDRESS PUSH15 0xA974706D4575A36882975D69554364 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"698:9376:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202191b960965a242c100331e3314698dc306ea974706d4575a36882975d69554364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 SWAP2 0xB9 PUSH1 0x96 GAS 0x24 0x2C LT SUB BALANCE 0xE3 BALANCE CHAINID SWAP9 0xDC ADDRESS PUSH15 0xA974706D4575A36882975D69554364 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"698:9376:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"contracts/FixedRatePaymaster.sol":{"FixedRatePaymaster":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"_entryPoint","type":"address"},{"internalType":"contract IERC20","name":"_token","type":"address"},{"internalType":"uint256","name":"_rate","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasUsed","type":"uint256"}],"name":"TokensCharged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensWithdrawn","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"withdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_1266":{"entryPoint":null,"id":1266,"parameterSlots":1,"returnSlots":0},"@_2176":{"entryPoint":null,"id":2176,"parameterSlots":3,"returnSlots":0},"@_45":{"entryPoint":null,"id":45,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_1362":{"entryPoint":593,"id":1362,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_1424":{"entryPoint":318,"id":1424,"parameterSlots":1,"returnSlots":0},"@_validateEntryPointInterface_68":{"entryPoint":373,"id":68,"parameterSlots":1,"returnSlots":0},"abi_decode_t_bool_fromMemory":{"entryPoint":1268,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$1617_fromMemory":{"entryPoint":947,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IEntryPoint_$1014_fromMemory":{"entryPoint":885,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1001,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":1289,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IEntryPoint_$1014t_contract$_IERC20_$1617t_uint256_fromMemory":{"entryPoint":1022,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1105,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":1191,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8_to_t_string_memory_ptr_fromStack":{"entryPoint":1392,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1120,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":1206,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1427,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1334,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":826,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":1233,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":1147,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$1617":{"entryPoint":906,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IEntryPoint_$1014":{"entryPoint":844,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":794,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":968,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":789,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8":{"entryPoint":1351,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":1245,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$1617":{"entryPoint":924,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IEntryPoint_$1014":{"entryPoint":862,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":978,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5319:20","nodeType":"YulBlock","src":"0:5319:20","statements":[{"body":{"nativeSrc":"47:35:20","nodeType":"YulBlock","src":"47:35:20","statements":[{"nativeSrc":"57:19:20","nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:20","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:20","nodeType":"YulIdentifier","src":"67:5:20"},"nativeSrc":"67:9:20","nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:20","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:20","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nativeSrc":"177:28:20","nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:20","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:20","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:20","nodeType":"YulIdentifier","src":"187:6:20"},"nativeSrc":"187:12:20","nodeType":"YulFunctionCall","src":"187:12:20"},"nativeSrc":"187:12:20","nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:20","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nativeSrc":"300:28:20","nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:20","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:20","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:20","nodeType":"YulIdentifier","src":"310:6:20"},"nativeSrc":"310:12:20","nodeType":"YulFunctionCall","src":"310:12:20"},"nativeSrc":"310:12:20","nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:20","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nativeSrc":"379:81:20","nodeType":"YulBlock","src":"379:81:20","statements":[{"nativeSrc":"389:65:20","nodeType":"YulAssignment","src":"389:65:20","value":{"arguments":[{"name":"value","nativeSrc":"404:5:20","nodeType":"YulIdentifier","src":"404:5:20"},{"kind":"number","nativeSrc":"411:42:20","nodeType":"YulLiteral","src":"411:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:20","nodeType":"YulIdentifier","src":"400:3:20"},"nativeSrc":"400:54:20","nodeType":"YulFunctionCall","src":"400:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:20","nodeType":"YulIdentifier","src":"389:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:20","nodeType":"YulTypedName","src":"361:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:20","nodeType":"YulTypedName","src":"371:7:20","type":""}],"src":"334:126:20"},{"body":{"nativeSrc":"511:51:20","nodeType":"YulBlock","src":"511:51:20","statements":[{"nativeSrc":"521:35:20","nodeType":"YulAssignment","src":"521:35:20","value":{"arguments":[{"name":"value","nativeSrc":"550:5:20","nodeType":"YulIdentifier","src":"550:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:20","nodeType":"YulIdentifier","src":"532:17:20"},"nativeSrc":"532:24:20","nodeType":"YulFunctionCall","src":"532:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:20","nodeType":"YulIdentifier","src":"521:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:20","nodeType":"YulTypedName","src":"493:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:20","nodeType":"YulTypedName","src":"503:7:20","type":""}],"src":"466:96:20"},{"body":{"nativeSrc":"633:51:20","nodeType":"YulBlock","src":"633:51:20","statements":[{"nativeSrc":"643:35:20","nodeType":"YulAssignment","src":"643:35:20","value":{"arguments":[{"name":"value","nativeSrc":"672:5:20","nodeType":"YulIdentifier","src":"672:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"654:17:20","nodeType":"YulIdentifier","src":"654:17:20"},"nativeSrc":"654:24:20","nodeType":"YulFunctionCall","src":"654:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"643:7:20","nodeType":"YulIdentifier","src":"643:7:20"}]}]},"name":"cleanup_t_contract$_IEntryPoint_$1014","nativeSrc":"568:116:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"615:5:20","nodeType":"YulTypedName","src":"615:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"625:7:20","nodeType":"YulTypedName","src":"625:7:20","type":""}],"src":"568:116:20"},{"body":{"nativeSrc":"753:99:20","nodeType":"YulBlock","src":"753:99:20","statements":[{"body":{"nativeSrc":"830:16:20","nodeType":"YulBlock","src":"830:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"839:1:20","nodeType":"YulLiteral","src":"839:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"842:1:20","nodeType":"YulLiteral","src":"842:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"832:6:20","nodeType":"YulIdentifier","src":"832:6:20"},"nativeSrc":"832:12:20","nodeType":"YulFunctionCall","src":"832:12:20"},"nativeSrc":"832:12:20","nodeType":"YulExpressionStatement","src":"832:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"776:5:20","nodeType":"YulIdentifier","src":"776:5:20"},{"arguments":[{"name":"value","nativeSrc":"821:5:20","nodeType":"YulIdentifier","src":"821:5:20"}],"functionName":{"name":"cleanup_t_contract$_IEntryPoint_$1014","nativeSrc":"783:37:20","nodeType":"YulIdentifier","src":"783:37:20"},"nativeSrc":"783:44:20","nodeType":"YulFunctionCall","src":"783:44:20"}],"functionName":{"name":"eq","nativeSrc":"773:2:20","nodeType":"YulIdentifier","src":"773:2:20"},"nativeSrc":"773:55:20","nodeType":"YulFunctionCall","src":"773:55:20"}],"functionName":{"name":"iszero","nativeSrc":"766:6:20","nodeType":"YulIdentifier","src":"766:6:20"},"nativeSrc":"766:63:20","nodeType":"YulFunctionCall","src":"766:63:20"},"nativeSrc":"763:83:20","nodeType":"YulIf","src":"763:83:20"}]},"name":"validator_revert_t_contract$_IEntryPoint_$1014","nativeSrc":"690:162:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"746:5:20","nodeType":"YulTypedName","src":"746:5:20","type":""}],"src":"690:162:20"},{"body":{"nativeSrc":"941:100:20","nodeType":"YulBlock","src":"941:100:20","statements":[{"nativeSrc":"951:22:20","nodeType":"YulAssignment","src":"951:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"966:6:20","nodeType":"YulIdentifier","src":"966:6:20"}],"functionName":{"name":"mload","nativeSrc":"960:5:20","nodeType":"YulIdentifier","src":"960:5:20"},"nativeSrc":"960:13:20","nodeType":"YulFunctionCall","src":"960:13:20"},"variableNames":[{"name":"value","nativeSrc":"951:5:20","nodeType":"YulIdentifier","src":"951:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1029:5:20","nodeType":"YulIdentifier","src":"1029:5:20"}],"functionName":{"name":"validator_revert_t_contract$_IEntryPoint_$1014","nativeSrc":"982:46:20","nodeType":"YulIdentifier","src":"982:46:20"},"nativeSrc":"982:53:20","nodeType":"YulFunctionCall","src":"982:53:20"},"nativeSrc":"982:53:20","nodeType":"YulExpressionStatement","src":"982:53:20"}]},"name":"abi_decode_t_contract$_IEntryPoint_$1014_fromMemory","nativeSrc":"858:183:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"919:6:20","nodeType":"YulTypedName","src":"919:6:20","type":""},{"name":"end","nativeSrc":"927:3:20","nodeType":"YulTypedName","src":"927:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"935:5:20","nodeType":"YulTypedName","src":"935:5:20","type":""}],"src":"858:183:20"},{"body":{"nativeSrc":"1107:51:20","nodeType":"YulBlock","src":"1107:51:20","statements":[{"nativeSrc":"1117:35:20","nodeType":"YulAssignment","src":"1117:35:20","value":{"arguments":[{"name":"value","nativeSrc":"1146:5:20","nodeType":"YulIdentifier","src":"1146:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1128:17:20","nodeType":"YulIdentifier","src":"1128:17:20"},"nativeSrc":"1128:24:20","nodeType":"YulFunctionCall","src":"1128:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"1117:7:20","nodeType":"YulIdentifier","src":"1117:7:20"}]}]},"name":"cleanup_t_contract$_IERC20_$1617","nativeSrc":"1047:111:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1089:5:20","nodeType":"YulTypedName","src":"1089:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1099:7:20","nodeType":"YulTypedName","src":"1099:7:20","type":""}],"src":"1047:111:20"},{"body":{"nativeSrc":"1222:94:20","nodeType":"YulBlock","src":"1222:94:20","statements":[{"body":{"nativeSrc":"1294:16:20","nodeType":"YulBlock","src":"1294:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1303:1:20","nodeType":"YulLiteral","src":"1303:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1306:1:20","nodeType":"YulLiteral","src":"1306:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1296:6:20","nodeType":"YulIdentifier","src":"1296:6:20"},"nativeSrc":"1296:12:20","nodeType":"YulFunctionCall","src":"1296:12:20"},"nativeSrc":"1296:12:20","nodeType":"YulExpressionStatement","src":"1296:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1245:5:20","nodeType":"YulIdentifier","src":"1245:5:20"},{"arguments":[{"name":"value","nativeSrc":"1285:5:20","nodeType":"YulIdentifier","src":"1285:5:20"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$1617","nativeSrc":"1252:32:20","nodeType":"YulIdentifier","src":"1252:32:20"},"nativeSrc":"1252:39:20","nodeType":"YulFunctionCall","src":"1252:39:20"}],"functionName":{"name":"eq","nativeSrc":"1242:2:20","nodeType":"YulIdentifier","src":"1242:2:20"},"nativeSrc":"1242:50:20","nodeType":"YulFunctionCall","src":"1242:50:20"}],"functionName":{"name":"iszero","nativeSrc":"1235:6:20","nodeType":"YulIdentifier","src":"1235:6:20"},"nativeSrc":"1235:58:20","nodeType":"YulFunctionCall","src":"1235:58:20"},"nativeSrc":"1232:78:20","nodeType":"YulIf","src":"1232:78:20"}]},"name":"validator_revert_t_contract$_IERC20_$1617","nativeSrc":"1164:152:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1215:5:20","nodeType":"YulTypedName","src":"1215:5:20","type":""}],"src":"1164:152:20"},{"body":{"nativeSrc":"1400:95:20","nodeType":"YulBlock","src":"1400:95:20","statements":[{"nativeSrc":"1410:22:20","nodeType":"YulAssignment","src":"1410:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"1425:6:20","nodeType":"YulIdentifier","src":"1425:6:20"}],"functionName":{"name":"mload","nativeSrc":"1419:5:20","nodeType":"YulIdentifier","src":"1419:5:20"},"nativeSrc":"1419:13:20","nodeType":"YulFunctionCall","src":"1419:13:20"},"variableNames":[{"name":"value","nativeSrc":"1410:5:20","nodeType":"YulIdentifier","src":"1410:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1483:5:20","nodeType":"YulIdentifier","src":"1483:5:20"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$1617","nativeSrc":"1441:41:20","nodeType":"YulIdentifier","src":"1441:41:20"},"nativeSrc":"1441:48:20","nodeType":"YulFunctionCall","src":"1441:48:20"},"nativeSrc":"1441:48:20","nodeType":"YulExpressionStatement","src":"1441:48:20"}]},"name":"abi_decode_t_contract$_IERC20_$1617_fromMemory","nativeSrc":"1322:173:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1378:6:20","nodeType":"YulTypedName","src":"1378:6:20","type":""},{"name":"end","nativeSrc":"1386:3:20","nodeType":"YulTypedName","src":"1386:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1394:5:20","nodeType":"YulTypedName","src":"1394:5:20","type":""}],"src":"1322:173:20"},{"body":{"nativeSrc":"1546:32:20","nodeType":"YulBlock","src":"1546:32:20","statements":[{"nativeSrc":"1556:16:20","nodeType":"YulAssignment","src":"1556:16:20","value":{"name":"value","nativeSrc":"1567:5:20","nodeType":"YulIdentifier","src":"1567:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"1556:7:20","nodeType":"YulIdentifier","src":"1556:7:20"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1501:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1528:5:20","nodeType":"YulTypedName","src":"1528:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1538:7:20","nodeType":"YulTypedName","src":"1538:7:20","type":""}],"src":"1501:77:20"},{"body":{"nativeSrc":"1627:79:20","nodeType":"YulBlock","src":"1627:79:20","statements":[{"body":{"nativeSrc":"1684:16:20","nodeType":"YulBlock","src":"1684:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1693:1:20","nodeType":"YulLiteral","src":"1693:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1696:1:20","nodeType":"YulLiteral","src":"1696:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1686:6:20","nodeType":"YulIdentifier","src":"1686:6:20"},"nativeSrc":"1686:12:20","nodeType":"YulFunctionCall","src":"1686:12:20"},"nativeSrc":"1686:12:20","nodeType":"YulExpressionStatement","src":"1686:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1650:5:20","nodeType":"YulIdentifier","src":"1650:5:20"},{"arguments":[{"name":"value","nativeSrc":"1675:5:20","nodeType":"YulIdentifier","src":"1675:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1657:17:20","nodeType":"YulIdentifier","src":"1657:17:20"},"nativeSrc":"1657:24:20","nodeType":"YulFunctionCall","src":"1657:24:20"}],"functionName":{"name":"eq","nativeSrc":"1647:2:20","nodeType":"YulIdentifier","src":"1647:2:20"},"nativeSrc":"1647:35:20","nodeType":"YulFunctionCall","src":"1647:35:20"}],"functionName":{"name":"iszero","nativeSrc":"1640:6:20","nodeType":"YulIdentifier","src":"1640:6:20"},"nativeSrc":"1640:43:20","nodeType":"YulFunctionCall","src":"1640:43:20"},"nativeSrc":"1637:63:20","nodeType":"YulIf","src":"1637:63:20"}]},"name":"validator_revert_t_uint256","nativeSrc":"1584:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1620:5:20","nodeType":"YulTypedName","src":"1620:5:20","type":""}],"src":"1584:122:20"},{"body":{"nativeSrc":"1775:80:20","nodeType":"YulBlock","src":"1775:80:20","statements":[{"nativeSrc":"1785:22:20","nodeType":"YulAssignment","src":"1785:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"1800:6:20","nodeType":"YulIdentifier","src":"1800:6:20"}],"functionName":{"name":"mload","nativeSrc":"1794:5:20","nodeType":"YulIdentifier","src":"1794:5:20"},"nativeSrc":"1794:13:20","nodeType":"YulFunctionCall","src":"1794:13:20"},"variableNames":[{"name":"value","nativeSrc":"1785:5:20","nodeType":"YulIdentifier","src":"1785:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1843:5:20","nodeType":"YulIdentifier","src":"1843:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1816:26:20","nodeType":"YulIdentifier","src":"1816:26:20"},"nativeSrc":"1816:33:20","nodeType":"YulFunctionCall","src":"1816:33:20"},"nativeSrc":"1816:33:20","nodeType":"YulExpressionStatement","src":"1816:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"1712:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1753:6:20","nodeType":"YulTypedName","src":"1753:6:20","type":""},{"name":"end","nativeSrc":"1761:3:20","nodeType":"YulTypedName","src":"1761:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1769:5:20","nodeType":"YulTypedName","src":"1769:5:20","type":""}],"src":"1712:143:20"},{"body":{"nativeSrc":"2007:587:20","nodeType":"YulBlock","src":"2007:587:20","statements":[{"body":{"nativeSrc":"2053:83:20","nodeType":"YulBlock","src":"2053:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2055:77:20","nodeType":"YulIdentifier","src":"2055:77:20"},"nativeSrc":"2055:79:20","nodeType":"YulFunctionCall","src":"2055:79:20"},"nativeSrc":"2055:79:20","nodeType":"YulExpressionStatement","src":"2055:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2028:7:20","nodeType":"YulIdentifier","src":"2028:7:20"},{"name":"headStart","nativeSrc":"2037:9:20","nodeType":"YulIdentifier","src":"2037:9:20"}],"functionName":{"name":"sub","nativeSrc":"2024:3:20","nodeType":"YulIdentifier","src":"2024:3:20"},"nativeSrc":"2024:23:20","nodeType":"YulFunctionCall","src":"2024:23:20"},{"kind":"number","nativeSrc":"2049:2:20","nodeType":"YulLiteral","src":"2049:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2020:3:20","nodeType":"YulIdentifier","src":"2020:3:20"},"nativeSrc":"2020:32:20","nodeType":"YulFunctionCall","src":"2020:32:20"},"nativeSrc":"2017:119:20","nodeType":"YulIf","src":"2017:119:20"},{"nativeSrc":"2146:148:20","nodeType":"YulBlock","src":"2146:148:20","statements":[{"nativeSrc":"2161:15:20","nodeType":"YulVariableDeclaration","src":"2161:15:20","value":{"kind":"number","nativeSrc":"2175:1:20","nodeType":"YulLiteral","src":"2175:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2165:6:20","nodeType":"YulTypedName","src":"2165:6:20","type":""}]},{"nativeSrc":"2190:94:20","nodeType":"YulAssignment","src":"2190:94:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2256:9:20","nodeType":"YulIdentifier","src":"2256:9:20"},{"name":"offset","nativeSrc":"2267:6:20","nodeType":"YulIdentifier","src":"2267:6:20"}],"functionName":{"name":"add","nativeSrc":"2252:3:20","nodeType":"YulIdentifier","src":"2252:3:20"},"nativeSrc":"2252:22:20","nodeType":"YulFunctionCall","src":"2252:22:20"},{"name":"dataEnd","nativeSrc":"2276:7:20","nodeType":"YulIdentifier","src":"2276:7:20"}],"functionName":{"name":"abi_decode_t_contract$_IEntryPoint_$1014_fromMemory","nativeSrc":"2200:51:20","nodeType":"YulIdentifier","src":"2200:51:20"},"nativeSrc":"2200:84:20","nodeType":"YulFunctionCall","src":"2200:84:20"},"variableNames":[{"name":"value0","nativeSrc":"2190:6:20","nodeType":"YulIdentifier","src":"2190:6:20"}]}]},{"nativeSrc":"2304:144:20","nodeType":"YulBlock","src":"2304:144:20","statements":[{"nativeSrc":"2319:16:20","nodeType":"YulVariableDeclaration","src":"2319:16:20","value":{"kind":"number","nativeSrc":"2333:2:20","nodeType":"YulLiteral","src":"2333:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2323:6:20","nodeType":"YulTypedName","src":"2323:6:20","type":""}]},{"nativeSrc":"2349:89:20","nodeType":"YulAssignment","src":"2349:89:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2410:9:20","nodeType":"YulIdentifier","src":"2410:9:20"},{"name":"offset","nativeSrc":"2421:6:20","nodeType":"YulIdentifier","src":"2421:6:20"}],"functionName":{"name":"add","nativeSrc":"2406:3:20","nodeType":"YulIdentifier","src":"2406:3:20"},"nativeSrc":"2406:22:20","nodeType":"YulFunctionCall","src":"2406:22:20"},{"name":"dataEnd","nativeSrc":"2430:7:20","nodeType":"YulIdentifier","src":"2430:7:20"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$1617_fromMemory","nativeSrc":"2359:46:20","nodeType":"YulIdentifier","src":"2359:46:20"},"nativeSrc":"2359:79:20","nodeType":"YulFunctionCall","src":"2359:79:20"},"variableNames":[{"name":"value1","nativeSrc":"2349:6:20","nodeType":"YulIdentifier","src":"2349:6:20"}]}]},{"nativeSrc":"2458:129:20","nodeType":"YulBlock","src":"2458:129:20","statements":[{"nativeSrc":"2473:16:20","nodeType":"YulVariableDeclaration","src":"2473:16:20","value":{"kind":"number","nativeSrc":"2487:2:20","nodeType":"YulLiteral","src":"2487:2:20","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"2477:6:20","nodeType":"YulTypedName","src":"2477:6:20","type":""}]},{"nativeSrc":"2503:74:20","nodeType":"YulAssignment","src":"2503:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2549:9:20","nodeType":"YulIdentifier","src":"2549:9:20"},{"name":"offset","nativeSrc":"2560:6:20","nodeType":"YulIdentifier","src":"2560:6:20"}],"functionName":{"name":"add","nativeSrc":"2545:3:20","nodeType":"YulIdentifier","src":"2545:3:20"},"nativeSrc":"2545:22:20","nodeType":"YulFunctionCall","src":"2545:22:20"},{"name":"dataEnd","nativeSrc":"2569:7:20","nodeType":"YulIdentifier","src":"2569:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"2513:31:20","nodeType":"YulIdentifier","src":"2513:31:20"},"nativeSrc":"2513:64:20","nodeType":"YulFunctionCall","src":"2513:64:20"},"variableNames":[{"name":"value2","nativeSrc":"2503:6:20","nodeType":"YulIdentifier","src":"2503:6:20"}]}]}]},"name":"abi_decode_tuple_t_contract$_IEntryPoint_$1014t_contract$_IERC20_$1617t_uint256_fromMemory","nativeSrc":"1861:733:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1961:9:20","nodeType":"YulTypedName","src":"1961:9:20","type":""},{"name":"dataEnd","nativeSrc":"1972:7:20","nodeType":"YulTypedName","src":"1972:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1984:6:20","nodeType":"YulTypedName","src":"1984:6:20","type":""},{"name":"value1","nativeSrc":"1992:6:20","nodeType":"YulTypedName","src":"1992:6:20","type":""},{"name":"value2","nativeSrc":"2000:6:20","nodeType":"YulTypedName","src":"2000:6:20","type":""}],"src":"1861:733:20"},{"body":{"nativeSrc":"2665:53:20","nodeType":"YulBlock","src":"2665:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2682:3:20","nodeType":"YulIdentifier","src":"2682:3:20"},{"arguments":[{"name":"value","nativeSrc":"2705:5:20","nodeType":"YulIdentifier","src":"2705:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2687:17:20","nodeType":"YulIdentifier","src":"2687:17:20"},"nativeSrc":"2687:24:20","nodeType":"YulFunctionCall","src":"2687:24:20"}],"functionName":{"name":"mstore","nativeSrc":"2675:6:20","nodeType":"YulIdentifier","src":"2675:6:20"},"nativeSrc":"2675:37:20","nodeType":"YulFunctionCall","src":"2675:37:20"},"nativeSrc":"2675:37:20","nodeType":"YulExpressionStatement","src":"2675:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2600:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2653:5:20","nodeType":"YulTypedName","src":"2653:5:20","type":""},{"name":"pos","nativeSrc":"2660:3:20","nodeType":"YulTypedName","src":"2660:3:20","type":""}],"src":"2600:118:20"},{"body":{"nativeSrc":"2822:124:20","nodeType":"YulBlock","src":"2822:124:20","statements":[{"nativeSrc":"2832:26:20","nodeType":"YulAssignment","src":"2832:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"2844:9:20","nodeType":"YulIdentifier","src":"2844:9:20"},{"kind":"number","nativeSrc":"2855:2:20","nodeType":"YulLiteral","src":"2855:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2840:3:20","nodeType":"YulIdentifier","src":"2840:3:20"},"nativeSrc":"2840:18:20","nodeType":"YulFunctionCall","src":"2840:18:20"},"variableNames":[{"name":"tail","nativeSrc":"2832:4:20","nodeType":"YulIdentifier","src":"2832:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2912:6:20","nodeType":"YulIdentifier","src":"2912:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"2925:9:20","nodeType":"YulIdentifier","src":"2925:9:20"},{"kind":"number","nativeSrc":"2936:1:20","nodeType":"YulLiteral","src":"2936:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2921:3:20","nodeType":"YulIdentifier","src":"2921:3:20"},"nativeSrc":"2921:17:20","nodeType":"YulFunctionCall","src":"2921:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2868:43:20","nodeType":"YulIdentifier","src":"2868:43:20"},"nativeSrc":"2868:71:20","nodeType":"YulFunctionCall","src":"2868:71:20"},"nativeSrc":"2868:71:20","nodeType":"YulExpressionStatement","src":"2868:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2724:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2794:9:20","nodeType":"YulTypedName","src":"2794:9:20","type":""},{"name":"value0","nativeSrc":"2806:6:20","nodeType":"YulTypedName","src":"2806:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2817:4:20","nodeType":"YulTypedName","src":"2817:4:20","type":""}],"src":"2724:222:20"},{"body":{"nativeSrc":"2996:105:20","nodeType":"YulBlock","src":"2996:105:20","statements":[{"nativeSrc":"3006:89:20","nodeType":"YulAssignment","src":"3006:89:20","value":{"arguments":[{"name":"value","nativeSrc":"3021:5:20","nodeType":"YulIdentifier","src":"3021:5:20"},{"kind":"number","nativeSrc":"3028:66:20","nodeType":"YulLiteral","src":"3028:66:20","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"3017:3:20","nodeType":"YulIdentifier","src":"3017:3:20"},"nativeSrc":"3017:78:20","nodeType":"YulFunctionCall","src":"3017:78:20"},"variableNames":[{"name":"cleaned","nativeSrc":"3006:7:20","nodeType":"YulIdentifier","src":"3006:7:20"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"2952:149:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2978:5:20","nodeType":"YulTypedName","src":"2978:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2988:7:20","nodeType":"YulTypedName","src":"2988:7:20","type":""}],"src":"2952:149:20"},{"body":{"nativeSrc":"3170:52:20","nodeType":"YulBlock","src":"3170:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3187:3:20","nodeType":"YulIdentifier","src":"3187:3:20"},{"arguments":[{"name":"value","nativeSrc":"3209:5:20","nodeType":"YulIdentifier","src":"3209:5:20"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"3192:16:20","nodeType":"YulIdentifier","src":"3192:16:20"},"nativeSrc":"3192:23:20","nodeType":"YulFunctionCall","src":"3192:23:20"}],"functionName":{"name":"mstore","nativeSrc":"3180:6:20","nodeType":"YulIdentifier","src":"3180:6:20"},"nativeSrc":"3180:36:20","nodeType":"YulFunctionCall","src":"3180:36:20"},"nativeSrc":"3180:36:20","nodeType":"YulExpressionStatement","src":"3180:36:20"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"3107:115:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3158:5:20","nodeType":"YulTypedName","src":"3158:5:20","type":""},{"name":"pos","nativeSrc":"3165:3:20","nodeType":"YulTypedName","src":"3165:3:20","type":""}],"src":"3107:115:20"},{"body":{"nativeSrc":"3324:122:20","nodeType":"YulBlock","src":"3324:122:20","statements":[{"nativeSrc":"3334:26:20","nodeType":"YulAssignment","src":"3334:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"3346:9:20","nodeType":"YulIdentifier","src":"3346:9:20"},{"kind":"number","nativeSrc":"3357:2:20","nodeType":"YulLiteral","src":"3357:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3342:3:20","nodeType":"YulIdentifier","src":"3342:3:20"},"nativeSrc":"3342:18:20","nodeType":"YulFunctionCall","src":"3342:18:20"},"variableNames":[{"name":"tail","nativeSrc":"3334:4:20","nodeType":"YulIdentifier","src":"3334:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3412:6:20","nodeType":"YulIdentifier","src":"3412:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"3425:9:20","nodeType":"YulIdentifier","src":"3425:9:20"},{"kind":"number","nativeSrc":"3436:1:20","nodeType":"YulLiteral","src":"3436:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3421:3:20","nodeType":"YulIdentifier","src":"3421:3:20"},"nativeSrc":"3421:17:20","nodeType":"YulFunctionCall","src":"3421:17:20"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"3370:41:20","nodeType":"YulIdentifier","src":"3370:41:20"},"nativeSrc":"3370:69:20","nodeType":"YulFunctionCall","src":"3370:69:20"},"nativeSrc":"3370:69:20","nodeType":"YulExpressionStatement","src":"3370:69:20"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nativeSrc":"3228:218:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3296:9:20","nodeType":"YulTypedName","src":"3296:9:20","type":""},{"name":"value0","nativeSrc":"3308:6:20","nodeType":"YulTypedName","src":"3308:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3319:4:20","nodeType":"YulTypedName","src":"3319:4:20","type":""}],"src":"3228:218:20"},{"body":{"nativeSrc":"3494:48:20","nodeType":"YulBlock","src":"3494:48:20","statements":[{"nativeSrc":"3504:32:20","nodeType":"YulAssignment","src":"3504:32:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3529:5:20","nodeType":"YulIdentifier","src":"3529:5:20"}],"functionName":{"name":"iszero","nativeSrc":"3522:6:20","nodeType":"YulIdentifier","src":"3522:6:20"},"nativeSrc":"3522:13:20","nodeType":"YulFunctionCall","src":"3522:13:20"}],"functionName":{"name":"iszero","nativeSrc":"3515:6:20","nodeType":"YulIdentifier","src":"3515:6:20"},"nativeSrc":"3515:21:20","nodeType":"YulFunctionCall","src":"3515:21:20"},"variableNames":[{"name":"cleaned","nativeSrc":"3504:7:20","nodeType":"YulIdentifier","src":"3504:7:20"}]}]},"name":"cleanup_t_bool","nativeSrc":"3452:90:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3476:5:20","nodeType":"YulTypedName","src":"3476:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3486:7:20","nodeType":"YulTypedName","src":"3486:7:20","type":""}],"src":"3452:90:20"},{"body":{"nativeSrc":"3588:76:20","nodeType":"YulBlock","src":"3588:76:20","statements":[{"body":{"nativeSrc":"3642:16:20","nodeType":"YulBlock","src":"3642:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3651:1:20","nodeType":"YulLiteral","src":"3651:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"3654:1:20","nodeType":"YulLiteral","src":"3654:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3644:6:20","nodeType":"YulIdentifier","src":"3644:6:20"},"nativeSrc":"3644:12:20","nodeType":"YulFunctionCall","src":"3644:12:20"},"nativeSrc":"3644:12:20","nodeType":"YulExpressionStatement","src":"3644:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3611:5:20","nodeType":"YulIdentifier","src":"3611:5:20"},{"arguments":[{"name":"value","nativeSrc":"3633:5:20","nodeType":"YulIdentifier","src":"3633:5:20"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3618:14:20","nodeType":"YulIdentifier","src":"3618:14:20"},"nativeSrc":"3618:21:20","nodeType":"YulFunctionCall","src":"3618:21:20"}],"functionName":{"name":"eq","nativeSrc":"3608:2:20","nodeType":"YulIdentifier","src":"3608:2:20"},"nativeSrc":"3608:32:20","nodeType":"YulFunctionCall","src":"3608:32:20"}],"functionName":{"name":"iszero","nativeSrc":"3601:6:20","nodeType":"YulIdentifier","src":"3601:6:20"},"nativeSrc":"3601:40:20","nodeType":"YulFunctionCall","src":"3601:40:20"},"nativeSrc":"3598:60:20","nodeType":"YulIf","src":"3598:60:20"}]},"name":"validator_revert_t_bool","nativeSrc":"3548:116:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3581:5:20","nodeType":"YulTypedName","src":"3581:5:20","type":""}],"src":"3548:116:20"},{"body":{"nativeSrc":"3730:77:20","nodeType":"YulBlock","src":"3730:77:20","statements":[{"nativeSrc":"3740:22:20","nodeType":"YulAssignment","src":"3740:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"3755:6:20","nodeType":"YulIdentifier","src":"3755:6:20"}],"functionName":{"name":"mload","nativeSrc":"3749:5:20","nodeType":"YulIdentifier","src":"3749:5:20"},"nativeSrc":"3749:13:20","nodeType":"YulFunctionCall","src":"3749:13:20"},"variableNames":[{"name":"value","nativeSrc":"3740:5:20","nodeType":"YulIdentifier","src":"3740:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3795:5:20","nodeType":"YulIdentifier","src":"3795:5:20"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"3771:23:20","nodeType":"YulIdentifier","src":"3771:23:20"},"nativeSrc":"3771:30:20","nodeType":"YulFunctionCall","src":"3771:30:20"},"nativeSrc":"3771:30:20","nodeType":"YulExpressionStatement","src":"3771:30:20"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"3670:137:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3708:6:20","nodeType":"YulTypedName","src":"3708:6:20","type":""},{"name":"end","nativeSrc":"3716:3:20","nodeType":"YulTypedName","src":"3716:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3724:5:20","nodeType":"YulTypedName","src":"3724:5:20","type":""}],"src":"3670:137:20"},{"body":{"nativeSrc":"3887:271:20","nodeType":"YulBlock","src":"3887:271:20","statements":[{"body":{"nativeSrc":"3933:83:20","nodeType":"YulBlock","src":"3933:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3935:77:20","nodeType":"YulIdentifier","src":"3935:77:20"},"nativeSrc":"3935:79:20","nodeType":"YulFunctionCall","src":"3935:79:20"},"nativeSrc":"3935:79:20","nodeType":"YulExpressionStatement","src":"3935:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3908:7:20","nodeType":"YulIdentifier","src":"3908:7:20"},{"name":"headStart","nativeSrc":"3917:9:20","nodeType":"YulIdentifier","src":"3917:9:20"}],"functionName":{"name":"sub","nativeSrc":"3904:3:20","nodeType":"YulIdentifier","src":"3904:3:20"},"nativeSrc":"3904:23:20","nodeType":"YulFunctionCall","src":"3904:23:20"},{"kind":"number","nativeSrc":"3929:2:20","nodeType":"YulLiteral","src":"3929:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3900:3:20","nodeType":"YulIdentifier","src":"3900:3:20"},"nativeSrc":"3900:32:20","nodeType":"YulFunctionCall","src":"3900:32:20"},"nativeSrc":"3897:119:20","nodeType":"YulIf","src":"3897:119:20"},{"nativeSrc":"4026:125:20","nodeType":"YulBlock","src":"4026:125:20","statements":[{"nativeSrc":"4041:15:20","nodeType":"YulVariableDeclaration","src":"4041:15:20","value":{"kind":"number","nativeSrc":"4055:1:20","nodeType":"YulLiteral","src":"4055:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4045:6:20","nodeType":"YulTypedName","src":"4045:6:20","type":""}]},{"nativeSrc":"4070:71:20","nodeType":"YulAssignment","src":"4070:71:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4113:9:20","nodeType":"YulIdentifier","src":"4113:9:20"},{"name":"offset","nativeSrc":"4124:6:20","nodeType":"YulIdentifier","src":"4124:6:20"}],"functionName":{"name":"add","nativeSrc":"4109:3:20","nodeType":"YulIdentifier","src":"4109:3:20"},"nativeSrc":"4109:22:20","nodeType":"YulFunctionCall","src":"4109:22:20"},{"name":"dataEnd","nativeSrc":"4133:7:20","nodeType":"YulIdentifier","src":"4133:7:20"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"4080:28:20","nodeType":"YulIdentifier","src":"4080:28:20"},"nativeSrc":"4080:61:20","nodeType":"YulFunctionCall","src":"4080:61:20"},"variableNames":[{"name":"value0","nativeSrc":"4070:6:20","nodeType":"YulIdentifier","src":"4070:6:20"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"3813:345:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3857:9:20","nodeType":"YulTypedName","src":"3857:9:20","type":""},{"name":"dataEnd","nativeSrc":"3868:7:20","nodeType":"YulTypedName","src":"3868:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3880:6:20","nodeType":"YulTypedName","src":"3880:6:20","type":""}],"src":"3813:345:20"},{"body":{"nativeSrc":"4260:73:20","nodeType":"YulBlock","src":"4260:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4277:3:20","nodeType":"YulIdentifier","src":"4277:3:20"},{"name":"length","nativeSrc":"4282:6:20","nodeType":"YulIdentifier","src":"4282:6:20"}],"functionName":{"name":"mstore","nativeSrc":"4270:6:20","nodeType":"YulIdentifier","src":"4270:6:20"},"nativeSrc":"4270:19:20","nodeType":"YulFunctionCall","src":"4270:19:20"},"nativeSrc":"4270:19:20","nodeType":"YulExpressionStatement","src":"4270:19:20"},{"nativeSrc":"4298:29:20","nodeType":"YulAssignment","src":"4298:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"4317:3:20","nodeType":"YulIdentifier","src":"4317:3:20"},{"kind":"number","nativeSrc":"4322:4:20","nodeType":"YulLiteral","src":"4322:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4313:3:20","nodeType":"YulIdentifier","src":"4313:3:20"},"nativeSrc":"4313:14:20","nodeType":"YulFunctionCall","src":"4313:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"4298:11:20","nodeType":"YulIdentifier","src":"4298:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4164:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4232:3:20","nodeType":"YulTypedName","src":"4232:3:20","type":""},{"name":"length","nativeSrc":"4237:6:20","nodeType":"YulTypedName","src":"4237:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"4248:11:20","nodeType":"YulTypedName","src":"4248:11:20","type":""}],"src":"4164:169:20"},{"body":{"nativeSrc":"4445:74:20","nodeType":"YulBlock","src":"4445:74:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"4467:6:20","nodeType":"YulIdentifier","src":"4467:6:20"},{"kind":"number","nativeSrc":"4475:1:20","nodeType":"YulLiteral","src":"4475:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4463:3:20","nodeType":"YulIdentifier","src":"4463:3:20"},"nativeSrc":"4463:14:20","nodeType":"YulFunctionCall","src":"4463:14:20"},{"hexValue":"49456e747279506f696e7420696e74657266616365206d69736d61746368","kind":"string","nativeSrc":"4479:32:20","nodeType":"YulLiteral","src":"4479:32:20","type":"","value":"IEntryPoint interface mismatch"}],"functionName":{"name":"mstore","nativeSrc":"4456:6:20","nodeType":"YulIdentifier","src":"4456:6:20"},"nativeSrc":"4456:56:20","nodeType":"YulFunctionCall","src":"4456:56:20"},"nativeSrc":"4456:56:20","nodeType":"YulExpressionStatement","src":"4456:56:20"}]},"name":"store_literal_in_memory_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8","nativeSrc":"4339:180:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"4437:6:20","nodeType":"YulTypedName","src":"4437:6:20","type":""}],"src":"4339:180:20"},{"body":{"nativeSrc":"4671:220:20","nodeType":"YulBlock","src":"4671:220:20","statements":[{"nativeSrc":"4681:74:20","nodeType":"YulAssignment","src":"4681:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"4747:3:20","nodeType":"YulIdentifier","src":"4747:3:20"},{"kind":"number","nativeSrc":"4752:2:20","nodeType":"YulLiteral","src":"4752:2:20","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4688:58:20","nodeType":"YulIdentifier","src":"4688:58:20"},"nativeSrc":"4688:67:20","nodeType":"YulFunctionCall","src":"4688:67:20"},"variableNames":[{"name":"pos","nativeSrc":"4681:3:20","nodeType":"YulIdentifier","src":"4681:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"4853:3:20","nodeType":"YulIdentifier","src":"4853:3:20"}],"functionName":{"name":"store_literal_in_memory_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8","nativeSrc":"4764:88:20","nodeType":"YulIdentifier","src":"4764:88:20"},"nativeSrc":"4764:93:20","nodeType":"YulFunctionCall","src":"4764:93:20"},"nativeSrc":"4764:93:20","nodeType":"YulExpressionStatement","src":"4764:93:20"},{"nativeSrc":"4866:19:20","nodeType":"YulAssignment","src":"4866:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"4877:3:20","nodeType":"YulIdentifier","src":"4877:3:20"},{"kind":"number","nativeSrc":"4882:2:20","nodeType":"YulLiteral","src":"4882:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4873:3:20","nodeType":"YulIdentifier","src":"4873:3:20"},"nativeSrc":"4873:12:20","nodeType":"YulFunctionCall","src":"4873:12:20"},"variableNames":[{"name":"end","nativeSrc":"4866:3:20","nodeType":"YulIdentifier","src":"4866:3:20"}]}]},"name":"abi_encode_t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8_to_t_string_memory_ptr_fromStack","nativeSrc":"4525:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4659:3:20","nodeType":"YulTypedName","src":"4659:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4667:3:20","nodeType":"YulTypedName","src":"4667:3:20","type":""}],"src":"4525:366:20"},{"body":{"nativeSrc":"5068:248:20","nodeType":"YulBlock","src":"5068:248:20","statements":[{"nativeSrc":"5078:26:20","nodeType":"YulAssignment","src":"5078:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"5090:9:20","nodeType":"YulIdentifier","src":"5090:9:20"},{"kind":"number","nativeSrc":"5101:2:20","nodeType":"YulLiteral","src":"5101:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5086:3:20","nodeType":"YulIdentifier","src":"5086:3:20"},"nativeSrc":"5086:18:20","nodeType":"YulFunctionCall","src":"5086:18:20"},"variableNames":[{"name":"tail","nativeSrc":"5078:4:20","nodeType":"YulIdentifier","src":"5078:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5125:9:20","nodeType":"YulIdentifier","src":"5125:9:20"},{"kind":"number","nativeSrc":"5136:1:20","nodeType":"YulLiteral","src":"5136:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5121:3:20","nodeType":"YulIdentifier","src":"5121:3:20"},"nativeSrc":"5121:17:20","nodeType":"YulFunctionCall","src":"5121:17:20"},{"arguments":[{"name":"tail","nativeSrc":"5144:4:20","nodeType":"YulIdentifier","src":"5144:4:20"},{"name":"headStart","nativeSrc":"5150:9:20","nodeType":"YulIdentifier","src":"5150:9:20"}],"functionName":{"name":"sub","nativeSrc":"5140:3:20","nodeType":"YulIdentifier","src":"5140:3:20"},"nativeSrc":"5140:20:20","nodeType":"YulFunctionCall","src":"5140:20:20"}],"functionName":{"name":"mstore","nativeSrc":"5114:6:20","nodeType":"YulIdentifier","src":"5114:6:20"},"nativeSrc":"5114:47:20","nodeType":"YulFunctionCall","src":"5114:47:20"},"nativeSrc":"5114:47:20","nodeType":"YulExpressionStatement","src":"5114:47:20"},{"nativeSrc":"5170:139:20","nodeType":"YulAssignment","src":"5170:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"5304:4:20","nodeType":"YulIdentifier","src":"5304:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8_to_t_string_memory_ptr_fromStack","nativeSrc":"5178:124:20","nodeType":"YulIdentifier","src":"5178:124:20"},"nativeSrc":"5178:131:20","nodeType":"YulFunctionCall","src":"5178:131:20"},"variableNames":[{"name":"tail","nativeSrc":"5170:4:20","nodeType":"YulIdentifier","src":"5170:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4897:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5048:9:20","nodeType":"YulTypedName","src":"5048:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5063:4:20","nodeType":"YulTypedName","src":"5063:4:20","type":""}],"src":"4897:419:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IEntryPoint_$1014(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IEntryPoint_$1014(value) {\n        if iszero(eq(value, cleanup_t_contract$_IEntryPoint_$1014(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IEntryPoint_$1014_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IEntryPoint_$1014(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$1617(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$1617(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$1617(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$1617_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$1617(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IEntryPoint_$1014t_contract$_IERC20_$1617t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IEntryPoint_$1014_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$1617_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8(memPtr) {\n\n        mstore(add(memPtr, 0), \"IEntryPoint interface mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e060405234801561001057600080fd5b50604051611f8f380380611f8f833981810160405281019061003291906103fe565b8233600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a65760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009d9190610460565b60405180910390fd5b6100b58161013e60201b60201c565b506100c58161017560201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508060c081815250505050506105b3565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556101728161025160201b60201c565b50565b8073ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f989ccc58000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016101ce91906104b6565b602060405180830381865afa1580156101eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020f9190610509565b61024e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024590610593565b60405180910390fd5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103458261031a565b9050919050565b60006103578261033a565b9050919050565b6103678161034c565b811461037257600080fd5b50565b6000815190506103848161035e565b92915050565b60006103958261033a565b9050919050565b6103a58161038a565b81146103b057600080fd5b50565b6000815190506103c28161039c565b92915050565b6000819050919050565b6103db816103c8565b81146103e657600080fd5b50565b6000815190506103f8816103d2565b92915050565b60008060006060848603121561041757610416610315565b5b600061042586828701610375565b9350506020610436868287016103b3565b9250506040610447868287016103e9565b9150509250925092565b61045a8161033a565b82525050565b60006020820190506104756000830184610451565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6104b08161047b565b82525050565b60006020820190506104cb60008301846104a7565b92915050565b60008115159050919050565b6104e6816104d1565b81146104f157600080fd5b50565b600081519050610503816104dd565b92915050565b60006020828403121561051f5761051e610315565b5b600061052d848285016104f4565b91505092915050565b600082825260208201905092915050565b7f49456e747279506f696e7420696e74657266616365206d69736d617463680000600082015250565b600061057d601e83610536565b915061058882610547565b602082019050919050565b600060208201905081810360008301526105ac81610570565b9050919050565b60805160a05160c05161194b610644600039600081816104b801528181610c330152610e770152600081816104e60152818161058701528181610a7401528181610c7901528181610d3a0152610eab015260008181610390015281816104270152818161072a01528181610756015281816107e0015281816108700152818161090f0152610b9e015261194b6000f3fe6080604052600436106101025760003560e01c80638da5cb5b11610095578063c399ec8811610064578063c399ec88146102d2578063d0e30db0146102fd578063e30c397814610307578063f2fde38b14610332578063fc0c546a1461035b57610109565b80638da5cb5b1461023c578063b0d691fe14610267578063bb9fe6bf14610292578063c23a5cea146102a957610109565b806352b7512c116100d157806352b7512c146101a7578063715018a6146101e557806379ba5097146101fc5780637c627b211461021357610109565b80630396cb601461010e578063205c28781461012a5780632c4e722e1461015357806349df728c1461017e57610109565b3661010957005b600080fd5b61012860048036038101906101239190611177565b610386565b005b34801561013657600080fd5b50610151600480360381019061014c9190611238565b61041d565b005b34801561015f57600080fd5b506101686104b6565b6040516101759190611287565b60405180910390f35b34801561018a57600080fd5b506101a560048036038101906101a091906112e0565b6104da565b005b3480156101b357600080fd5b506101ce60048036038101906101c99190611368565b61061d565b6040516101dc929190611467565b60405180910390f35b3480156101f157600080fd5b506101fa610640565b005b34801561020857600080fd5b50610211610654565b005b34801561021f57600080fd5b5061023a60048036038101906102359190611521565b6106e3565b005b34801561024857600080fd5b506102516106ff565b60405161025e91906115b8565b60405180910390f35b34801561027357600080fd5b5061027c610728565b6040516102899190611632565b60405180910390f35b34801561029e57600080fd5b506102a761074c565b005b3480156102b557600080fd5b506102d060048036038101906102cb919061164d565b6107d6565b005b3480156102de57600080fd5b506102e761086c565b6040516102f49190611287565b60405180910390f35b61030561090d565b005b34801561031357600080fd5b5061031c61099b565b60405161032991906115b8565b60405180910390f35b34801561033e57600080fd5b50610359600480360381019061035491906112e0565b6109c5565b005b34801561036757600080fd5b50610370610a72565b60405161037d919061169b565b60405180910390f35b61038e610a96565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b81526004016103e891906116c5565b6000604051808303818588803b15801561040157600080fd5b505af1158015610415573d6000803e3d6000fd5b505050505050565b610425610a96565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b81526004016104809291906116ef565b600060405180830381600087803b15801561049a57600080fd5b505af11580156104ae573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6104e2610a96565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161053d91906115b8565b602060405180830381865afa15801561055a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057e919061172d565b90506105cb82827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610b1d9092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b826040516106119190611287565b60405180910390a25050565b60606000610629610b9c565b610634858585610c2c565b91509150935093915050565b610648610a96565b6106526000610e27565b565b600061065e610e58565b90508073ffffffffffffffffffffffffffffffffffffffff1661067f61099b565b73ffffffffffffffffffffffffffffffffffffffff16146106d757806040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106ce91906115b8565b60405180910390fd5b6106e081610e27565b50565b6106eb610b9c565b6106f88585858585610e60565b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b610754610a96565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107bc57600080fd5b505af11580156107d0573d6000803e3d6000fd5b50505050565b6107de610a96565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b8152600401610837919061175a565b600060405180830381600087803b15801561085157600080fd5b505af1158015610865573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108c791906115b8565b602060405180830381865afa1580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610908919061172d565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b815260040161096791906115b8565b6000604051808303818588803b15801561098057600080fd5b505af1158015610994573d6000803e3d6000fd5b5050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6109cd610a96565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16610a2d6106ff565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b7f000000000000000000000000000000000000000000000000000000000000000081565b610a9e610e58565b73ffffffffffffffffffffffffffffffffffffffff16610abc6106ff565b73ffffffffffffffffffffffffffffffffffffffff1614610b1b57610adf610e58565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b1291906115b8565b60405180910390fd5b565b610b97838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610b50929190611775565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f49565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c21906117fb565b60405180910390fd5b565b60606000807f000000000000000000000000000000000000000000000000000000000000000084610c5d919061184a565b90506000866000016020810190610c7491906112e0565b9050817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e83306040518363ffffffff1660e01b8152600401610cd292919061188c565b602060405180830381865afa158015610cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d13919061172d565b1015610d375760016040518060200160405280600081525090935093505050610e1f565b817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610d9191906115b8565b602060405180830381865afa158015610dae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd2919061172d565b1015610df65760016040518060200160405280600081525090935093505050610e1f565b80604051602001610e0791906115b8565b60405160208183030381529060405260009350935050505b935093915050565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055610e5581610feb565b50565b600033905090565b60008484810190610e71919061164d565b905060007f000000000000000000000000000000000000000000000000000000000000000084610ea1919061184a565b9050610ef08230837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166110af909392919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167fffd0b669a1dd6cd4e81d5fa668229de53f1912281efd7c8374dfc2208164962f8286604051610f389291906118b5565b60405180910390a250505050505050565b600080602060008451602086016000885af180610f6c576040513d6000823e3d81fd5b3d925060005191505060008214610f87576001811415610fa3565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b15610fe557836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610fdc91906115b8565b60405180910390fd5b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61112b848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016110e4939291906118de565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f49565b50505050565b600080fd5b600080fd5b600063ffffffff82169050919050565b6111548161113b565b811461115f57600080fd5b50565b6000813590506111718161114b565b92915050565b60006020828403121561118d5761118c611131565b5b600061119b84828501611162565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111cf826111a4565b9050919050565b6111df816111c4565b81146111ea57600080fd5b50565b6000813590506111fc816111d6565b92915050565b6000819050919050565b61121581611202565b811461122057600080fd5b50565b6000813590506112328161120c565b92915050565b6000806040838503121561124f5761124e611131565b5b600061125d858286016111ed565b925050602061126e85828601611223565b9150509250929050565b61128181611202565b82525050565b600060208201905061129c6000830184611278565b92915050565b60006112ad826111a4565b9050919050565b6112bd816112a2565b81146112c857600080fd5b50565b6000813590506112da816112b4565b92915050565b6000602082840312156112f6576112f5611131565b5b6000611304848285016112cb565b91505092915050565b600080fd5b600061012082840312156113295761132861130d565b5b81905092915050565b6000819050919050565b61134581611332565b811461135057600080fd5b50565b6000813590506113628161133c565b92915050565b60008060006060848603121561138157611380611131565b5b600084013567ffffffffffffffff81111561139f5761139e611136565b5b6113ab86828701611312565b93505060206113bc86828701611353565b92505060406113cd86828701611223565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156114115780820151818401526020810190506113f6565b60008484015250505050565b6000601f19601f8301169050919050565b6000611439826113d7565b61144381856113e2565b93506114538185602086016113f3565b61145c8161141d565b840191505092915050565b60006040820190508181036000830152611481818561142e565b90506114906020830184611278565b9392505050565b600381106114a457600080fd5b50565b6000813590506114b681611497565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126114e1576114e06114bc565b5b8235905067ffffffffffffffff8111156114fe576114fd6114c1565b5b60208301915083600182028301111561151a576115196114c6565b5b9250929050565b60008060008060006080868803121561153d5761153c611131565b5b600061154b888289016114a7565b955050602086013567ffffffffffffffff81111561156c5761156b611136565b5b611578888289016114cb565b9450945050604061158b88828901611223565b925050606061159c88828901611223565b9150509295509295909350565b6115b2816112a2565b82525050565b60006020820190506115cd60008301846115a9565b92915050565b6000819050919050565b60006115f86115f36115ee846111a4565b6115d3565b6111a4565b9050919050565b600061160a826115dd565b9050919050565b600061161c826115ff565b9050919050565b61162c81611611565b82525050565b60006020820190506116476000830184611623565b92915050565b60006020828403121561166357611662611131565b5b6000611671848285016111ed565b91505092915050565b6000611685826115ff565b9050919050565b6116958161167a565b82525050565b60006020820190506116b0600083018461168c565b92915050565b6116bf8161113b565b82525050565b60006020820190506116da60008301846116b6565b92915050565b6116e9816111c4565b82525050565b600060408201905061170460008301856116e0565b6117116020830184611278565b9392505050565b6000815190506117278161120c565b92915050565b60006020828403121561174357611742611131565b5b600061175184828501611718565b91505092915050565b600060208201905061176f60008301846116e0565b92915050565b600060408201905061178a60008301856115a9565b6117976020830184611278565b9392505050565b600082825260208201905092915050565b7f53656e646572206e6f7420456e747279506f696e740000000000000000000000600082015250565b60006117e560158361179e565b91506117f0826117af565b602082019050919050565b60006020820190508181036000830152611814816117d8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061185582611202565b915061186083611202565b925082820261186e81611202565b915082820484148315176118855761188461181b565b5b5092915050565b60006040820190506118a160008301856115a9565b6118ae60208301846115a9565b9392505050565b60006040820190506118ca6000830185611278565b6118d76020830184611278565b9392505050565b60006060820190506118f360008301866115a9565b61190060208301856115a9565b61190d6040830184611278565b94935050505056fea2646970667358221220c6fea247a2ecd6804be4709354213589d21982658aa02a30382e1602d78e2e1a64736f6c634300081c0033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1F8F CODESIZE SUB DUP1 PUSH2 0x1F8F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x3FE JUMP JUMPDEST DUP3 CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5 DUP2 PUSH2 0x13E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xC5 DUP2 PUSH2 0x175 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP POP POP POP PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x172 DUP2 PUSH2 0x251 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH32 0x989CCC5800000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x509 JUMP JUMPDEST PUSH2 0x24E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP1 PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x345 DUP3 PUSH2 0x31A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x357 DUP3 PUSH2 0x33A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x367 DUP2 PUSH2 0x34C JUMP JUMPDEST DUP2 EQ PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x384 DUP2 PUSH2 0x35E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x395 DUP3 PUSH2 0x33A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A5 DUP2 PUSH2 0x38A JUMP JUMPDEST DUP2 EQ PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3C2 DUP2 PUSH2 0x39C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DB DUP2 PUSH2 0x3C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F8 DUP2 PUSH2 0x3D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x417 JUMPI PUSH2 0x416 PUSH2 0x315 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x425 DUP7 DUP3 DUP8 ADD PUSH2 0x375 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x436 DUP7 DUP3 DUP8 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x447 DUP7 DUP3 DUP8 ADD PUSH2 0x3E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x45A DUP2 PUSH2 0x33A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x475 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x451 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B0 DUP2 PUSH2 0x47B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E6 DUP2 PUSH2 0x4D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x503 DUP2 PUSH2 0x4DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0x315 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x52D DUP5 DUP3 DUP6 ADD PUSH2 0x4F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x49456E747279506F696E7420696E74657266616365206D69736D617463680000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH1 0x1E DUP4 PUSH2 0x536 JUMP JUMPDEST SWAP2 POP PUSH2 0x588 DUP3 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5AC DUP2 PUSH2 0x570 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x194B PUSH2 0x644 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x4B8 ADD MSTORE DUP2 DUP2 PUSH2 0xC33 ADD MSTORE PUSH2 0xE77 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x4E6 ADD MSTORE DUP2 DUP2 PUSH2 0x587 ADD MSTORE DUP2 DUP2 PUSH2 0xA74 ADD MSTORE DUP2 DUP2 PUSH2 0xC79 ADD MSTORE DUP2 DUP2 PUSH2 0xD3A ADD MSTORE PUSH2 0xEAB ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x390 ADD MSTORE DUP2 DUP2 PUSH2 0x427 ADD MSTORE DUP2 DUP2 PUSH2 0x72A ADD MSTORE DUP2 DUP2 PUSH2 0x756 ADD MSTORE DUP2 DUP2 PUSH2 0x7E0 ADD MSTORE DUP2 DUP2 PUSH2 0x870 ADD MSTORE DUP2 DUP2 PUSH2 0x90F ADD MSTORE PUSH2 0xB9E ADD MSTORE PUSH2 0x194B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x102 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC399EC88 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x35B JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xBB9FE6BF EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x2A9 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x52B7512C GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x52B7512C EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x7C627B21 EQ PUSH2 0x213 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x205C2878 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x49DF728C EQ PUSH2 0x17E JUMPI PUSH2 0x109 JUMP JUMPDEST CALLDATASIZE PUSH2 0x109 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP3 SWAP2 SWAP1 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x640 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x654 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x728 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A7 PUSH2 0x74C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x86C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x305 PUSH2 0x90D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x99B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH2 0x9C5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x370 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38E PUSH2 0xA96 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x396CB60 CALLVALUE DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x415 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x425 PUSH2 0xA96 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x480 SWAP3 SWAP2 SWAP1 PUSH2 0x16EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x4E2 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x55A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x172D JUMP JUMPDEST SWAP1 POP PUSH2 0x5CB DUP3 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B DUP3 PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x629 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x634 DUP6 DUP6 DUP6 PUSH2 0xC2C JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x648 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0x652 PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65E PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x67F PUSH2 0x99B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6D7 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E0 DUP2 PUSH2 0xE27 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6EB PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x6F8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xE60 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x754 PUSH2 0xA96 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBB9FE6BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7DE PUSH2 0xA96 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC23A5CEA DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x851 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x865 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C7 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x172D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x994 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9CD PUSH2 0xA96 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA2D PUSH2 0x6FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xA9E PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xABC PUSH2 0x6FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB1B JUMPI PUSH2 0xADF PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xB97 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB50 SWAP3 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF49 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC21 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH32 0x0 DUP5 PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC74 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST SWAP1 POP DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP4 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD2 SWAP3 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x172D JUMP JUMPDEST LT ISZERO PUSH2 0xD37 JUMPI PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP4 POP SWAP4 POP POP POP PUSH2 0xE1F JUMP JUMPDEST DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD91 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD2 SWAP2 SWAP1 PUSH2 0x172D JUMP JUMPDEST LT ISZERO PUSH2 0xDF6 JUMPI PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP4 POP SWAP4 POP POP POP PUSH2 0xE1F JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE07 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x0 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0xE55 DUP2 PUSH2 0xFEB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP2 ADD SWAP1 PUSH2 0xE71 SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 DUP5 PUSH2 0xEA1 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0xEF0 DUP3 ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10AF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFD0B669A1DD6CD4E81D5FA668229DE53F1912281EFD7C8374DFC2208164962F DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0xF38 SWAP3 SWAP2 SWAP1 PUSH2 0x18B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0xF6C JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0xF87 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xFE5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDC SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x112B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF49 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1154 DUP2 PUSH2 0x113B JUMP JUMPDEST DUP2 EQ PUSH2 0x115F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1171 DUP2 PUSH2 0x114B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x118D JUMPI PUSH2 0x118C PUSH2 0x1131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x119B DUP5 DUP3 DUP6 ADD PUSH2 0x1162 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CF DUP3 PUSH2 0x11A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11DF DUP2 PUSH2 0x11C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x11EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11FC DUP2 PUSH2 0x11D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1215 DUP2 PUSH2 0x1202 JUMP JUMPDEST DUP2 EQ PUSH2 0x1220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1232 DUP2 PUSH2 0x120C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x124F JUMPI PUSH2 0x124E PUSH2 0x1131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x125D DUP6 DUP3 DUP7 ADD PUSH2 0x11ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x126E DUP6 DUP3 DUP7 ADD PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1281 DUP2 PUSH2 0x1202 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x129C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1278 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AD DUP3 PUSH2 0x11A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BD DUP2 PUSH2 0x12A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x12C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12DA DUP2 PUSH2 0x12B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F6 JUMPI PUSH2 0x12F5 PUSH2 0x1131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1304 DUP5 DUP3 DUP6 ADD PUSH2 0x12CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1329 JUMPI PUSH2 0x1328 PUSH2 0x130D JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1345 DUP2 PUSH2 0x1332 JUMP JUMPDEST DUP2 EQ PUSH2 0x1350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1362 DUP2 PUSH2 0x133C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1381 JUMPI PUSH2 0x1380 PUSH2 0x1131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x139F JUMPI PUSH2 0x139E PUSH2 0x1136 JUMP JUMPDEST JUMPDEST PUSH2 0x13AB DUP7 DUP3 DUP8 ADD PUSH2 0x1312 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13BC DUP7 DUP3 DUP8 ADD PUSH2 0x1353 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13CD DUP7 DUP3 DUP8 ADD PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1411 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13F6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1439 DUP3 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x1443 DUP2 DUP6 PUSH2 0x13E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1453 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x145C DUP2 PUSH2 0x141D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1481 DUP2 DUP6 PUSH2 0x142E JUMP JUMPDEST SWAP1 POP PUSH2 0x1490 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1278 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x14A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14B6 DUP2 PUSH2 0x1497 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14E1 JUMPI PUSH2 0x14E0 PUSH2 0x14BC JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14FE JUMPI PUSH2 0x14FD PUSH2 0x14C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x151A JUMPI PUSH2 0x1519 PUSH2 0x14C6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x153D JUMPI PUSH2 0x153C PUSH2 0x1131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x154B DUP9 DUP3 DUP10 ADD PUSH2 0x14A7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x156C JUMPI PUSH2 0x156B PUSH2 0x1136 JUMP JUMPDEST JUMPDEST PUSH2 0x1578 DUP9 DUP3 DUP10 ADD PUSH2 0x14CB JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 PUSH2 0x158B DUP9 DUP3 DUP10 ADD PUSH2 0x1223 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x159C DUP9 DUP3 DUP10 ADD PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x15B2 DUP2 PUSH2 0x12A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15CD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F8 PUSH2 0x15F3 PUSH2 0x15EE DUP5 PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x11A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160A DUP3 PUSH2 0x15DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161C DUP3 PUSH2 0x15FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162C DUP2 PUSH2 0x1611 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1647 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1623 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1663 JUMPI PUSH2 0x1662 PUSH2 0x1131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1671 DUP5 DUP3 DUP6 ADD PUSH2 0x11ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1685 DUP3 PUSH2 0x15FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1695 DUP2 PUSH2 0x167A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x168C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16BF DUP2 PUSH2 0x113B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16E9 DUP2 PUSH2 0x11C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1704 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16E0 JUMP JUMPDEST PUSH2 0x1711 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1278 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1727 DUP2 PUSH2 0x120C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1743 JUMPI PUSH2 0x1742 PUSH2 0x1131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1751 DUP5 DUP3 DUP6 ADD PUSH2 0x1718 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x176F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x178A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15A9 JUMP JUMPDEST PUSH2 0x1797 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1278 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53656E646572206E6F7420456E747279506F696E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E5 PUSH1 0x15 DUP4 PUSH2 0x179E JUMP JUMPDEST SWAP2 POP PUSH2 0x17F0 DUP3 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1814 DUP2 PUSH2 0x17D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1855 DUP3 PUSH2 0x1202 JUMP JUMPDEST SWAP2 POP PUSH2 0x1860 DUP4 PUSH2 0x1202 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x186E DUP2 PUSH2 0x1202 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1885 JUMPI PUSH2 0x1884 PUSH2 0x181B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18A1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15A9 JUMP JUMPDEST PUSH2 0x18AE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18CA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x18D7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1278 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18F3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x15A9 JUMP JUMPDEST PUSH2 0x1900 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15A9 JUMP JUMPDEST PUSH2 0x190D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1278 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 INVALID LOG2 SELFBALANCE LOG2 0xEC 0xD6 DUP1 0x4B 0xE4 PUSH17 0x9354213589D21982658AA02A30382E1602 0xD7 DUP15 0x2E BYTE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"272:2138:19:-:0;;;643:232;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;758:11;956:10:0;1297:1:10;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;978:41:0::1;1007:11;978:28;;;:41;;:::i;:::-;1042:11;1029:24;;;;;;;;::::0;::::1;911:149:::0;790:6:19::1;782:14;;;;;;;;::::0;::::1;814:5;807:12;;;;::::0;::::1;643:232:::0;;;272:2138;;2011:153:11;2100:13;;2093:20;;;;;;;;;;;2123:34;2148:8;2123:24;;;:34;;:::i;:::-;2011:153;:::o;1180:218:0:-;1294:11;1278:47;;;1326:29;1278:78;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1270:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;1180:218;:::o;2912:187:10:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:20:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:116::-;625:7;654:24;672:5;654:24;:::i;:::-;643:35;;568:116;;;:::o;690:162::-;783:44;821:5;783:44;:::i;:::-;776:5;773:55;763:83;;842:1;839;832:12;763:83;690:162;:::o;858:183::-;935:5;966:6;960:13;951:22;;982:53;1029:5;982:53;:::i;:::-;858:183;;;;:::o;1047:111::-;1099:7;1128:24;1146:5;1128:24;:::i;:::-;1117:35;;1047:111;;;:::o;1164:152::-;1252:39;1285:5;1252:39;:::i;:::-;1245:5;1242:50;1232:78;;1306:1;1303;1296:12;1232:78;1164:152;:::o;1322:173::-;1394:5;1425:6;1419:13;1410:22;;1441:48;1483:5;1441:48;:::i;:::-;1322:173;;;;:::o;1501:77::-;1538:7;1567:5;1556:16;;1501:77;;;:::o;1584:122::-;1657:24;1675:5;1657:24;:::i;:::-;1650:5;1647:35;1637:63;;1696:1;1693;1686:12;1637:63;1584:122;:::o;1712:143::-;1769:5;1800:6;1794:13;1785:22;;1816:33;1843:5;1816:33;:::i;:::-;1712:143;;;;:::o;1861:733::-;1984:6;1992;2000;2049:2;2037:9;2028:7;2024:23;2020:32;2017:119;;;2055:79;;:::i;:::-;2017:119;2175:1;2200:84;2276:7;2267:6;2256:9;2252:22;2200:84;:::i;:::-;2190:94;;2146:148;2333:2;2359:79;2430:7;2421:6;2410:9;2406:22;2359:79;:::i;:::-;2349:89;;2304:144;2487:2;2513:64;2569:7;2560:6;2549:9;2545:22;2513:64;:::i;:::-;2503:74;;2458:129;1861:733;;;;;:::o;2600:118::-;2687:24;2705:5;2687:24;:::i;:::-;2682:3;2675:37;2600:118;;:::o;2724:222::-;2817:4;2855:2;2844:9;2840:18;2832:26;;2868:71;2936:1;2925:9;2921:17;2912:6;2868:71;:::i;:::-;2724:222;;;;:::o;2952:149::-;2988:7;3028:66;3021:5;3017:78;3006:89;;2952:149;;;:::o;3107:115::-;3192:23;3209:5;3192:23;:::i;:::-;3187:3;3180:36;3107:115;;:::o;3228:218::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:69;3436:1;3425:9;3421:17;3412:6;3370:69;:::i;:::-;3228:218;;;;:::o;3452:90::-;3486:7;3529:5;3522:13;3515:21;3504:32;;3452:90;;;:::o;3548:116::-;3618:21;3633:5;3618:21;:::i;:::-;3611:5;3608:32;3598:60;;3654:1;3651;3644:12;3598:60;3548:116;:::o;3670:137::-;3724:5;3755:6;3749:13;3740:22;;3771:30;3795:5;3771:30;:::i;:::-;3670:137;;;;:::o;3813:345::-;3880:6;3929:2;3917:9;3908:7;3904:23;3900:32;3897:119;;;3935:79;;:::i;:::-;3897:119;4055:1;4080:61;4133:7;4124:6;4113:9;4109:22;4080:61;:::i;:::-;4070:71;;4026:125;3813:345;;;;:::o;4164:169::-;4248:11;4282:6;4277:3;4270:19;4322:4;4317:3;4313:14;4298:29;;4164:169;;;;:::o;4339:180::-;4479:32;4475:1;4467:6;4463:14;4456:56;4339:180;:::o;4525:366::-;4667:3;4688:67;4752:2;4747:3;4688:67;:::i;:::-;4681:74;;4764:93;4853:3;4764:93;:::i;:::-;4882:2;4877:3;4873:12;4866:19;;4525:366;;;:::o;4897:419::-;5063:4;5101:2;5090:9;5086:18;5078:26;;5150:9;5144:4;5140:20;5136:1;5125:9;5121:17;5114:47;5178:131;5304:4;5178:131;:::i;:::-;5170:139;;4897:419;;;:::o;272:2138:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_2319":{"entryPoint":null,"id":2319,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_2039":{"entryPoint":3913,"id":2039,"parameterSlots":2,"returnSlots":0},"@_checkOwner_1300":{"entryPoint":2710,"id":1300,"parameterSlots":0,"returnSlots":0},"@_msgSender_2093":{"entryPoint":3672,"id":2093,"parameterSlots":0,"returnSlots":1},"@_postOp_2285":{"entryPoint":3680,"id":2285,"parameterSlots":5,"returnSlots":0},"@_requireFromEntryPoint_269":{"entryPoint":2972,"id":269,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_1362":{"entryPoint":4075,"id":1362,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_1424":{"entryPoint":3623,"id":1424,"parameterSlots":1,"returnSlots":0},"@_validatePaymasterUserOp_2238":{"entryPoint":3116,"id":2238,"parameterSlots":3,"returnSlots":2},"@acceptOwnership_1448":{"entryPoint":1620,"id":1448,"parameterSlots":0,"returnSlots":0},"@addStake_211":{"entryPoint":902,"id":211,"parameterSlots":1,"returnSlots":0},"@deposit_175":{"entryPoint":2317,"id":175,"parameterSlots":0,"returnSlots":0},"@entryPoint_14":{"entryPoint":1832,"id":14,"parameterSlots":0,"returnSlots":0},"@getDeposit_226":{"entryPoint":2156,"id":226,"parameterSlots":0,"returnSlots":1},"@owner_1283":{"entryPoint":1791,"id":1283,"parameterSlots":0,"returnSlots":1},"@pendingOwner_1387":{"entryPoint":2459,"id":1387,"parameterSlots":0,"returnSlots":1},"@postOp_134":{"entryPoint":1763,"id":134,"parameterSlots":5,"returnSlots":0},"@rate_2139":{"entryPoint":1206,"id":2139,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_1314":{"entryPoint":1600,"id":1314,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1689":{"entryPoint":4271,"id":1689,"parameterSlots":4,"returnSlots":0},"@safeTransfer_1662":{"entryPoint":2845,"id":1662,"parameterSlots":3,"returnSlots":0},"@token_2137":{"entryPoint":2674,"id":2137,"parameterSlots":0,"returnSlots":0},"@transferOwnership_1407":{"entryPoint":2501,"id":1407,"parameterSlots":1,"returnSlots":0},"@unlockStake_238":{"entryPoint":1868,"id":238,"parameterSlots":0,"returnSlots":0},"@validatePaymasterUserOp_94":{"entryPoint":1565,"id":94,"parameterSlots":3,"returnSlots":2},"@withdrawStake_253":{"entryPoint":2006,"id":253,"parameterSlots":1,"returnSlots":0},"@withdrawTo_193":{"entryPoint":1053,"id":193,"parameterSlots":2,"returnSlots":0},"@withdrawTokens_2315":{"entryPoint":1242,"id":2315,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":4811,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":4589,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":4947,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":5323,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_enum$_PostOpMode_$1041":{"entryPoint":5287,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_PackedUserOperation_$1215_calldata_ptr":{"entryPoint":4882,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4643,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":5912,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":4450,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4832,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":5709,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":4664,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_enum$_PostOpMode_$1041t_bytes_calldata_ptrt_uint256t_uint256":{"entryPoint":5409,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_struct$_PackedUserOperation_$1215_calldata_ptrt_bytes32t_uint256":{"entryPoint":4968,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5933,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32":{"entryPoint":4471,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_payable_to_t_address_payable_fromStack":{"entryPoint":5856,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5545,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":5166,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IERC20_$1617_to_t_address_fromStack":{"entryPoint":5772,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IEntryPoint_$1014_to_t_address_fromStack":{"entryPoint":5667,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack":{"entryPoint":6104,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4728,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":5814,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5560,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":5978,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed":{"entryPoint":5871,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":6284,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":6366,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6005,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":5223,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$1617__to_t_address__fromStack_reversed":{"entryPoint":5787,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$1014__to_t_address__fromStack_reversed":{"entryPoint":5682,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6139,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4743,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6325,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":5829,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":5079,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":5090,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6046,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6218,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4770,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":4548,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4914,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4516,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4610,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":4411,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$1617_to_t_address":{"entryPoint":5754,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IEntryPoint_$1014_to_t_address":{"entryPoint":5649,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":5631,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":5597,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":5107,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":5587,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6171,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5313,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5308,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":4877,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5318,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4406,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4401,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5149,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9":{"entryPoint":6063,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4788,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":4566,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":4924,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_PostOpMode_$1041":{"entryPoint":5271,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4620,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":4427,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:15857:20","nodeType":"YulBlock","src":"0:15857:20","statements":[{"body":{"nativeSrc":"47:35:20","nodeType":"YulBlock","src":"47:35:20","statements":[{"nativeSrc":"57:19:20","nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:20","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:20","nodeType":"YulIdentifier","src":"67:5:20"},"nativeSrc":"67:9:20","nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:20","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:20","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nativeSrc":"177:28:20","nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:20","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:20","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:20","nodeType":"YulIdentifier","src":"187:6:20"},"nativeSrc":"187:12:20","nodeType":"YulFunctionCall","src":"187:12:20"},"nativeSrc":"187:12:20","nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:20","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nativeSrc":"300:28:20","nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:20","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:20","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:20","nodeType":"YulIdentifier","src":"310:6:20"},"nativeSrc":"310:12:20","nodeType":"YulFunctionCall","src":"310:12:20"},"nativeSrc":"310:12:20","nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:20","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nativeSrc":"378:49:20","nodeType":"YulBlock","src":"378:49:20","statements":[{"nativeSrc":"388:33:20","nodeType":"YulAssignment","src":"388:33:20","value":{"arguments":[{"name":"value","nativeSrc":"403:5:20","nodeType":"YulIdentifier","src":"403:5:20"},{"kind":"number","nativeSrc":"410:10:20","nodeType":"YulLiteral","src":"410:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"399:3:20","nodeType":"YulIdentifier","src":"399:3:20"},"nativeSrc":"399:22:20","nodeType":"YulFunctionCall","src":"399:22:20"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:20","nodeType":"YulIdentifier","src":"388:7:20"}]}]},"name":"cleanup_t_uint32","nativeSrc":"334:93:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:20","nodeType":"YulTypedName","src":"360:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:20","nodeType":"YulTypedName","src":"370:7:20","type":""}],"src":"334:93:20"},{"body":{"nativeSrc":"475:78:20","nodeType":"YulBlock","src":"475:78:20","statements":[{"body":{"nativeSrc":"531:16:20","nodeType":"YulBlock","src":"531:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"540:1:20","nodeType":"YulLiteral","src":"540:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"543:1:20","nodeType":"YulLiteral","src":"543:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"533:6:20","nodeType":"YulIdentifier","src":"533:6:20"},"nativeSrc":"533:12:20","nodeType":"YulFunctionCall","src":"533:12:20"},"nativeSrc":"533:12:20","nodeType":"YulExpressionStatement","src":"533:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"498:5:20","nodeType":"YulIdentifier","src":"498:5:20"},{"arguments":[{"name":"value","nativeSrc":"522:5:20","nodeType":"YulIdentifier","src":"522:5:20"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"505:16:20","nodeType":"YulIdentifier","src":"505:16:20"},"nativeSrc":"505:23:20","nodeType":"YulFunctionCall","src":"505:23:20"}],"functionName":{"name":"eq","nativeSrc":"495:2:20","nodeType":"YulIdentifier","src":"495:2:20"},"nativeSrc":"495:34:20","nodeType":"YulFunctionCall","src":"495:34:20"}],"functionName":{"name":"iszero","nativeSrc":"488:6:20","nodeType":"YulIdentifier","src":"488:6:20"},"nativeSrc":"488:42:20","nodeType":"YulFunctionCall","src":"488:42:20"},"nativeSrc":"485:62:20","nodeType":"YulIf","src":"485:62:20"}]},"name":"validator_revert_t_uint32","nativeSrc":"433:120:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"468:5:20","nodeType":"YulTypedName","src":"468:5:20","type":""}],"src":"433:120:20"},{"body":{"nativeSrc":"610:86:20","nodeType":"YulBlock","src":"610:86:20","statements":[{"nativeSrc":"620:29:20","nodeType":"YulAssignment","src":"620:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"642:6:20","nodeType":"YulIdentifier","src":"642:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"629:12:20","nodeType":"YulIdentifier","src":"629:12:20"},"nativeSrc":"629:20:20","nodeType":"YulFunctionCall","src":"629:20:20"},"variableNames":[{"name":"value","nativeSrc":"620:5:20","nodeType":"YulIdentifier","src":"620:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"684:5:20","nodeType":"YulIdentifier","src":"684:5:20"}],"functionName":{"name":"validator_revert_t_uint32","nativeSrc":"658:25:20","nodeType":"YulIdentifier","src":"658:25:20"},"nativeSrc":"658:32:20","nodeType":"YulFunctionCall","src":"658:32:20"},"nativeSrc":"658:32:20","nodeType":"YulExpressionStatement","src":"658:32:20"}]},"name":"abi_decode_t_uint32","nativeSrc":"559:137:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"588:6:20","nodeType":"YulTypedName","src":"588:6:20","type":""},{"name":"end","nativeSrc":"596:3:20","nodeType":"YulTypedName","src":"596:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"604:5:20","nodeType":"YulTypedName","src":"604:5:20","type":""}],"src":"559:137:20"},{"body":{"nativeSrc":"767:262:20","nodeType":"YulBlock","src":"767:262:20","statements":[{"body":{"nativeSrc":"813:83:20","nodeType":"YulBlock","src":"813:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"815:77:20","nodeType":"YulIdentifier","src":"815:77:20"},"nativeSrc":"815:79:20","nodeType":"YulFunctionCall","src":"815:79:20"},"nativeSrc":"815:79:20","nodeType":"YulExpressionStatement","src":"815:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"788:7:20","nodeType":"YulIdentifier","src":"788:7:20"},{"name":"headStart","nativeSrc":"797:9:20","nodeType":"YulIdentifier","src":"797:9:20"}],"functionName":{"name":"sub","nativeSrc":"784:3:20","nodeType":"YulIdentifier","src":"784:3:20"},"nativeSrc":"784:23:20","nodeType":"YulFunctionCall","src":"784:23:20"},{"kind":"number","nativeSrc":"809:2:20","nodeType":"YulLiteral","src":"809:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"780:3:20","nodeType":"YulIdentifier","src":"780:3:20"},"nativeSrc":"780:32:20","nodeType":"YulFunctionCall","src":"780:32:20"},"nativeSrc":"777:119:20","nodeType":"YulIf","src":"777:119:20"},{"nativeSrc":"906:116:20","nodeType":"YulBlock","src":"906:116:20","statements":[{"nativeSrc":"921:15:20","nodeType":"YulVariableDeclaration","src":"921:15:20","value":{"kind":"number","nativeSrc":"935:1:20","nodeType":"YulLiteral","src":"935:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"925:6:20","nodeType":"YulTypedName","src":"925:6:20","type":""}]},{"nativeSrc":"950:62:20","nodeType":"YulAssignment","src":"950:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"984:9:20","nodeType":"YulIdentifier","src":"984:9:20"},{"name":"offset","nativeSrc":"995:6:20","nodeType":"YulIdentifier","src":"995:6:20"}],"functionName":{"name":"add","nativeSrc":"980:3:20","nodeType":"YulIdentifier","src":"980:3:20"},"nativeSrc":"980:22:20","nodeType":"YulFunctionCall","src":"980:22:20"},{"name":"dataEnd","nativeSrc":"1004:7:20","nodeType":"YulIdentifier","src":"1004:7:20"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"960:19:20","nodeType":"YulIdentifier","src":"960:19:20"},"nativeSrc":"960:52:20","nodeType":"YulFunctionCall","src":"960:52:20"},"variableNames":[{"name":"value0","nativeSrc":"950:6:20","nodeType":"YulIdentifier","src":"950:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint32","nativeSrc":"702:327:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"737:9:20","nodeType":"YulTypedName","src":"737:9:20","type":""},{"name":"dataEnd","nativeSrc":"748:7:20","nodeType":"YulTypedName","src":"748:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"760:6:20","nodeType":"YulTypedName","src":"760:6:20","type":""}],"src":"702:327:20"},{"body":{"nativeSrc":"1080:81:20","nodeType":"YulBlock","src":"1080:81:20","statements":[{"nativeSrc":"1090:65:20","nodeType":"YulAssignment","src":"1090:65:20","value":{"arguments":[{"name":"value","nativeSrc":"1105:5:20","nodeType":"YulIdentifier","src":"1105:5:20"},{"kind":"number","nativeSrc":"1112:42:20","nodeType":"YulLiteral","src":"1112:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1101:3:20","nodeType":"YulIdentifier","src":"1101:3:20"},"nativeSrc":"1101:54:20","nodeType":"YulFunctionCall","src":"1101:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"1090:7:20","nodeType":"YulIdentifier","src":"1090:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1035:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1062:5:20","nodeType":"YulTypedName","src":"1062:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1072:7:20","nodeType":"YulTypedName","src":"1072:7:20","type":""}],"src":"1035:126:20"},{"body":{"nativeSrc":"1220:51:20","nodeType":"YulBlock","src":"1220:51:20","statements":[{"nativeSrc":"1230:35:20","nodeType":"YulAssignment","src":"1230:35:20","value":{"arguments":[{"name":"value","nativeSrc":"1259:5:20","nodeType":"YulIdentifier","src":"1259:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1241:17:20","nodeType":"YulIdentifier","src":"1241:17:20"},"nativeSrc":"1241:24:20","nodeType":"YulFunctionCall","src":"1241:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"1230:7:20","nodeType":"YulIdentifier","src":"1230:7:20"}]}]},"name":"cleanup_t_address_payable","nativeSrc":"1167:104:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1202:5:20","nodeType":"YulTypedName","src":"1202:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1212:7:20","nodeType":"YulTypedName","src":"1212:7:20","type":""}],"src":"1167:104:20"},{"body":{"nativeSrc":"1328:87:20","nodeType":"YulBlock","src":"1328:87:20","statements":[{"body":{"nativeSrc":"1393:16:20","nodeType":"YulBlock","src":"1393:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1402:1:20","nodeType":"YulLiteral","src":"1402:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1405:1:20","nodeType":"YulLiteral","src":"1405:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1395:6:20","nodeType":"YulIdentifier","src":"1395:6:20"},"nativeSrc":"1395:12:20","nodeType":"YulFunctionCall","src":"1395:12:20"},"nativeSrc":"1395:12:20","nodeType":"YulExpressionStatement","src":"1395:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1351:5:20","nodeType":"YulIdentifier","src":"1351:5:20"},{"arguments":[{"name":"value","nativeSrc":"1384:5:20","nodeType":"YulIdentifier","src":"1384:5:20"}],"functionName":{"name":"cleanup_t_address_payable","nativeSrc":"1358:25:20","nodeType":"YulIdentifier","src":"1358:25:20"},"nativeSrc":"1358:32:20","nodeType":"YulFunctionCall","src":"1358:32:20"}],"functionName":{"name":"eq","nativeSrc":"1348:2:20","nodeType":"YulIdentifier","src":"1348:2:20"},"nativeSrc":"1348:43:20","nodeType":"YulFunctionCall","src":"1348:43:20"}],"functionName":{"name":"iszero","nativeSrc":"1341:6:20","nodeType":"YulIdentifier","src":"1341:6:20"},"nativeSrc":"1341:51:20","nodeType":"YulFunctionCall","src":"1341:51:20"},"nativeSrc":"1338:71:20","nodeType":"YulIf","src":"1338:71:20"}]},"name":"validator_revert_t_address_payable","nativeSrc":"1277:138:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1321:5:20","nodeType":"YulTypedName","src":"1321:5:20","type":""}],"src":"1277:138:20"},{"body":{"nativeSrc":"1481:95:20","nodeType":"YulBlock","src":"1481:95:20","statements":[{"nativeSrc":"1491:29:20","nodeType":"YulAssignment","src":"1491:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"1513:6:20","nodeType":"YulIdentifier","src":"1513:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"1500:12:20","nodeType":"YulIdentifier","src":"1500:12:20"},"nativeSrc":"1500:20:20","nodeType":"YulFunctionCall","src":"1500:20:20"},"variableNames":[{"name":"value","nativeSrc":"1491:5:20","nodeType":"YulIdentifier","src":"1491:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1564:5:20","nodeType":"YulIdentifier","src":"1564:5:20"}],"functionName":{"name":"validator_revert_t_address_payable","nativeSrc":"1529:34:20","nodeType":"YulIdentifier","src":"1529:34:20"},"nativeSrc":"1529:41:20","nodeType":"YulFunctionCall","src":"1529:41:20"},"nativeSrc":"1529:41:20","nodeType":"YulExpressionStatement","src":"1529:41:20"}]},"name":"abi_decode_t_address_payable","nativeSrc":"1421:155:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1459:6:20","nodeType":"YulTypedName","src":"1459:6:20","type":""},{"name":"end","nativeSrc":"1467:3:20","nodeType":"YulTypedName","src":"1467:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1475:5:20","nodeType":"YulTypedName","src":"1475:5:20","type":""}],"src":"1421:155:20"},{"body":{"nativeSrc":"1627:32:20","nodeType":"YulBlock","src":"1627:32:20","statements":[{"nativeSrc":"1637:16:20","nodeType":"YulAssignment","src":"1637:16:20","value":{"name":"value","nativeSrc":"1648:5:20","nodeType":"YulIdentifier","src":"1648:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"1637:7:20","nodeType":"YulIdentifier","src":"1637:7:20"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1582:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1609:5:20","nodeType":"YulTypedName","src":"1609:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1619:7:20","nodeType":"YulTypedName","src":"1619:7:20","type":""}],"src":"1582:77:20"},{"body":{"nativeSrc":"1708:79:20","nodeType":"YulBlock","src":"1708:79:20","statements":[{"body":{"nativeSrc":"1765:16:20","nodeType":"YulBlock","src":"1765:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1774:1:20","nodeType":"YulLiteral","src":"1774:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1777:1:20","nodeType":"YulLiteral","src":"1777:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1767:6:20","nodeType":"YulIdentifier","src":"1767:6:20"},"nativeSrc":"1767:12:20","nodeType":"YulFunctionCall","src":"1767:12:20"},"nativeSrc":"1767:12:20","nodeType":"YulExpressionStatement","src":"1767:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1731:5:20","nodeType":"YulIdentifier","src":"1731:5:20"},{"arguments":[{"name":"value","nativeSrc":"1756:5:20","nodeType":"YulIdentifier","src":"1756:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1738:17:20","nodeType":"YulIdentifier","src":"1738:17:20"},"nativeSrc":"1738:24:20","nodeType":"YulFunctionCall","src":"1738:24:20"}],"functionName":{"name":"eq","nativeSrc":"1728:2:20","nodeType":"YulIdentifier","src":"1728:2:20"},"nativeSrc":"1728:35:20","nodeType":"YulFunctionCall","src":"1728:35:20"}],"functionName":{"name":"iszero","nativeSrc":"1721:6:20","nodeType":"YulIdentifier","src":"1721:6:20"},"nativeSrc":"1721:43:20","nodeType":"YulFunctionCall","src":"1721:43:20"},"nativeSrc":"1718:63:20","nodeType":"YulIf","src":"1718:63:20"}]},"name":"validator_revert_t_uint256","nativeSrc":"1665:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1701:5:20","nodeType":"YulTypedName","src":"1701:5:20","type":""}],"src":"1665:122:20"},{"body":{"nativeSrc":"1845:87:20","nodeType":"YulBlock","src":"1845:87:20","statements":[{"nativeSrc":"1855:29:20","nodeType":"YulAssignment","src":"1855:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"1877:6:20","nodeType":"YulIdentifier","src":"1877:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"1864:12:20","nodeType":"YulIdentifier","src":"1864:12:20"},"nativeSrc":"1864:20:20","nodeType":"YulFunctionCall","src":"1864:20:20"},"variableNames":[{"name":"value","nativeSrc":"1855:5:20","nodeType":"YulIdentifier","src":"1855:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1920:5:20","nodeType":"YulIdentifier","src":"1920:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1893:26:20","nodeType":"YulIdentifier","src":"1893:26:20"},"nativeSrc":"1893:33:20","nodeType":"YulFunctionCall","src":"1893:33:20"},"nativeSrc":"1893:33:20","nodeType":"YulExpressionStatement","src":"1893:33:20"}]},"name":"abi_decode_t_uint256","nativeSrc":"1793:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1823:6:20","nodeType":"YulTypedName","src":"1823:6:20","type":""},{"name":"end","nativeSrc":"1831:3:20","nodeType":"YulTypedName","src":"1831:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1839:5:20","nodeType":"YulTypedName","src":"1839:5:20","type":""}],"src":"1793:139:20"},{"body":{"nativeSrc":"2029:399:20","nodeType":"YulBlock","src":"2029:399:20","statements":[{"body":{"nativeSrc":"2075:83:20","nodeType":"YulBlock","src":"2075:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2077:77:20","nodeType":"YulIdentifier","src":"2077:77:20"},"nativeSrc":"2077:79:20","nodeType":"YulFunctionCall","src":"2077:79:20"},"nativeSrc":"2077:79:20","nodeType":"YulExpressionStatement","src":"2077:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2050:7:20","nodeType":"YulIdentifier","src":"2050:7:20"},{"name":"headStart","nativeSrc":"2059:9:20","nodeType":"YulIdentifier","src":"2059:9:20"}],"functionName":{"name":"sub","nativeSrc":"2046:3:20","nodeType":"YulIdentifier","src":"2046:3:20"},"nativeSrc":"2046:23:20","nodeType":"YulFunctionCall","src":"2046:23:20"},{"kind":"number","nativeSrc":"2071:2:20","nodeType":"YulLiteral","src":"2071:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2042:3:20","nodeType":"YulIdentifier","src":"2042:3:20"},"nativeSrc":"2042:32:20","nodeType":"YulFunctionCall","src":"2042:32:20"},"nativeSrc":"2039:119:20","nodeType":"YulIf","src":"2039:119:20"},{"nativeSrc":"2168:125:20","nodeType":"YulBlock","src":"2168:125:20","statements":[{"nativeSrc":"2183:15:20","nodeType":"YulVariableDeclaration","src":"2183:15:20","value":{"kind":"number","nativeSrc":"2197:1:20","nodeType":"YulLiteral","src":"2197:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2187:6:20","nodeType":"YulTypedName","src":"2187:6:20","type":""}]},{"nativeSrc":"2212:71:20","nodeType":"YulAssignment","src":"2212:71:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2255:9:20","nodeType":"YulIdentifier","src":"2255:9:20"},{"name":"offset","nativeSrc":"2266:6:20","nodeType":"YulIdentifier","src":"2266:6:20"}],"functionName":{"name":"add","nativeSrc":"2251:3:20","nodeType":"YulIdentifier","src":"2251:3:20"},"nativeSrc":"2251:22:20","nodeType":"YulFunctionCall","src":"2251:22:20"},{"name":"dataEnd","nativeSrc":"2275:7:20","nodeType":"YulIdentifier","src":"2275:7:20"}],"functionName":{"name":"abi_decode_t_address_payable","nativeSrc":"2222:28:20","nodeType":"YulIdentifier","src":"2222:28:20"},"nativeSrc":"2222:61:20","nodeType":"YulFunctionCall","src":"2222:61:20"},"variableNames":[{"name":"value0","nativeSrc":"2212:6:20","nodeType":"YulIdentifier","src":"2212:6:20"}]}]},{"nativeSrc":"2303:118:20","nodeType":"YulBlock","src":"2303:118:20","statements":[{"nativeSrc":"2318:16:20","nodeType":"YulVariableDeclaration","src":"2318:16:20","value":{"kind":"number","nativeSrc":"2332:2:20","nodeType":"YulLiteral","src":"2332:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2322:6:20","nodeType":"YulTypedName","src":"2322:6:20","type":""}]},{"nativeSrc":"2348:63:20","nodeType":"YulAssignment","src":"2348:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2383:9:20","nodeType":"YulIdentifier","src":"2383:9:20"},{"name":"offset","nativeSrc":"2394:6:20","nodeType":"YulIdentifier","src":"2394:6:20"}],"functionName":{"name":"add","nativeSrc":"2379:3:20","nodeType":"YulIdentifier","src":"2379:3:20"},"nativeSrc":"2379:22:20","nodeType":"YulFunctionCall","src":"2379:22:20"},{"name":"dataEnd","nativeSrc":"2403:7:20","nodeType":"YulIdentifier","src":"2403:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2358:20:20","nodeType":"YulIdentifier","src":"2358:20:20"},"nativeSrc":"2358:53:20","nodeType":"YulFunctionCall","src":"2358:53:20"},"variableNames":[{"name":"value1","nativeSrc":"2348:6:20","nodeType":"YulIdentifier","src":"2348:6:20"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nativeSrc":"1938:490:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1991:9:20","nodeType":"YulTypedName","src":"1991:9:20","type":""},{"name":"dataEnd","nativeSrc":"2002:7:20","nodeType":"YulTypedName","src":"2002:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2014:6:20","nodeType":"YulTypedName","src":"2014:6:20","type":""},{"name":"value1","nativeSrc":"2022:6:20","nodeType":"YulTypedName","src":"2022:6:20","type":""}],"src":"1938:490:20"},{"body":{"nativeSrc":"2499:53:20","nodeType":"YulBlock","src":"2499:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2516:3:20","nodeType":"YulIdentifier","src":"2516:3:20"},{"arguments":[{"name":"value","nativeSrc":"2539:5:20","nodeType":"YulIdentifier","src":"2539:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2521:17:20","nodeType":"YulIdentifier","src":"2521:17:20"},"nativeSrc":"2521:24:20","nodeType":"YulFunctionCall","src":"2521:24:20"}],"functionName":{"name":"mstore","nativeSrc":"2509:6:20","nodeType":"YulIdentifier","src":"2509:6:20"},"nativeSrc":"2509:37:20","nodeType":"YulFunctionCall","src":"2509:37:20"},"nativeSrc":"2509:37:20","nodeType":"YulExpressionStatement","src":"2509:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2434:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2487:5:20","nodeType":"YulTypedName","src":"2487:5:20","type":""},{"name":"pos","nativeSrc":"2494:3:20","nodeType":"YulTypedName","src":"2494:3:20","type":""}],"src":"2434:118:20"},{"body":{"nativeSrc":"2656:124:20","nodeType":"YulBlock","src":"2656:124:20","statements":[{"nativeSrc":"2666:26:20","nodeType":"YulAssignment","src":"2666:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"2678:9:20","nodeType":"YulIdentifier","src":"2678:9:20"},{"kind":"number","nativeSrc":"2689:2:20","nodeType":"YulLiteral","src":"2689:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2674:3:20","nodeType":"YulIdentifier","src":"2674:3:20"},"nativeSrc":"2674:18:20","nodeType":"YulFunctionCall","src":"2674:18:20"},"variableNames":[{"name":"tail","nativeSrc":"2666:4:20","nodeType":"YulIdentifier","src":"2666:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2746:6:20","nodeType":"YulIdentifier","src":"2746:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"2759:9:20","nodeType":"YulIdentifier","src":"2759:9:20"},{"kind":"number","nativeSrc":"2770:1:20","nodeType":"YulLiteral","src":"2770:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2755:3:20","nodeType":"YulIdentifier","src":"2755:3:20"},"nativeSrc":"2755:17:20","nodeType":"YulFunctionCall","src":"2755:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2702:43:20","nodeType":"YulIdentifier","src":"2702:43:20"},"nativeSrc":"2702:71:20","nodeType":"YulFunctionCall","src":"2702:71:20"},"nativeSrc":"2702:71:20","nodeType":"YulExpressionStatement","src":"2702:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"2558:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2628:9:20","nodeType":"YulTypedName","src":"2628:9:20","type":""},{"name":"value0","nativeSrc":"2640:6:20","nodeType":"YulTypedName","src":"2640:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2651:4:20","nodeType":"YulTypedName","src":"2651:4:20","type":""}],"src":"2558:222:20"},{"body":{"nativeSrc":"2831:51:20","nodeType":"YulBlock","src":"2831:51:20","statements":[{"nativeSrc":"2841:35:20","nodeType":"YulAssignment","src":"2841:35:20","value":{"arguments":[{"name":"value","nativeSrc":"2870:5:20","nodeType":"YulIdentifier","src":"2870:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2852:17:20","nodeType":"YulIdentifier","src":"2852:17:20"},"nativeSrc":"2852:24:20","nodeType":"YulFunctionCall","src":"2852:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"2841:7:20","nodeType":"YulIdentifier","src":"2841:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"2786:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2813:5:20","nodeType":"YulTypedName","src":"2813:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2823:7:20","nodeType":"YulTypedName","src":"2823:7:20","type":""}],"src":"2786:96:20"},{"body":{"nativeSrc":"2931:79:20","nodeType":"YulBlock","src":"2931:79:20","statements":[{"body":{"nativeSrc":"2988:16:20","nodeType":"YulBlock","src":"2988:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2997:1:20","nodeType":"YulLiteral","src":"2997:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"3000:1:20","nodeType":"YulLiteral","src":"3000:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2990:6:20","nodeType":"YulIdentifier","src":"2990:6:20"},"nativeSrc":"2990:12:20","nodeType":"YulFunctionCall","src":"2990:12:20"},"nativeSrc":"2990:12:20","nodeType":"YulExpressionStatement","src":"2990:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2954:5:20","nodeType":"YulIdentifier","src":"2954:5:20"},{"arguments":[{"name":"value","nativeSrc":"2979:5:20","nodeType":"YulIdentifier","src":"2979:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2961:17:20","nodeType":"YulIdentifier","src":"2961:17:20"},"nativeSrc":"2961:24:20","nodeType":"YulFunctionCall","src":"2961:24:20"}],"functionName":{"name":"eq","nativeSrc":"2951:2:20","nodeType":"YulIdentifier","src":"2951:2:20"},"nativeSrc":"2951:35:20","nodeType":"YulFunctionCall","src":"2951:35:20"}],"functionName":{"name":"iszero","nativeSrc":"2944:6:20","nodeType":"YulIdentifier","src":"2944:6:20"},"nativeSrc":"2944:43:20","nodeType":"YulFunctionCall","src":"2944:43:20"},"nativeSrc":"2941:63:20","nodeType":"YulIf","src":"2941:63:20"}]},"name":"validator_revert_t_address","nativeSrc":"2888:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2924:5:20","nodeType":"YulTypedName","src":"2924:5:20","type":""}],"src":"2888:122:20"},{"body":{"nativeSrc":"3068:87:20","nodeType":"YulBlock","src":"3068:87:20","statements":[{"nativeSrc":"3078:29:20","nodeType":"YulAssignment","src":"3078:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"3100:6:20","nodeType":"YulIdentifier","src":"3100:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"3087:12:20","nodeType":"YulIdentifier","src":"3087:12:20"},"nativeSrc":"3087:20:20","nodeType":"YulFunctionCall","src":"3087:20:20"},"variableNames":[{"name":"value","nativeSrc":"3078:5:20","nodeType":"YulIdentifier","src":"3078:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3143:5:20","nodeType":"YulIdentifier","src":"3143:5:20"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3116:26:20","nodeType":"YulIdentifier","src":"3116:26:20"},"nativeSrc":"3116:33:20","nodeType":"YulFunctionCall","src":"3116:33:20"},"nativeSrc":"3116:33:20","nodeType":"YulExpressionStatement","src":"3116:33:20"}]},"name":"abi_decode_t_address","nativeSrc":"3016:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3046:6:20","nodeType":"YulTypedName","src":"3046:6:20","type":""},{"name":"end","nativeSrc":"3054:3:20","nodeType":"YulTypedName","src":"3054:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3062:5:20","nodeType":"YulTypedName","src":"3062:5:20","type":""}],"src":"3016:139:20"},{"body":{"nativeSrc":"3227:263:20","nodeType":"YulBlock","src":"3227:263:20","statements":[{"body":{"nativeSrc":"3273:83:20","nodeType":"YulBlock","src":"3273:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3275:77:20","nodeType":"YulIdentifier","src":"3275:77:20"},"nativeSrc":"3275:79:20","nodeType":"YulFunctionCall","src":"3275:79:20"},"nativeSrc":"3275:79:20","nodeType":"YulExpressionStatement","src":"3275:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3248:7:20","nodeType":"YulIdentifier","src":"3248:7:20"},{"name":"headStart","nativeSrc":"3257:9:20","nodeType":"YulIdentifier","src":"3257:9:20"}],"functionName":{"name":"sub","nativeSrc":"3244:3:20","nodeType":"YulIdentifier","src":"3244:3:20"},"nativeSrc":"3244:23:20","nodeType":"YulFunctionCall","src":"3244:23:20"},{"kind":"number","nativeSrc":"3269:2:20","nodeType":"YulLiteral","src":"3269:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3240:3:20","nodeType":"YulIdentifier","src":"3240:3:20"},"nativeSrc":"3240:32:20","nodeType":"YulFunctionCall","src":"3240:32:20"},"nativeSrc":"3237:119:20","nodeType":"YulIf","src":"3237:119:20"},{"nativeSrc":"3366:117:20","nodeType":"YulBlock","src":"3366:117:20","statements":[{"nativeSrc":"3381:15:20","nodeType":"YulVariableDeclaration","src":"3381:15:20","value":{"kind":"number","nativeSrc":"3395:1:20","nodeType":"YulLiteral","src":"3395:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3385:6:20","nodeType":"YulTypedName","src":"3385:6:20","type":""}]},{"nativeSrc":"3410:63:20","nodeType":"YulAssignment","src":"3410:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3445:9:20","nodeType":"YulIdentifier","src":"3445:9:20"},{"name":"offset","nativeSrc":"3456:6:20","nodeType":"YulIdentifier","src":"3456:6:20"}],"functionName":{"name":"add","nativeSrc":"3441:3:20","nodeType":"YulIdentifier","src":"3441:3:20"},"nativeSrc":"3441:22:20","nodeType":"YulFunctionCall","src":"3441:22:20"},{"name":"dataEnd","nativeSrc":"3465:7:20","nodeType":"YulIdentifier","src":"3465:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3420:20:20","nodeType":"YulIdentifier","src":"3420:20:20"},"nativeSrc":"3420:53:20","nodeType":"YulFunctionCall","src":"3420:53:20"},"variableNames":[{"name":"value0","nativeSrc":"3410:6:20","nodeType":"YulIdentifier","src":"3410:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3161:329:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3197:9:20","nodeType":"YulTypedName","src":"3197:9:20","type":""},{"name":"dataEnd","nativeSrc":"3208:7:20","nodeType":"YulTypedName","src":"3208:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3220:6:20","nodeType":"YulTypedName","src":"3220:6:20","type":""}],"src":"3161:329:20"},{"body":{"nativeSrc":"3585:28:20","nodeType":"YulBlock","src":"3585:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3602:1:20","nodeType":"YulLiteral","src":"3602:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"3605:1:20","nodeType":"YulLiteral","src":"3605:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3595:6:20","nodeType":"YulIdentifier","src":"3595:6:20"},"nativeSrc":"3595:12:20","nodeType":"YulFunctionCall","src":"3595:12:20"},"nativeSrc":"3595:12:20","nodeType":"YulExpressionStatement","src":"3595:12:20"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nativeSrc":"3496:117:20","nodeType":"YulFunctionDefinition","src":"3496:117:20"},{"body":{"nativeSrc":"3744:153:20","nodeType":"YulBlock","src":"3744:153:20","statements":[{"body":{"nativeSrc":"3784:83:20","nodeType":"YulBlock","src":"3784:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nativeSrc":"3786:77:20","nodeType":"YulIdentifier","src":"3786:77:20"},"nativeSrc":"3786:79:20","nodeType":"YulFunctionCall","src":"3786:79:20"},"nativeSrc":"3786:79:20","nodeType":"YulExpressionStatement","src":"3786:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nativeSrc":"3765:3:20","nodeType":"YulIdentifier","src":"3765:3:20"},{"name":"offset","nativeSrc":"3770:6:20","nodeType":"YulIdentifier","src":"3770:6:20"}],"functionName":{"name":"sub","nativeSrc":"3761:3:20","nodeType":"YulIdentifier","src":"3761:3:20"},"nativeSrc":"3761:16:20","nodeType":"YulFunctionCall","src":"3761:16:20"},{"kind":"number","nativeSrc":"3779:3:20","nodeType":"YulLiteral","src":"3779:3:20","type":"","value":"288"}],"functionName":{"name":"slt","nativeSrc":"3757:3:20","nodeType":"YulIdentifier","src":"3757:3:20"},"nativeSrc":"3757:26:20","nodeType":"YulFunctionCall","src":"3757:26:20"},"nativeSrc":"3754:113:20","nodeType":"YulIf","src":"3754:113:20"},{"nativeSrc":"3876:15:20","nodeType":"YulAssignment","src":"3876:15:20","value":{"name":"offset","nativeSrc":"3885:6:20","nodeType":"YulIdentifier","src":"3885:6:20"},"variableNames":[{"name":"value","nativeSrc":"3876:5:20","nodeType":"YulIdentifier","src":"3876:5:20"}]}]},"name":"abi_decode_t_struct$_PackedUserOperation_$1215_calldata_ptr","nativeSrc":"3653:244:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3722:6:20","nodeType":"YulTypedName","src":"3722:6:20","type":""},{"name":"end","nativeSrc":"3730:3:20","nodeType":"YulTypedName","src":"3730:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3738:5:20","nodeType":"YulTypedName","src":"3738:5:20","type":""}],"src":"3653:244:20"},{"body":{"nativeSrc":"3948:32:20","nodeType":"YulBlock","src":"3948:32:20","statements":[{"nativeSrc":"3958:16:20","nodeType":"YulAssignment","src":"3958:16:20","value":{"name":"value","nativeSrc":"3969:5:20","nodeType":"YulIdentifier","src":"3969:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"3958:7:20","nodeType":"YulIdentifier","src":"3958:7:20"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"3903:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3930:5:20","nodeType":"YulTypedName","src":"3930:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3940:7:20","nodeType":"YulTypedName","src":"3940:7:20","type":""}],"src":"3903:77:20"},{"body":{"nativeSrc":"4029:79:20","nodeType":"YulBlock","src":"4029:79:20","statements":[{"body":{"nativeSrc":"4086:16:20","nodeType":"YulBlock","src":"4086:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4095:1:20","nodeType":"YulLiteral","src":"4095:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"4098:1:20","nodeType":"YulLiteral","src":"4098:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4088:6:20","nodeType":"YulIdentifier","src":"4088:6:20"},"nativeSrc":"4088:12:20","nodeType":"YulFunctionCall","src":"4088:12:20"},"nativeSrc":"4088:12:20","nodeType":"YulExpressionStatement","src":"4088:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4052:5:20","nodeType":"YulIdentifier","src":"4052:5:20"},{"arguments":[{"name":"value","nativeSrc":"4077:5:20","nodeType":"YulIdentifier","src":"4077:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"4059:17:20","nodeType":"YulIdentifier","src":"4059:17:20"},"nativeSrc":"4059:24:20","nodeType":"YulFunctionCall","src":"4059:24:20"}],"functionName":{"name":"eq","nativeSrc":"4049:2:20","nodeType":"YulIdentifier","src":"4049:2:20"},"nativeSrc":"4049:35:20","nodeType":"YulFunctionCall","src":"4049:35:20"}],"functionName":{"name":"iszero","nativeSrc":"4042:6:20","nodeType":"YulIdentifier","src":"4042:6:20"},"nativeSrc":"4042:43:20","nodeType":"YulFunctionCall","src":"4042:43:20"},"nativeSrc":"4039:63:20","nodeType":"YulIf","src":"4039:63:20"}]},"name":"validator_revert_t_bytes32","nativeSrc":"3986:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4022:5:20","nodeType":"YulTypedName","src":"4022:5:20","type":""}],"src":"3986:122:20"},{"body":{"nativeSrc":"4166:87:20","nodeType":"YulBlock","src":"4166:87:20","statements":[{"nativeSrc":"4176:29:20","nodeType":"YulAssignment","src":"4176:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"4198:6:20","nodeType":"YulIdentifier","src":"4198:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"4185:12:20","nodeType":"YulIdentifier","src":"4185:12:20"},"nativeSrc":"4185:20:20","nodeType":"YulFunctionCall","src":"4185:20:20"},"variableNames":[{"name":"value","nativeSrc":"4176:5:20","nodeType":"YulIdentifier","src":"4176:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4241:5:20","nodeType":"YulIdentifier","src":"4241:5:20"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"4214:26:20","nodeType":"YulIdentifier","src":"4214:26:20"},"nativeSrc":"4214:33:20","nodeType":"YulFunctionCall","src":"4214:33:20"},"nativeSrc":"4214:33:20","nodeType":"YulExpressionStatement","src":"4214:33:20"}]},"name":"abi_decode_t_bytes32","nativeSrc":"4114:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4144:6:20","nodeType":"YulTypedName","src":"4144:6:20","type":""},{"name":"end","nativeSrc":"4152:3:20","nodeType":"YulTypedName","src":"4152:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4160:5:20","nodeType":"YulTypedName","src":"4160:5:20","type":""}],"src":"4114:139:20"},{"body":{"nativeSrc":"4398:718:20","nodeType":"YulBlock","src":"4398:718:20","statements":[{"body":{"nativeSrc":"4444:83:20","nodeType":"YulBlock","src":"4444:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4446:77:20","nodeType":"YulIdentifier","src":"4446:77:20"},"nativeSrc":"4446:79:20","nodeType":"YulFunctionCall","src":"4446:79:20"},"nativeSrc":"4446:79:20","nodeType":"YulExpressionStatement","src":"4446:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4419:7:20","nodeType":"YulIdentifier","src":"4419:7:20"},{"name":"headStart","nativeSrc":"4428:9:20","nodeType":"YulIdentifier","src":"4428:9:20"}],"functionName":{"name":"sub","nativeSrc":"4415:3:20","nodeType":"YulIdentifier","src":"4415:3:20"},"nativeSrc":"4415:23:20","nodeType":"YulFunctionCall","src":"4415:23:20"},{"kind":"number","nativeSrc":"4440:2:20","nodeType":"YulLiteral","src":"4440:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"4411:3:20","nodeType":"YulIdentifier","src":"4411:3:20"},"nativeSrc":"4411:32:20","nodeType":"YulFunctionCall","src":"4411:32:20"},"nativeSrc":"4408:119:20","nodeType":"YulIf","src":"4408:119:20"},{"nativeSrc":"4537:316:20","nodeType":"YulBlock","src":"4537:316:20","statements":[{"nativeSrc":"4552:45:20","nodeType":"YulVariableDeclaration","src":"4552:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4583:9:20","nodeType":"YulIdentifier","src":"4583:9:20"},{"kind":"number","nativeSrc":"4594:1:20","nodeType":"YulLiteral","src":"4594:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4579:3:20","nodeType":"YulIdentifier","src":"4579:3:20"},"nativeSrc":"4579:17:20","nodeType":"YulFunctionCall","src":"4579:17:20"}],"functionName":{"name":"calldataload","nativeSrc":"4566:12:20","nodeType":"YulIdentifier","src":"4566:12:20"},"nativeSrc":"4566:31:20","nodeType":"YulFunctionCall","src":"4566:31:20"},"variables":[{"name":"offset","nativeSrc":"4556:6:20","nodeType":"YulTypedName","src":"4556:6:20","type":""}]},{"body":{"nativeSrc":"4644:83:20","nodeType":"YulBlock","src":"4644:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4646:77:20","nodeType":"YulIdentifier","src":"4646:77:20"},"nativeSrc":"4646:79:20","nodeType":"YulFunctionCall","src":"4646:79:20"},"nativeSrc":"4646:79:20","nodeType":"YulExpressionStatement","src":"4646:79:20"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4616:6:20","nodeType":"YulIdentifier","src":"4616:6:20"},{"kind":"number","nativeSrc":"4624:18:20","nodeType":"YulLiteral","src":"4624:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4613:2:20","nodeType":"YulIdentifier","src":"4613:2:20"},"nativeSrc":"4613:30:20","nodeType":"YulFunctionCall","src":"4613:30:20"},"nativeSrc":"4610:117:20","nodeType":"YulIf","src":"4610:117:20"},{"nativeSrc":"4741:102:20","nodeType":"YulAssignment","src":"4741:102:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4815:9:20","nodeType":"YulIdentifier","src":"4815:9:20"},{"name":"offset","nativeSrc":"4826:6:20","nodeType":"YulIdentifier","src":"4826:6:20"}],"functionName":{"name":"add","nativeSrc":"4811:3:20","nodeType":"YulIdentifier","src":"4811:3:20"},"nativeSrc":"4811:22:20","nodeType":"YulFunctionCall","src":"4811:22:20"},{"name":"dataEnd","nativeSrc":"4835:7:20","nodeType":"YulIdentifier","src":"4835:7:20"}],"functionName":{"name":"abi_decode_t_struct$_PackedUserOperation_$1215_calldata_ptr","nativeSrc":"4751:59:20","nodeType":"YulIdentifier","src":"4751:59:20"},"nativeSrc":"4751:92:20","nodeType":"YulFunctionCall","src":"4751:92:20"},"variableNames":[{"name":"value0","nativeSrc":"4741:6:20","nodeType":"YulIdentifier","src":"4741:6:20"}]}]},{"nativeSrc":"4863:118:20","nodeType":"YulBlock","src":"4863:118:20","statements":[{"nativeSrc":"4878:16:20","nodeType":"YulVariableDeclaration","src":"4878:16:20","value":{"kind":"number","nativeSrc":"4892:2:20","nodeType":"YulLiteral","src":"4892:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4882:6:20","nodeType":"YulTypedName","src":"4882:6:20","type":""}]},{"nativeSrc":"4908:63:20","nodeType":"YulAssignment","src":"4908:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4943:9:20","nodeType":"YulIdentifier","src":"4943:9:20"},{"name":"offset","nativeSrc":"4954:6:20","nodeType":"YulIdentifier","src":"4954:6:20"}],"functionName":{"name":"add","nativeSrc":"4939:3:20","nodeType":"YulIdentifier","src":"4939:3:20"},"nativeSrc":"4939:22:20","nodeType":"YulFunctionCall","src":"4939:22:20"},{"name":"dataEnd","nativeSrc":"4963:7:20","nodeType":"YulIdentifier","src":"4963:7:20"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"4918:20:20","nodeType":"YulIdentifier","src":"4918:20:20"},"nativeSrc":"4918:53:20","nodeType":"YulFunctionCall","src":"4918:53:20"},"variableNames":[{"name":"value1","nativeSrc":"4908:6:20","nodeType":"YulIdentifier","src":"4908:6:20"}]}]},{"nativeSrc":"4991:118:20","nodeType":"YulBlock","src":"4991:118:20","statements":[{"nativeSrc":"5006:16:20","nodeType":"YulVariableDeclaration","src":"5006:16:20","value":{"kind":"number","nativeSrc":"5020:2:20","nodeType":"YulLiteral","src":"5020:2:20","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5010:6:20","nodeType":"YulTypedName","src":"5010:6:20","type":""}]},{"nativeSrc":"5036:63:20","nodeType":"YulAssignment","src":"5036:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5071:9:20","nodeType":"YulIdentifier","src":"5071:9:20"},{"name":"offset","nativeSrc":"5082:6:20","nodeType":"YulIdentifier","src":"5082:6:20"}],"functionName":{"name":"add","nativeSrc":"5067:3:20","nodeType":"YulIdentifier","src":"5067:3:20"},"nativeSrc":"5067:22:20","nodeType":"YulFunctionCall","src":"5067:22:20"},{"name":"dataEnd","nativeSrc":"5091:7:20","nodeType":"YulIdentifier","src":"5091:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5046:20:20","nodeType":"YulIdentifier","src":"5046:20:20"},"nativeSrc":"5046:53:20","nodeType":"YulFunctionCall","src":"5046:53:20"},"variableNames":[{"name":"value2","nativeSrc":"5036:6:20","nodeType":"YulIdentifier","src":"5036:6:20"}]}]}]},"name":"abi_decode_tuple_t_struct$_PackedUserOperation_$1215_calldata_ptrt_bytes32t_uint256","nativeSrc":"4259:857:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4352:9:20","nodeType":"YulTypedName","src":"4352:9:20","type":""},{"name":"dataEnd","nativeSrc":"4363:7:20","nodeType":"YulTypedName","src":"4363:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4375:6:20","nodeType":"YulTypedName","src":"4375:6:20","type":""},{"name":"value1","nativeSrc":"4383:6:20","nodeType":"YulTypedName","src":"4383:6:20","type":""},{"name":"value2","nativeSrc":"4391:6:20","nodeType":"YulTypedName","src":"4391:6:20","type":""}],"src":"4259:857:20"},{"body":{"nativeSrc":"5180:40:20","nodeType":"YulBlock","src":"5180:40:20","statements":[{"nativeSrc":"5191:22:20","nodeType":"YulAssignment","src":"5191:22:20","value":{"arguments":[{"name":"value","nativeSrc":"5207:5:20","nodeType":"YulIdentifier","src":"5207:5:20"}],"functionName":{"name":"mload","nativeSrc":"5201:5:20","nodeType":"YulIdentifier","src":"5201:5:20"},"nativeSrc":"5201:12:20","nodeType":"YulFunctionCall","src":"5201:12:20"},"variableNames":[{"name":"length","nativeSrc":"5191:6:20","nodeType":"YulIdentifier","src":"5191:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"5122:98:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5163:5:20","nodeType":"YulTypedName","src":"5163:5:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5173:6:20","nodeType":"YulTypedName","src":"5173:6:20","type":""}],"src":"5122:98:20"},{"body":{"nativeSrc":"5321:73:20","nodeType":"YulBlock","src":"5321:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5338:3:20","nodeType":"YulIdentifier","src":"5338:3:20"},{"name":"length","nativeSrc":"5343:6:20","nodeType":"YulIdentifier","src":"5343:6:20"}],"functionName":{"name":"mstore","nativeSrc":"5331:6:20","nodeType":"YulIdentifier","src":"5331:6:20"},"nativeSrc":"5331:19:20","nodeType":"YulFunctionCall","src":"5331:19:20"},"nativeSrc":"5331:19:20","nodeType":"YulExpressionStatement","src":"5331:19:20"},{"nativeSrc":"5359:29:20","nodeType":"YulAssignment","src":"5359:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"5378:3:20","nodeType":"YulIdentifier","src":"5378:3:20"},{"kind":"number","nativeSrc":"5383:4:20","nodeType":"YulLiteral","src":"5383:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5374:3:20","nodeType":"YulIdentifier","src":"5374:3:20"},"nativeSrc":"5374:14:20","nodeType":"YulFunctionCall","src":"5374:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"5359:11:20","nodeType":"YulIdentifier","src":"5359:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"5226:168:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5293:3:20","nodeType":"YulTypedName","src":"5293:3:20","type":""},{"name":"length","nativeSrc":"5298:6:20","nodeType":"YulTypedName","src":"5298:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"5309:11:20","nodeType":"YulTypedName","src":"5309:11:20","type":""}],"src":"5226:168:20"},{"body":{"nativeSrc":"5462:186:20","nodeType":"YulBlock","src":"5462:186:20","statements":[{"nativeSrc":"5473:10:20","nodeType":"YulVariableDeclaration","src":"5473:10:20","value":{"kind":"number","nativeSrc":"5482:1:20","nodeType":"YulLiteral","src":"5482:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5477:1:20","nodeType":"YulTypedName","src":"5477:1:20","type":""}]},{"body":{"nativeSrc":"5542:63:20","nodeType":"YulBlock","src":"5542:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"5567:3:20","nodeType":"YulIdentifier","src":"5567:3:20"},{"name":"i","nativeSrc":"5572:1:20","nodeType":"YulIdentifier","src":"5572:1:20"}],"functionName":{"name":"add","nativeSrc":"5563:3:20","nodeType":"YulIdentifier","src":"5563:3:20"},"nativeSrc":"5563:11:20","nodeType":"YulFunctionCall","src":"5563:11:20"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5586:3:20","nodeType":"YulIdentifier","src":"5586:3:20"},{"name":"i","nativeSrc":"5591:1:20","nodeType":"YulIdentifier","src":"5591:1:20"}],"functionName":{"name":"add","nativeSrc":"5582:3:20","nodeType":"YulIdentifier","src":"5582:3:20"},"nativeSrc":"5582:11:20","nodeType":"YulFunctionCall","src":"5582:11:20"}],"functionName":{"name":"mload","nativeSrc":"5576:5:20","nodeType":"YulIdentifier","src":"5576:5:20"},"nativeSrc":"5576:18:20","nodeType":"YulFunctionCall","src":"5576:18:20"}],"functionName":{"name":"mstore","nativeSrc":"5556:6:20","nodeType":"YulIdentifier","src":"5556:6:20"},"nativeSrc":"5556:39:20","nodeType":"YulFunctionCall","src":"5556:39:20"},"nativeSrc":"5556:39:20","nodeType":"YulExpressionStatement","src":"5556:39:20"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5503:1:20","nodeType":"YulIdentifier","src":"5503:1:20"},{"name":"length","nativeSrc":"5506:6:20","nodeType":"YulIdentifier","src":"5506:6:20"}],"functionName":{"name":"lt","nativeSrc":"5500:2:20","nodeType":"YulIdentifier","src":"5500:2:20"},"nativeSrc":"5500:13:20","nodeType":"YulFunctionCall","src":"5500:13:20"},"nativeSrc":"5492:113:20","nodeType":"YulForLoop","post":{"nativeSrc":"5514:19:20","nodeType":"YulBlock","src":"5514:19:20","statements":[{"nativeSrc":"5516:15:20","nodeType":"YulAssignment","src":"5516:15:20","value":{"arguments":[{"name":"i","nativeSrc":"5525:1:20","nodeType":"YulIdentifier","src":"5525:1:20"},{"kind":"number","nativeSrc":"5528:2:20","nodeType":"YulLiteral","src":"5528:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5521:3:20","nodeType":"YulIdentifier","src":"5521:3:20"},"nativeSrc":"5521:10:20","nodeType":"YulFunctionCall","src":"5521:10:20"},"variableNames":[{"name":"i","nativeSrc":"5516:1:20","nodeType":"YulIdentifier","src":"5516:1:20"}]}]},"pre":{"nativeSrc":"5496:3:20","nodeType":"YulBlock","src":"5496:3:20","statements":[]},"src":"5492:113:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"5625:3:20","nodeType":"YulIdentifier","src":"5625:3:20"},{"name":"length","nativeSrc":"5630:6:20","nodeType":"YulIdentifier","src":"5630:6:20"}],"functionName":{"name":"add","nativeSrc":"5621:3:20","nodeType":"YulIdentifier","src":"5621:3:20"},"nativeSrc":"5621:16:20","nodeType":"YulFunctionCall","src":"5621:16:20"},{"kind":"number","nativeSrc":"5639:1:20","nodeType":"YulLiteral","src":"5639:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"5614:6:20","nodeType":"YulIdentifier","src":"5614:6:20"},"nativeSrc":"5614:27:20","nodeType":"YulFunctionCall","src":"5614:27:20"},"nativeSrc":"5614:27:20","nodeType":"YulExpressionStatement","src":"5614:27:20"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"5400:248:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"5444:3:20","nodeType":"YulTypedName","src":"5444:3:20","type":""},{"name":"dst","nativeSrc":"5449:3:20","nodeType":"YulTypedName","src":"5449:3:20","type":""},{"name":"length","nativeSrc":"5454:6:20","nodeType":"YulTypedName","src":"5454:6:20","type":""}],"src":"5400:248:20"},{"body":{"nativeSrc":"5702:54:20","nodeType":"YulBlock","src":"5702:54:20","statements":[{"nativeSrc":"5712:38:20","nodeType":"YulAssignment","src":"5712:38:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5730:5:20","nodeType":"YulIdentifier","src":"5730:5:20"},{"kind":"number","nativeSrc":"5737:2:20","nodeType":"YulLiteral","src":"5737:2:20","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"5726:3:20","nodeType":"YulIdentifier","src":"5726:3:20"},"nativeSrc":"5726:14:20","nodeType":"YulFunctionCall","src":"5726:14:20"},{"arguments":[{"kind":"number","nativeSrc":"5746:2:20","nodeType":"YulLiteral","src":"5746:2:20","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"5742:3:20","nodeType":"YulIdentifier","src":"5742:3:20"},"nativeSrc":"5742:7:20","nodeType":"YulFunctionCall","src":"5742:7:20"}],"functionName":{"name":"and","nativeSrc":"5722:3:20","nodeType":"YulIdentifier","src":"5722:3:20"},"nativeSrc":"5722:28:20","nodeType":"YulFunctionCall","src":"5722:28:20"},"variableNames":[{"name":"result","nativeSrc":"5712:6:20","nodeType":"YulIdentifier","src":"5712:6:20"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"5654:102:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5685:5:20","nodeType":"YulTypedName","src":"5685:5:20","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5695:6:20","nodeType":"YulTypedName","src":"5695:6:20","type":""}],"src":"5654:102:20"},{"body":{"nativeSrc":"5852:283:20","nodeType":"YulBlock","src":"5852:283:20","statements":[{"nativeSrc":"5862:52:20","nodeType":"YulVariableDeclaration","src":"5862:52:20","value":{"arguments":[{"name":"value","nativeSrc":"5908:5:20","nodeType":"YulIdentifier","src":"5908:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"5876:31:20","nodeType":"YulIdentifier","src":"5876:31:20"},"nativeSrc":"5876:38:20","nodeType":"YulFunctionCall","src":"5876:38:20"},"variables":[{"name":"length","nativeSrc":"5866:6:20","nodeType":"YulTypedName","src":"5866:6:20","type":""}]},{"nativeSrc":"5923:77:20","nodeType":"YulAssignment","src":"5923:77:20","value":{"arguments":[{"name":"pos","nativeSrc":"5988:3:20","nodeType":"YulIdentifier","src":"5988:3:20"},{"name":"length","nativeSrc":"5993:6:20","nodeType":"YulIdentifier","src":"5993:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"5930:57:20","nodeType":"YulIdentifier","src":"5930:57:20"},"nativeSrc":"5930:70:20","nodeType":"YulFunctionCall","src":"5930:70:20"},"variableNames":[{"name":"pos","nativeSrc":"5923:3:20","nodeType":"YulIdentifier","src":"5923:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6048:5:20","nodeType":"YulIdentifier","src":"6048:5:20"},{"kind":"number","nativeSrc":"6055:4:20","nodeType":"YulLiteral","src":"6055:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6044:3:20","nodeType":"YulIdentifier","src":"6044:3:20"},"nativeSrc":"6044:16:20","nodeType":"YulFunctionCall","src":"6044:16:20"},{"name":"pos","nativeSrc":"6062:3:20","nodeType":"YulIdentifier","src":"6062:3:20"},{"name":"length","nativeSrc":"6067:6:20","nodeType":"YulIdentifier","src":"6067:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"6009:34:20","nodeType":"YulIdentifier","src":"6009:34:20"},"nativeSrc":"6009:65:20","nodeType":"YulFunctionCall","src":"6009:65:20"},"nativeSrc":"6009:65:20","nodeType":"YulExpressionStatement","src":"6009:65:20"},{"nativeSrc":"6083:46:20","nodeType":"YulAssignment","src":"6083:46:20","value":{"arguments":[{"name":"pos","nativeSrc":"6094:3:20","nodeType":"YulIdentifier","src":"6094:3:20"},{"arguments":[{"name":"length","nativeSrc":"6121:6:20","nodeType":"YulIdentifier","src":"6121:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6099:21:20","nodeType":"YulIdentifier","src":"6099:21:20"},"nativeSrc":"6099:29:20","nodeType":"YulFunctionCall","src":"6099:29:20"}],"functionName":{"name":"add","nativeSrc":"6090:3:20","nodeType":"YulIdentifier","src":"6090:3:20"},"nativeSrc":"6090:39:20","nodeType":"YulFunctionCall","src":"6090:39:20"},"variableNames":[{"name":"end","nativeSrc":"6083:3:20","nodeType":"YulIdentifier","src":"6083:3:20"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"5762:373:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5833:5:20","nodeType":"YulTypedName","src":"5833:5:20","type":""},{"name":"pos","nativeSrc":"5840:3:20","nodeType":"YulTypedName","src":"5840:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5848:3:20","nodeType":"YulTypedName","src":"5848:3:20","type":""}],"src":"5762:373:20"},{"body":{"nativeSrc":"6285:275:20","nodeType":"YulBlock","src":"6285:275:20","statements":[{"nativeSrc":"6295:26:20","nodeType":"YulAssignment","src":"6295:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"6307:9:20","nodeType":"YulIdentifier","src":"6307:9:20"},{"kind":"number","nativeSrc":"6318:2:20","nodeType":"YulLiteral","src":"6318:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6303:3:20","nodeType":"YulIdentifier","src":"6303:3:20"},"nativeSrc":"6303:18:20","nodeType":"YulFunctionCall","src":"6303:18:20"},"variableNames":[{"name":"tail","nativeSrc":"6295:4:20","nodeType":"YulIdentifier","src":"6295:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6342:9:20","nodeType":"YulIdentifier","src":"6342:9:20"},{"kind":"number","nativeSrc":"6353:1:20","nodeType":"YulLiteral","src":"6353:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6338:3:20","nodeType":"YulIdentifier","src":"6338:3:20"},"nativeSrc":"6338:17:20","nodeType":"YulFunctionCall","src":"6338:17:20"},{"arguments":[{"name":"tail","nativeSrc":"6361:4:20","nodeType":"YulIdentifier","src":"6361:4:20"},{"name":"headStart","nativeSrc":"6367:9:20","nodeType":"YulIdentifier","src":"6367:9:20"}],"functionName":{"name":"sub","nativeSrc":"6357:3:20","nodeType":"YulIdentifier","src":"6357:3:20"},"nativeSrc":"6357:20:20","nodeType":"YulFunctionCall","src":"6357:20:20"}],"functionName":{"name":"mstore","nativeSrc":"6331:6:20","nodeType":"YulIdentifier","src":"6331:6:20"},"nativeSrc":"6331:47:20","nodeType":"YulFunctionCall","src":"6331:47:20"},"nativeSrc":"6331:47:20","nodeType":"YulExpressionStatement","src":"6331:47:20"},{"nativeSrc":"6387:84:20","nodeType":"YulAssignment","src":"6387:84:20","value":{"arguments":[{"name":"value0","nativeSrc":"6457:6:20","nodeType":"YulIdentifier","src":"6457:6:20"},{"name":"tail","nativeSrc":"6466:4:20","nodeType":"YulIdentifier","src":"6466:4:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"6395:61:20","nodeType":"YulIdentifier","src":"6395:61:20"},"nativeSrc":"6395:76:20","nodeType":"YulFunctionCall","src":"6395:76:20"},"variableNames":[{"name":"tail","nativeSrc":"6387:4:20","nodeType":"YulIdentifier","src":"6387:4:20"}]},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6525:6:20","nodeType":"YulIdentifier","src":"6525:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"6538:9:20","nodeType":"YulIdentifier","src":"6538:9:20"},{"kind":"number","nativeSrc":"6549:2:20","nodeType":"YulLiteral","src":"6549:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6534:3:20","nodeType":"YulIdentifier","src":"6534:3:20"},"nativeSrc":"6534:18:20","nodeType":"YulFunctionCall","src":"6534:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6481:43:20","nodeType":"YulIdentifier","src":"6481:43:20"},"nativeSrc":"6481:72:20","nodeType":"YulFunctionCall","src":"6481:72:20"},"nativeSrc":"6481:72:20","nodeType":"YulExpressionStatement","src":"6481:72:20"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"6141:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6249:9:20","nodeType":"YulTypedName","src":"6249:9:20","type":""},{"name":"value1","nativeSrc":"6261:6:20","nodeType":"YulTypedName","src":"6261:6:20","type":""},{"name":"value0","nativeSrc":"6269:6:20","nodeType":"YulTypedName","src":"6269:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6280:4:20","nodeType":"YulTypedName","src":"6280:4:20","type":""}],"src":"6141:419:20"},{"body":{"nativeSrc":"6624:56:20","nodeType":"YulBlock","src":"6624:56:20","statements":[{"body":{"nativeSrc":"6658:16:20","nodeType":"YulBlock","src":"6658:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6667:1:20","nodeType":"YulLiteral","src":"6667:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"6670:1:20","nodeType":"YulLiteral","src":"6670:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6660:6:20","nodeType":"YulIdentifier","src":"6660:6:20"},"nativeSrc":"6660:12:20","nodeType":"YulFunctionCall","src":"6660:12:20"},"nativeSrc":"6660:12:20","nodeType":"YulExpressionStatement","src":"6660:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6647:5:20","nodeType":"YulIdentifier","src":"6647:5:20"},{"kind":"number","nativeSrc":"6654:1:20","nodeType":"YulLiteral","src":"6654:1:20","type":"","value":"3"}],"functionName":{"name":"lt","nativeSrc":"6644:2:20","nodeType":"YulIdentifier","src":"6644:2:20"},"nativeSrc":"6644:12:20","nodeType":"YulFunctionCall","src":"6644:12:20"}],"functionName":{"name":"iszero","nativeSrc":"6637:6:20","nodeType":"YulIdentifier","src":"6637:6:20"},"nativeSrc":"6637:20:20","nodeType":"YulFunctionCall","src":"6637:20:20"},"nativeSrc":"6634:40:20","nodeType":"YulIf","src":"6634:40:20"}]},"name":"validator_revert_t_enum$_PostOpMode_$1041","nativeSrc":"6566:114:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6617:5:20","nodeType":"YulTypedName","src":"6617:5:20","type":""}],"src":"6566:114:20"},{"body":{"nativeSrc":"6753:102:20","nodeType":"YulBlock","src":"6753:102:20","statements":[{"nativeSrc":"6763:29:20","nodeType":"YulAssignment","src":"6763:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"6785:6:20","nodeType":"YulIdentifier","src":"6785:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"6772:12:20","nodeType":"YulIdentifier","src":"6772:12:20"},"nativeSrc":"6772:20:20","nodeType":"YulFunctionCall","src":"6772:20:20"},"variableNames":[{"name":"value","nativeSrc":"6763:5:20","nodeType":"YulIdentifier","src":"6763:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6843:5:20","nodeType":"YulIdentifier","src":"6843:5:20"}],"functionName":{"name":"validator_revert_t_enum$_PostOpMode_$1041","nativeSrc":"6801:41:20","nodeType":"YulIdentifier","src":"6801:41:20"},"nativeSrc":"6801:48:20","nodeType":"YulFunctionCall","src":"6801:48:20"},"nativeSrc":"6801:48:20","nodeType":"YulExpressionStatement","src":"6801:48:20"}]},"name":"abi_decode_t_enum$_PostOpMode_$1041","nativeSrc":"6686:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6731:6:20","nodeType":"YulTypedName","src":"6731:6:20","type":""},{"name":"end","nativeSrc":"6739:3:20","nodeType":"YulTypedName","src":"6739:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6747:5:20","nodeType":"YulTypedName","src":"6747:5:20","type":""}],"src":"6686:169:20"},{"body":{"nativeSrc":"6950:28:20","nodeType":"YulBlock","src":"6950:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6967:1:20","nodeType":"YulLiteral","src":"6967:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"6970:1:20","nodeType":"YulLiteral","src":"6970:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6960:6:20","nodeType":"YulIdentifier","src":"6960:6:20"},"nativeSrc":"6960:12:20","nodeType":"YulFunctionCall","src":"6960:12:20"},"nativeSrc":"6960:12:20","nodeType":"YulExpressionStatement","src":"6960:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6861:117:20","nodeType":"YulFunctionDefinition","src":"6861:117:20"},{"body":{"nativeSrc":"7073:28:20","nodeType":"YulBlock","src":"7073:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7090:1:20","nodeType":"YulLiteral","src":"7090:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"7093:1:20","nodeType":"YulLiteral","src":"7093:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7083:6:20","nodeType":"YulIdentifier","src":"7083:6:20"},"nativeSrc":"7083:12:20","nodeType":"YulFunctionCall","src":"7083:12:20"},"nativeSrc":"7083:12:20","nodeType":"YulExpressionStatement","src":"7083:12:20"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"6984:117:20","nodeType":"YulFunctionDefinition","src":"6984:117:20"},{"body":{"nativeSrc":"7196:28:20","nodeType":"YulBlock","src":"7196:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7213:1:20","nodeType":"YulLiteral","src":"7213:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"7216:1:20","nodeType":"YulLiteral","src":"7216:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7206:6:20","nodeType":"YulIdentifier","src":"7206:6:20"},"nativeSrc":"7206:12:20","nodeType":"YulFunctionCall","src":"7206:12:20"},"nativeSrc":"7206:12:20","nodeType":"YulExpressionStatement","src":"7206:12:20"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"7107:117:20","nodeType":"YulFunctionDefinition","src":"7107:117:20"},{"body":{"nativeSrc":"7317:478:20","nodeType":"YulBlock","src":"7317:478:20","statements":[{"body":{"nativeSrc":"7366:83:20","nodeType":"YulBlock","src":"7366:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"7368:77:20","nodeType":"YulIdentifier","src":"7368:77:20"},"nativeSrc":"7368:79:20","nodeType":"YulFunctionCall","src":"7368:79:20"},"nativeSrc":"7368:79:20","nodeType":"YulExpressionStatement","src":"7368:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7345:6:20","nodeType":"YulIdentifier","src":"7345:6:20"},{"kind":"number","nativeSrc":"7353:4:20","nodeType":"YulLiteral","src":"7353:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7341:3:20","nodeType":"YulIdentifier","src":"7341:3:20"},"nativeSrc":"7341:17:20","nodeType":"YulFunctionCall","src":"7341:17:20"},{"name":"end","nativeSrc":"7360:3:20","nodeType":"YulIdentifier","src":"7360:3:20"}],"functionName":{"name":"slt","nativeSrc":"7337:3:20","nodeType":"YulIdentifier","src":"7337:3:20"},"nativeSrc":"7337:27:20","nodeType":"YulFunctionCall","src":"7337:27:20"}],"functionName":{"name":"iszero","nativeSrc":"7330:6:20","nodeType":"YulIdentifier","src":"7330:6:20"},"nativeSrc":"7330:35:20","nodeType":"YulFunctionCall","src":"7330:35:20"},"nativeSrc":"7327:122:20","nodeType":"YulIf","src":"7327:122:20"},{"nativeSrc":"7458:30:20","nodeType":"YulAssignment","src":"7458:30:20","value":{"arguments":[{"name":"offset","nativeSrc":"7481:6:20","nodeType":"YulIdentifier","src":"7481:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"7468:12:20","nodeType":"YulIdentifier","src":"7468:12:20"},"nativeSrc":"7468:20:20","nodeType":"YulFunctionCall","src":"7468:20:20"},"variableNames":[{"name":"length","nativeSrc":"7458:6:20","nodeType":"YulIdentifier","src":"7458:6:20"}]},{"body":{"nativeSrc":"7531:83:20","nodeType":"YulBlock","src":"7531:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"7533:77:20","nodeType":"YulIdentifier","src":"7533:77:20"},"nativeSrc":"7533:79:20","nodeType":"YulFunctionCall","src":"7533:79:20"},"nativeSrc":"7533:79:20","nodeType":"YulExpressionStatement","src":"7533:79:20"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7503:6:20","nodeType":"YulIdentifier","src":"7503:6:20"},{"kind":"number","nativeSrc":"7511:18:20","nodeType":"YulLiteral","src":"7511:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7500:2:20","nodeType":"YulIdentifier","src":"7500:2:20"},"nativeSrc":"7500:30:20","nodeType":"YulFunctionCall","src":"7500:30:20"},"nativeSrc":"7497:117:20","nodeType":"YulIf","src":"7497:117:20"},{"nativeSrc":"7623:29:20","nodeType":"YulAssignment","src":"7623:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"7639:6:20","nodeType":"YulIdentifier","src":"7639:6:20"},{"kind":"number","nativeSrc":"7647:4:20","nodeType":"YulLiteral","src":"7647:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7635:3:20","nodeType":"YulIdentifier","src":"7635:3:20"},"nativeSrc":"7635:17:20","nodeType":"YulFunctionCall","src":"7635:17:20"},"variableNames":[{"name":"arrayPos","nativeSrc":"7623:8:20","nodeType":"YulIdentifier","src":"7623:8:20"}]},{"body":{"nativeSrc":"7706:83:20","nodeType":"YulBlock","src":"7706:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"7708:77:20","nodeType":"YulIdentifier","src":"7708:77:20"},"nativeSrc":"7708:79:20","nodeType":"YulFunctionCall","src":"7708:79:20"},"nativeSrc":"7708:79:20","nodeType":"YulExpressionStatement","src":"7708:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"7671:8:20","nodeType":"YulIdentifier","src":"7671:8:20"},{"arguments":[{"name":"length","nativeSrc":"7685:6:20","nodeType":"YulIdentifier","src":"7685:6:20"},{"kind":"number","nativeSrc":"7693:4:20","nodeType":"YulLiteral","src":"7693:4:20","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"7681:3:20","nodeType":"YulIdentifier","src":"7681:3:20"},"nativeSrc":"7681:17:20","nodeType":"YulFunctionCall","src":"7681:17:20"}],"functionName":{"name":"add","nativeSrc":"7667:3:20","nodeType":"YulIdentifier","src":"7667:3:20"},"nativeSrc":"7667:32:20","nodeType":"YulFunctionCall","src":"7667:32:20"},{"name":"end","nativeSrc":"7701:3:20","nodeType":"YulIdentifier","src":"7701:3:20"}],"functionName":{"name":"gt","nativeSrc":"7664:2:20","nodeType":"YulIdentifier","src":"7664:2:20"},"nativeSrc":"7664:41:20","nodeType":"YulFunctionCall","src":"7664:41:20"},"nativeSrc":"7661:128:20","nodeType":"YulIf","src":"7661:128:20"}]},"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"7243:552:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7284:6:20","nodeType":"YulTypedName","src":"7284:6:20","type":""},{"name":"end","nativeSrc":"7292:3:20","nodeType":"YulTypedName","src":"7292:3:20","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"7300:8:20","nodeType":"YulTypedName","src":"7300:8:20","type":""},{"name":"length","nativeSrc":"7310:6:20","nodeType":"YulTypedName","src":"7310:6:20","type":""}],"src":"7243:552:20"},{"body":{"nativeSrc":"7952:842:20","nodeType":"YulBlock","src":"7952:842:20","statements":[{"body":{"nativeSrc":"7999:83:20","nodeType":"YulBlock","src":"7999:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8001:77:20","nodeType":"YulIdentifier","src":"8001:77:20"},"nativeSrc":"8001:79:20","nodeType":"YulFunctionCall","src":"8001:79:20"},"nativeSrc":"8001:79:20","nodeType":"YulExpressionStatement","src":"8001:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7973:7:20","nodeType":"YulIdentifier","src":"7973:7:20"},{"name":"headStart","nativeSrc":"7982:9:20","nodeType":"YulIdentifier","src":"7982:9:20"}],"functionName":{"name":"sub","nativeSrc":"7969:3:20","nodeType":"YulIdentifier","src":"7969:3:20"},"nativeSrc":"7969:23:20","nodeType":"YulFunctionCall","src":"7969:23:20"},{"kind":"number","nativeSrc":"7994:3:20","nodeType":"YulLiteral","src":"7994:3:20","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"7965:3:20","nodeType":"YulIdentifier","src":"7965:3:20"},"nativeSrc":"7965:33:20","nodeType":"YulFunctionCall","src":"7965:33:20"},"nativeSrc":"7962:120:20","nodeType":"YulIf","src":"7962:120:20"},{"nativeSrc":"8092:132:20","nodeType":"YulBlock","src":"8092:132:20","statements":[{"nativeSrc":"8107:15:20","nodeType":"YulVariableDeclaration","src":"8107:15:20","value":{"kind":"number","nativeSrc":"8121:1:20","nodeType":"YulLiteral","src":"8121:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8111:6:20","nodeType":"YulTypedName","src":"8111:6:20","type":""}]},{"nativeSrc":"8136:78:20","nodeType":"YulAssignment","src":"8136:78:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8186:9:20","nodeType":"YulIdentifier","src":"8186:9:20"},{"name":"offset","nativeSrc":"8197:6:20","nodeType":"YulIdentifier","src":"8197:6:20"}],"functionName":{"name":"add","nativeSrc":"8182:3:20","nodeType":"YulIdentifier","src":"8182:3:20"},"nativeSrc":"8182:22:20","nodeType":"YulFunctionCall","src":"8182:22:20"},{"name":"dataEnd","nativeSrc":"8206:7:20","nodeType":"YulIdentifier","src":"8206:7:20"}],"functionName":{"name":"abi_decode_t_enum$_PostOpMode_$1041","nativeSrc":"8146:35:20","nodeType":"YulIdentifier","src":"8146:35:20"},"nativeSrc":"8146:68:20","nodeType":"YulFunctionCall","src":"8146:68:20"},"variableNames":[{"name":"value0","nativeSrc":"8136:6:20","nodeType":"YulIdentifier","src":"8136:6:20"}]}]},{"nativeSrc":"8234:297:20","nodeType":"YulBlock","src":"8234:297:20","statements":[{"nativeSrc":"8249:46:20","nodeType":"YulVariableDeclaration","src":"8249:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8280:9:20","nodeType":"YulIdentifier","src":"8280:9:20"},{"kind":"number","nativeSrc":"8291:2:20","nodeType":"YulLiteral","src":"8291:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8276:3:20","nodeType":"YulIdentifier","src":"8276:3:20"},"nativeSrc":"8276:18:20","nodeType":"YulFunctionCall","src":"8276:18:20"}],"functionName":{"name":"calldataload","nativeSrc":"8263:12:20","nodeType":"YulIdentifier","src":"8263:12:20"},"nativeSrc":"8263:32:20","nodeType":"YulFunctionCall","src":"8263:32:20"},"variables":[{"name":"offset","nativeSrc":"8253:6:20","nodeType":"YulTypedName","src":"8253:6:20","type":""}]},{"body":{"nativeSrc":"8342:83:20","nodeType":"YulBlock","src":"8342:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"8344:77:20","nodeType":"YulIdentifier","src":"8344:77:20"},"nativeSrc":"8344:79:20","nodeType":"YulFunctionCall","src":"8344:79:20"},"nativeSrc":"8344:79:20","nodeType":"YulExpressionStatement","src":"8344:79:20"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8314:6:20","nodeType":"YulIdentifier","src":"8314:6:20"},{"kind":"number","nativeSrc":"8322:18:20","nodeType":"YulLiteral","src":"8322:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8311:2:20","nodeType":"YulIdentifier","src":"8311:2:20"},"nativeSrc":"8311:30:20","nodeType":"YulFunctionCall","src":"8311:30:20"},"nativeSrc":"8308:117:20","nodeType":"YulIf","src":"8308:117:20"},{"nativeSrc":"8439:82:20","nodeType":"YulAssignment","src":"8439:82:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8493:9:20","nodeType":"YulIdentifier","src":"8493:9:20"},{"name":"offset","nativeSrc":"8504:6:20","nodeType":"YulIdentifier","src":"8504:6:20"}],"functionName":{"name":"add","nativeSrc":"8489:3:20","nodeType":"YulIdentifier","src":"8489:3:20"},"nativeSrc":"8489:22:20","nodeType":"YulFunctionCall","src":"8489:22:20"},{"name":"dataEnd","nativeSrc":"8513:7:20","nodeType":"YulIdentifier","src":"8513:7:20"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"8457:31:20","nodeType":"YulIdentifier","src":"8457:31:20"},"nativeSrc":"8457:64:20","nodeType":"YulFunctionCall","src":"8457:64:20"},"variableNames":[{"name":"value1","nativeSrc":"8439:6:20","nodeType":"YulIdentifier","src":"8439:6:20"},{"name":"value2","nativeSrc":"8447:6:20","nodeType":"YulIdentifier","src":"8447:6:20"}]}]},{"nativeSrc":"8541:118:20","nodeType":"YulBlock","src":"8541:118:20","statements":[{"nativeSrc":"8556:16:20","nodeType":"YulVariableDeclaration","src":"8556:16:20","value":{"kind":"number","nativeSrc":"8570:2:20","nodeType":"YulLiteral","src":"8570:2:20","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"8560:6:20","nodeType":"YulTypedName","src":"8560:6:20","type":""}]},{"nativeSrc":"8586:63:20","nodeType":"YulAssignment","src":"8586:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8621:9:20","nodeType":"YulIdentifier","src":"8621:9:20"},{"name":"offset","nativeSrc":"8632:6:20","nodeType":"YulIdentifier","src":"8632:6:20"}],"functionName":{"name":"add","nativeSrc":"8617:3:20","nodeType":"YulIdentifier","src":"8617:3:20"},"nativeSrc":"8617:22:20","nodeType":"YulFunctionCall","src":"8617:22:20"},{"name":"dataEnd","nativeSrc":"8641:7:20","nodeType":"YulIdentifier","src":"8641:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8596:20:20","nodeType":"YulIdentifier","src":"8596:20:20"},"nativeSrc":"8596:53:20","nodeType":"YulFunctionCall","src":"8596:53:20"},"variableNames":[{"name":"value3","nativeSrc":"8586:6:20","nodeType":"YulIdentifier","src":"8586:6:20"}]}]},{"nativeSrc":"8669:118:20","nodeType":"YulBlock","src":"8669:118:20","statements":[{"nativeSrc":"8684:16:20","nodeType":"YulVariableDeclaration","src":"8684:16:20","value":{"kind":"number","nativeSrc":"8698:2:20","nodeType":"YulLiteral","src":"8698:2:20","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"8688:6:20","nodeType":"YulTypedName","src":"8688:6:20","type":""}]},{"nativeSrc":"8714:63:20","nodeType":"YulAssignment","src":"8714:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8749:9:20","nodeType":"YulIdentifier","src":"8749:9:20"},{"name":"offset","nativeSrc":"8760:6:20","nodeType":"YulIdentifier","src":"8760:6:20"}],"functionName":{"name":"add","nativeSrc":"8745:3:20","nodeType":"YulIdentifier","src":"8745:3:20"},"nativeSrc":"8745:22:20","nodeType":"YulFunctionCall","src":"8745:22:20"},{"name":"dataEnd","nativeSrc":"8769:7:20","nodeType":"YulIdentifier","src":"8769:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8724:20:20","nodeType":"YulIdentifier","src":"8724:20:20"},"nativeSrc":"8724:53:20","nodeType":"YulFunctionCall","src":"8724:53:20"},"variableNames":[{"name":"value4","nativeSrc":"8714:6:20","nodeType":"YulIdentifier","src":"8714:6:20"}]}]}]},"name":"abi_decode_tuple_t_enum$_PostOpMode_$1041t_bytes_calldata_ptrt_uint256t_uint256","nativeSrc":"7801:993:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7890:9:20","nodeType":"YulTypedName","src":"7890:9:20","type":""},{"name":"dataEnd","nativeSrc":"7901:7:20","nodeType":"YulTypedName","src":"7901:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7913:6:20","nodeType":"YulTypedName","src":"7913:6:20","type":""},{"name":"value1","nativeSrc":"7921:6:20","nodeType":"YulTypedName","src":"7921:6:20","type":""},{"name":"value2","nativeSrc":"7929:6:20","nodeType":"YulTypedName","src":"7929:6:20","type":""},{"name":"value3","nativeSrc":"7937:6:20","nodeType":"YulTypedName","src":"7937:6:20","type":""},{"name":"value4","nativeSrc":"7945:6:20","nodeType":"YulTypedName","src":"7945:6:20","type":""}],"src":"7801:993:20"},{"body":{"nativeSrc":"8865:53:20","nodeType":"YulBlock","src":"8865:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8882:3:20","nodeType":"YulIdentifier","src":"8882:3:20"},{"arguments":[{"name":"value","nativeSrc":"8905:5:20","nodeType":"YulIdentifier","src":"8905:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"8887:17:20","nodeType":"YulIdentifier","src":"8887:17:20"},"nativeSrc":"8887:24:20","nodeType":"YulFunctionCall","src":"8887:24:20"}],"functionName":{"name":"mstore","nativeSrc":"8875:6:20","nodeType":"YulIdentifier","src":"8875:6:20"},"nativeSrc":"8875:37:20","nodeType":"YulFunctionCall","src":"8875:37:20"},"nativeSrc":"8875:37:20","nodeType":"YulExpressionStatement","src":"8875:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8800:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8853:5:20","nodeType":"YulTypedName","src":"8853:5:20","type":""},{"name":"pos","nativeSrc":"8860:3:20","nodeType":"YulTypedName","src":"8860:3:20","type":""}],"src":"8800:118:20"},{"body":{"nativeSrc":"9022:124:20","nodeType":"YulBlock","src":"9022:124:20","statements":[{"nativeSrc":"9032:26:20","nodeType":"YulAssignment","src":"9032:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"9044:9:20","nodeType":"YulIdentifier","src":"9044:9:20"},{"kind":"number","nativeSrc":"9055:2:20","nodeType":"YulLiteral","src":"9055:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9040:3:20","nodeType":"YulIdentifier","src":"9040:3:20"},"nativeSrc":"9040:18:20","nodeType":"YulFunctionCall","src":"9040:18:20"},"variableNames":[{"name":"tail","nativeSrc":"9032:4:20","nodeType":"YulIdentifier","src":"9032:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9112:6:20","nodeType":"YulIdentifier","src":"9112:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"9125:9:20","nodeType":"YulIdentifier","src":"9125:9:20"},{"kind":"number","nativeSrc":"9136:1:20","nodeType":"YulLiteral","src":"9136:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9121:3:20","nodeType":"YulIdentifier","src":"9121:3:20"},"nativeSrc":"9121:17:20","nodeType":"YulFunctionCall","src":"9121:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9068:43:20","nodeType":"YulIdentifier","src":"9068:43:20"},"nativeSrc":"9068:71:20","nodeType":"YulFunctionCall","src":"9068:71:20"},"nativeSrc":"9068:71:20","nodeType":"YulExpressionStatement","src":"9068:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"8924:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8994:9:20","nodeType":"YulTypedName","src":"8994:9:20","type":""},{"name":"value0","nativeSrc":"9006:6:20","nodeType":"YulTypedName","src":"9006:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9017:4:20","nodeType":"YulTypedName","src":"9017:4:20","type":""}],"src":"8924:222:20"},{"body":{"nativeSrc":"9184:28:20","nodeType":"YulBlock","src":"9184:28:20","statements":[{"nativeSrc":"9194:12:20","nodeType":"YulAssignment","src":"9194:12:20","value":{"name":"value","nativeSrc":"9201:5:20","nodeType":"YulIdentifier","src":"9201:5:20"},"variableNames":[{"name":"ret","nativeSrc":"9194:3:20","nodeType":"YulIdentifier","src":"9194:3:20"}]}]},"name":"identity","nativeSrc":"9152:60:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9170:5:20","nodeType":"YulTypedName","src":"9170:5:20","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"9180:3:20","nodeType":"YulTypedName","src":"9180:3:20","type":""}],"src":"9152:60:20"},{"body":{"nativeSrc":"9278:82:20","nodeType":"YulBlock","src":"9278:82:20","statements":[{"nativeSrc":"9288:66:20","nodeType":"YulAssignment","src":"9288:66:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9346:5:20","nodeType":"YulIdentifier","src":"9346:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"9328:17:20","nodeType":"YulIdentifier","src":"9328:17:20"},"nativeSrc":"9328:24:20","nodeType":"YulFunctionCall","src":"9328:24:20"}],"functionName":{"name":"identity","nativeSrc":"9319:8:20","nodeType":"YulIdentifier","src":"9319:8:20"},"nativeSrc":"9319:34:20","nodeType":"YulFunctionCall","src":"9319:34:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"9301:17:20","nodeType":"YulIdentifier","src":"9301:17:20"},"nativeSrc":"9301:53:20","nodeType":"YulFunctionCall","src":"9301:53:20"},"variableNames":[{"name":"converted","nativeSrc":"9288:9:20","nodeType":"YulIdentifier","src":"9288:9:20"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"9218:142:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9258:5:20","nodeType":"YulTypedName","src":"9258:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"9268:9:20","nodeType":"YulTypedName","src":"9268:9:20","type":""}],"src":"9218:142:20"},{"body":{"nativeSrc":"9426:66:20","nodeType":"YulBlock","src":"9426:66:20","statements":[{"nativeSrc":"9436:50:20","nodeType":"YulAssignment","src":"9436:50:20","value":{"arguments":[{"name":"value","nativeSrc":"9480:5:20","nodeType":"YulIdentifier","src":"9480:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"9449:30:20","nodeType":"YulIdentifier","src":"9449:30:20"},"nativeSrc":"9449:37:20","nodeType":"YulFunctionCall","src":"9449:37:20"},"variableNames":[{"name":"converted","nativeSrc":"9436:9:20","nodeType":"YulIdentifier","src":"9436:9:20"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"9366:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9406:5:20","nodeType":"YulTypedName","src":"9406:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"9416:9:20","nodeType":"YulTypedName","src":"9416:9:20","type":""}],"src":"9366:126:20"},{"body":{"nativeSrc":"9578:66:20","nodeType":"YulBlock","src":"9578:66:20","statements":[{"nativeSrc":"9588:50:20","nodeType":"YulAssignment","src":"9588:50:20","value":{"arguments":[{"name":"value","nativeSrc":"9632:5:20","nodeType":"YulIdentifier","src":"9632:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"9601:30:20","nodeType":"YulIdentifier","src":"9601:30:20"},"nativeSrc":"9601:37:20","nodeType":"YulFunctionCall","src":"9601:37:20"},"variableNames":[{"name":"converted","nativeSrc":"9588:9:20","nodeType":"YulIdentifier","src":"9588:9:20"}]}]},"name":"convert_t_contract$_IEntryPoint_$1014_to_t_address","nativeSrc":"9498:146:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9558:5:20","nodeType":"YulTypedName","src":"9558:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"9568:9:20","nodeType":"YulTypedName","src":"9568:9:20","type":""}],"src":"9498:146:20"},{"body":{"nativeSrc":"9735:86:20","nodeType":"YulBlock","src":"9735:86:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9752:3:20","nodeType":"YulIdentifier","src":"9752:3:20"},{"arguments":[{"name":"value","nativeSrc":"9808:5:20","nodeType":"YulIdentifier","src":"9808:5:20"}],"functionName":{"name":"convert_t_contract$_IEntryPoint_$1014_to_t_address","nativeSrc":"9757:50:20","nodeType":"YulIdentifier","src":"9757:50:20"},"nativeSrc":"9757:57:20","nodeType":"YulFunctionCall","src":"9757:57:20"}],"functionName":{"name":"mstore","nativeSrc":"9745:6:20","nodeType":"YulIdentifier","src":"9745:6:20"},"nativeSrc":"9745:70:20","nodeType":"YulFunctionCall","src":"9745:70:20"},"nativeSrc":"9745:70:20","nodeType":"YulExpressionStatement","src":"9745:70:20"}]},"name":"abi_encode_t_contract$_IEntryPoint_$1014_to_t_address_fromStack","nativeSrc":"9650:171:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9723:5:20","nodeType":"YulTypedName","src":"9723:5:20","type":""},{"name":"pos","nativeSrc":"9730:3:20","nodeType":"YulTypedName","src":"9730:3:20","type":""}],"src":"9650:171:20"},{"body":{"nativeSrc":"9945:144:20","nodeType":"YulBlock","src":"9945:144:20","statements":[{"nativeSrc":"9955:26:20","nodeType":"YulAssignment","src":"9955:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"9967:9:20","nodeType":"YulIdentifier","src":"9967:9:20"},{"kind":"number","nativeSrc":"9978:2:20","nodeType":"YulLiteral","src":"9978:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9963:3:20","nodeType":"YulIdentifier","src":"9963:3:20"},"nativeSrc":"9963:18:20","nodeType":"YulFunctionCall","src":"9963:18:20"},"variableNames":[{"name":"tail","nativeSrc":"9955:4:20","nodeType":"YulIdentifier","src":"9955:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10055:6:20","nodeType":"YulIdentifier","src":"10055:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"10068:9:20","nodeType":"YulIdentifier","src":"10068:9:20"},{"kind":"number","nativeSrc":"10079:1:20","nodeType":"YulLiteral","src":"10079:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10064:3:20","nodeType":"YulIdentifier","src":"10064:3:20"},"nativeSrc":"10064:17:20","nodeType":"YulFunctionCall","src":"10064:17:20"}],"functionName":{"name":"abi_encode_t_contract$_IEntryPoint_$1014_to_t_address_fromStack","nativeSrc":"9991:63:20","nodeType":"YulIdentifier","src":"9991:63:20"},"nativeSrc":"9991:91:20","nodeType":"YulFunctionCall","src":"9991:91:20"},"nativeSrc":"9991:91:20","nodeType":"YulExpressionStatement","src":"9991:91:20"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$1014__to_t_address__fromStack_reversed","nativeSrc":"9827:262:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9917:9:20","nodeType":"YulTypedName","src":"9917:9:20","type":""},{"name":"value0","nativeSrc":"9929:6:20","nodeType":"YulTypedName","src":"9929:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9940:4:20","nodeType":"YulTypedName","src":"9940:4:20","type":""}],"src":"9827:262:20"},{"body":{"nativeSrc":"10169:271:20","nodeType":"YulBlock","src":"10169:271:20","statements":[{"body":{"nativeSrc":"10215:83:20","nodeType":"YulBlock","src":"10215:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10217:77:20","nodeType":"YulIdentifier","src":"10217:77:20"},"nativeSrc":"10217:79:20","nodeType":"YulFunctionCall","src":"10217:79:20"},"nativeSrc":"10217:79:20","nodeType":"YulExpressionStatement","src":"10217:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10190:7:20","nodeType":"YulIdentifier","src":"10190:7:20"},{"name":"headStart","nativeSrc":"10199:9:20","nodeType":"YulIdentifier","src":"10199:9:20"}],"functionName":{"name":"sub","nativeSrc":"10186:3:20","nodeType":"YulIdentifier","src":"10186:3:20"},"nativeSrc":"10186:23:20","nodeType":"YulFunctionCall","src":"10186:23:20"},{"kind":"number","nativeSrc":"10211:2:20","nodeType":"YulLiteral","src":"10211:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"10182:3:20","nodeType":"YulIdentifier","src":"10182:3:20"},"nativeSrc":"10182:32:20","nodeType":"YulFunctionCall","src":"10182:32:20"},"nativeSrc":"10179:119:20","nodeType":"YulIf","src":"10179:119:20"},{"nativeSrc":"10308:125:20","nodeType":"YulBlock","src":"10308:125:20","statements":[{"nativeSrc":"10323:15:20","nodeType":"YulVariableDeclaration","src":"10323:15:20","value":{"kind":"number","nativeSrc":"10337:1:20","nodeType":"YulLiteral","src":"10337:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10327:6:20","nodeType":"YulTypedName","src":"10327:6:20","type":""}]},{"nativeSrc":"10352:71:20","nodeType":"YulAssignment","src":"10352:71:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10395:9:20","nodeType":"YulIdentifier","src":"10395:9:20"},{"name":"offset","nativeSrc":"10406:6:20","nodeType":"YulIdentifier","src":"10406:6:20"}],"functionName":{"name":"add","nativeSrc":"10391:3:20","nodeType":"YulIdentifier","src":"10391:3:20"},"nativeSrc":"10391:22:20","nodeType":"YulFunctionCall","src":"10391:22:20"},{"name":"dataEnd","nativeSrc":"10415:7:20","nodeType":"YulIdentifier","src":"10415:7:20"}],"functionName":{"name":"abi_decode_t_address_payable","nativeSrc":"10362:28:20","nodeType":"YulIdentifier","src":"10362:28:20"},"nativeSrc":"10362:61:20","nodeType":"YulFunctionCall","src":"10362:61:20"},"variableNames":[{"name":"value0","nativeSrc":"10352:6:20","nodeType":"YulIdentifier","src":"10352:6:20"}]}]}]},"name":"abi_decode_tuple_t_address_payable","nativeSrc":"10095:345:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10139:9:20","nodeType":"YulTypedName","src":"10139:9:20","type":""},{"name":"dataEnd","nativeSrc":"10150:7:20","nodeType":"YulTypedName","src":"10150:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10162:6:20","nodeType":"YulTypedName","src":"10162:6:20","type":""}],"src":"10095:345:20"},{"body":{"nativeSrc":"10521:66:20","nodeType":"YulBlock","src":"10521:66:20","statements":[{"nativeSrc":"10531:50:20","nodeType":"YulAssignment","src":"10531:50:20","value":{"arguments":[{"name":"value","nativeSrc":"10575:5:20","nodeType":"YulIdentifier","src":"10575:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"10544:30:20","nodeType":"YulIdentifier","src":"10544:30:20"},"nativeSrc":"10544:37:20","nodeType":"YulFunctionCall","src":"10544:37:20"},"variableNames":[{"name":"converted","nativeSrc":"10531:9:20","nodeType":"YulIdentifier","src":"10531:9:20"}]}]},"name":"convert_t_contract$_IERC20_$1617_to_t_address","nativeSrc":"10446:141:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10501:5:20","nodeType":"YulTypedName","src":"10501:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"10511:9:20","nodeType":"YulTypedName","src":"10511:9:20","type":""}],"src":"10446:141:20"},{"body":{"nativeSrc":"10673:81:20","nodeType":"YulBlock","src":"10673:81:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10690:3:20","nodeType":"YulIdentifier","src":"10690:3:20"},{"arguments":[{"name":"value","nativeSrc":"10741:5:20","nodeType":"YulIdentifier","src":"10741:5:20"}],"functionName":{"name":"convert_t_contract$_IERC20_$1617_to_t_address","nativeSrc":"10695:45:20","nodeType":"YulIdentifier","src":"10695:45:20"},"nativeSrc":"10695:52:20","nodeType":"YulFunctionCall","src":"10695:52:20"}],"functionName":{"name":"mstore","nativeSrc":"10683:6:20","nodeType":"YulIdentifier","src":"10683:6:20"},"nativeSrc":"10683:65:20","nodeType":"YulFunctionCall","src":"10683:65:20"},"nativeSrc":"10683:65:20","nodeType":"YulExpressionStatement","src":"10683:65:20"}]},"name":"abi_encode_t_contract$_IERC20_$1617_to_t_address_fromStack","nativeSrc":"10593:161:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10661:5:20","nodeType":"YulTypedName","src":"10661:5:20","type":""},{"name":"pos","nativeSrc":"10668:3:20","nodeType":"YulTypedName","src":"10668:3:20","type":""}],"src":"10593:161:20"},{"body":{"nativeSrc":"10873:139:20","nodeType":"YulBlock","src":"10873:139:20","statements":[{"nativeSrc":"10883:26:20","nodeType":"YulAssignment","src":"10883:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"10895:9:20","nodeType":"YulIdentifier","src":"10895:9:20"},{"kind":"number","nativeSrc":"10906:2:20","nodeType":"YulLiteral","src":"10906:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10891:3:20","nodeType":"YulIdentifier","src":"10891:3:20"},"nativeSrc":"10891:18:20","nodeType":"YulFunctionCall","src":"10891:18:20"},"variableNames":[{"name":"tail","nativeSrc":"10883:4:20","nodeType":"YulIdentifier","src":"10883:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10978:6:20","nodeType":"YulIdentifier","src":"10978:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"10991:9:20","nodeType":"YulIdentifier","src":"10991:9:20"},{"kind":"number","nativeSrc":"11002:1:20","nodeType":"YulLiteral","src":"11002:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10987:3:20","nodeType":"YulIdentifier","src":"10987:3:20"},"nativeSrc":"10987:17:20","nodeType":"YulFunctionCall","src":"10987:17:20"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$1617_to_t_address_fromStack","nativeSrc":"10919:58:20","nodeType":"YulIdentifier","src":"10919:58:20"},"nativeSrc":"10919:86:20","nodeType":"YulFunctionCall","src":"10919:86:20"},"nativeSrc":"10919:86:20","nodeType":"YulExpressionStatement","src":"10919:86:20"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$1617__to_t_address__fromStack_reversed","nativeSrc":"10760:252:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10845:9:20","nodeType":"YulTypedName","src":"10845:9:20","type":""},{"name":"value0","nativeSrc":"10857:6:20","nodeType":"YulTypedName","src":"10857:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10868:4:20","nodeType":"YulTypedName","src":"10868:4:20","type":""}],"src":"10760:252:20"},{"body":{"nativeSrc":"11081:52:20","nodeType":"YulBlock","src":"11081:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11098:3:20","nodeType":"YulIdentifier","src":"11098:3:20"},{"arguments":[{"name":"value","nativeSrc":"11120:5:20","nodeType":"YulIdentifier","src":"11120:5:20"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"11103:16:20","nodeType":"YulIdentifier","src":"11103:16:20"},"nativeSrc":"11103:23:20","nodeType":"YulFunctionCall","src":"11103:23:20"}],"functionName":{"name":"mstore","nativeSrc":"11091:6:20","nodeType":"YulIdentifier","src":"11091:6:20"},"nativeSrc":"11091:36:20","nodeType":"YulFunctionCall","src":"11091:36:20"},"nativeSrc":"11091:36:20","nodeType":"YulExpressionStatement","src":"11091:36:20"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"11018:115:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11069:5:20","nodeType":"YulTypedName","src":"11069:5:20","type":""},{"name":"pos","nativeSrc":"11076:3:20","nodeType":"YulTypedName","src":"11076:3:20","type":""}],"src":"11018:115:20"},{"body":{"nativeSrc":"11235:122:20","nodeType":"YulBlock","src":"11235:122:20","statements":[{"nativeSrc":"11245:26:20","nodeType":"YulAssignment","src":"11245:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"11257:9:20","nodeType":"YulIdentifier","src":"11257:9:20"},{"kind":"number","nativeSrc":"11268:2:20","nodeType":"YulLiteral","src":"11268:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11253:3:20","nodeType":"YulIdentifier","src":"11253:3:20"},"nativeSrc":"11253:18:20","nodeType":"YulFunctionCall","src":"11253:18:20"},"variableNames":[{"name":"tail","nativeSrc":"11245:4:20","nodeType":"YulIdentifier","src":"11245:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11323:6:20","nodeType":"YulIdentifier","src":"11323:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"11336:9:20","nodeType":"YulIdentifier","src":"11336:9:20"},{"kind":"number","nativeSrc":"11347:1:20","nodeType":"YulLiteral","src":"11347:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11332:3:20","nodeType":"YulIdentifier","src":"11332:3:20"},"nativeSrc":"11332:17:20","nodeType":"YulFunctionCall","src":"11332:17:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"11281:41:20","nodeType":"YulIdentifier","src":"11281:41:20"},"nativeSrc":"11281:69:20","nodeType":"YulFunctionCall","src":"11281:69:20"},"nativeSrc":"11281:69:20","nodeType":"YulExpressionStatement","src":"11281:69:20"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nativeSrc":"11139:218:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11207:9:20","nodeType":"YulTypedName","src":"11207:9:20","type":""},{"name":"value0","nativeSrc":"11219:6:20","nodeType":"YulTypedName","src":"11219:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11230:4:20","nodeType":"YulTypedName","src":"11230:4:20","type":""}],"src":"11139:218:20"},{"body":{"nativeSrc":"11444:61:20","nodeType":"YulBlock","src":"11444:61:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11461:3:20","nodeType":"YulIdentifier","src":"11461:3:20"},{"arguments":[{"name":"value","nativeSrc":"11492:5:20","nodeType":"YulIdentifier","src":"11492:5:20"}],"functionName":{"name":"cleanup_t_address_payable","nativeSrc":"11466:25:20","nodeType":"YulIdentifier","src":"11466:25:20"},"nativeSrc":"11466:32:20","nodeType":"YulFunctionCall","src":"11466:32:20"}],"functionName":{"name":"mstore","nativeSrc":"11454:6:20","nodeType":"YulIdentifier","src":"11454:6:20"},"nativeSrc":"11454:45:20","nodeType":"YulFunctionCall","src":"11454:45:20"},"nativeSrc":"11454:45:20","nodeType":"YulExpressionStatement","src":"11454:45:20"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nativeSrc":"11363:142:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11432:5:20","nodeType":"YulTypedName","src":"11432:5:20","type":""},{"name":"pos","nativeSrc":"11439:3:20","nodeType":"YulTypedName","src":"11439:3:20","type":""}],"src":"11363:142:20"},{"body":{"nativeSrc":"11653:222:20","nodeType":"YulBlock","src":"11653:222:20","statements":[{"nativeSrc":"11663:26:20","nodeType":"YulAssignment","src":"11663:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"11675:9:20","nodeType":"YulIdentifier","src":"11675:9:20"},{"kind":"number","nativeSrc":"11686:2:20","nodeType":"YulLiteral","src":"11686:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11671:3:20","nodeType":"YulIdentifier","src":"11671:3:20"},"nativeSrc":"11671:18:20","nodeType":"YulFunctionCall","src":"11671:18:20"},"variableNames":[{"name":"tail","nativeSrc":"11663:4:20","nodeType":"YulIdentifier","src":"11663:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11759:6:20","nodeType":"YulIdentifier","src":"11759:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"11772:9:20","nodeType":"YulIdentifier","src":"11772:9:20"},{"kind":"number","nativeSrc":"11783:1:20","nodeType":"YulLiteral","src":"11783:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11768:3:20","nodeType":"YulIdentifier","src":"11768:3:20"},"nativeSrc":"11768:17:20","nodeType":"YulFunctionCall","src":"11768:17:20"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nativeSrc":"11699:59:20","nodeType":"YulIdentifier","src":"11699:59:20"},"nativeSrc":"11699:87:20","nodeType":"YulFunctionCall","src":"11699:87:20"},"nativeSrc":"11699:87:20","nodeType":"YulExpressionStatement","src":"11699:87:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11840:6:20","nodeType":"YulIdentifier","src":"11840:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"11853:9:20","nodeType":"YulIdentifier","src":"11853:9:20"},{"kind":"number","nativeSrc":"11864:2:20","nodeType":"YulLiteral","src":"11864:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11849:3:20","nodeType":"YulIdentifier","src":"11849:3:20"},"nativeSrc":"11849:18:20","nodeType":"YulFunctionCall","src":"11849:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11796:43:20","nodeType":"YulIdentifier","src":"11796:43:20"},"nativeSrc":"11796:72:20","nodeType":"YulFunctionCall","src":"11796:72:20"},"nativeSrc":"11796:72:20","nodeType":"YulExpressionStatement","src":"11796:72:20"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed","nativeSrc":"11511:364:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11617:9:20","nodeType":"YulTypedName","src":"11617:9:20","type":""},{"name":"value1","nativeSrc":"11629:6:20","nodeType":"YulTypedName","src":"11629:6:20","type":""},{"name":"value0","nativeSrc":"11637:6:20","nodeType":"YulTypedName","src":"11637:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11648:4:20","nodeType":"YulTypedName","src":"11648:4:20","type":""}],"src":"11511:364:20"},{"body":{"nativeSrc":"11944:80:20","nodeType":"YulBlock","src":"11944:80:20","statements":[{"nativeSrc":"11954:22:20","nodeType":"YulAssignment","src":"11954:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"11969:6:20","nodeType":"YulIdentifier","src":"11969:6:20"}],"functionName":{"name":"mload","nativeSrc":"11963:5:20","nodeType":"YulIdentifier","src":"11963:5:20"},"nativeSrc":"11963:13:20","nodeType":"YulFunctionCall","src":"11963:13:20"},"variableNames":[{"name":"value","nativeSrc":"11954:5:20","nodeType":"YulIdentifier","src":"11954:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12012:5:20","nodeType":"YulIdentifier","src":"12012:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"11985:26:20","nodeType":"YulIdentifier","src":"11985:26:20"},"nativeSrc":"11985:33:20","nodeType":"YulFunctionCall","src":"11985:33:20"},"nativeSrc":"11985:33:20","nodeType":"YulExpressionStatement","src":"11985:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"11881:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11922:6:20","nodeType":"YulTypedName","src":"11922:6:20","type":""},{"name":"end","nativeSrc":"11930:3:20","nodeType":"YulTypedName","src":"11930:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11938:5:20","nodeType":"YulTypedName","src":"11938:5:20","type":""}],"src":"11881:143:20"},{"body":{"nativeSrc":"12107:274:20","nodeType":"YulBlock","src":"12107:274:20","statements":[{"body":{"nativeSrc":"12153:83:20","nodeType":"YulBlock","src":"12153:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12155:77:20","nodeType":"YulIdentifier","src":"12155:77:20"},"nativeSrc":"12155:79:20","nodeType":"YulFunctionCall","src":"12155:79:20"},"nativeSrc":"12155:79:20","nodeType":"YulExpressionStatement","src":"12155:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12128:7:20","nodeType":"YulIdentifier","src":"12128:7:20"},{"name":"headStart","nativeSrc":"12137:9:20","nodeType":"YulIdentifier","src":"12137:9:20"}],"functionName":{"name":"sub","nativeSrc":"12124:3:20","nodeType":"YulIdentifier","src":"12124:3:20"},"nativeSrc":"12124:23:20","nodeType":"YulFunctionCall","src":"12124:23:20"},{"kind":"number","nativeSrc":"12149:2:20","nodeType":"YulLiteral","src":"12149:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"12120:3:20","nodeType":"YulIdentifier","src":"12120:3:20"},"nativeSrc":"12120:32:20","nodeType":"YulFunctionCall","src":"12120:32:20"},"nativeSrc":"12117:119:20","nodeType":"YulIf","src":"12117:119:20"},{"nativeSrc":"12246:128:20","nodeType":"YulBlock","src":"12246:128:20","statements":[{"nativeSrc":"12261:15:20","nodeType":"YulVariableDeclaration","src":"12261:15:20","value":{"kind":"number","nativeSrc":"12275:1:20","nodeType":"YulLiteral","src":"12275:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12265:6:20","nodeType":"YulTypedName","src":"12265:6:20","type":""}]},{"nativeSrc":"12290:74:20","nodeType":"YulAssignment","src":"12290:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12336:9:20","nodeType":"YulIdentifier","src":"12336:9:20"},{"name":"offset","nativeSrc":"12347:6:20","nodeType":"YulIdentifier","src":"12347:6:20"}],"functionName":{"name":"add","nativeSrc":"12332:3:20","nodeType":"YulIdentifier","src":"12332:3:20"},"nativeSrc":"12332:22:20","nodeType":"YulFunctionCall","src":"12332:22:20"},{"name":"dataEnd","nativeSrc":"12356:7:20","nodeType":"YulIdentifier","src":"12356:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"12300:31:20","nodeType":"YulIdentifier","src":"12300:31:20"},"nativeSrc":"12300:64:20","nodeType":"YulFunctionCall","src":"12300:64:20"},"variableNames":[{"name":"value0","nativeSrc":"12290:6:20","nodeType":"YulIdentifier","src":"12290:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"12030:351:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12077:9:20","nodeType":"YulTypedName","src":"12077:9:20","type":""},{"name":"dataEnd","nativeSrc":"12088:7:20","nodeType":"YulTypedName","src":"12088:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12100:6:20","nodeType":"YulTypedName","src":"12100:6:20","type":""}],"src":"12030:351:20"},{"body":{"nativeSrc":"12501:140:20","nodeType":"YulBlock","src":"12501:140:20","statements":[{"nativeSrc":"12511:26:20","nodeType":"YulAssignment","src":"12511:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"12523:9:20","nodeType":"YulIdentifier","src":"12523:9:20"},{"kind":"number","nativeSrc":"12534:2:20","nodeType":"YulLiteral","src":"12534:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12519:3:20","nodeType":"YulIdentifier","src":"12519:3:20"},"nativeSrc":"12519:18:20","nodeType":"YulFunctionCall","src":"12519:18:20"},"variableNames":[{"name":"tail","nativeSrc":"12511:4:20","nodeType":"YulIdentifier","src":"12511:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12607:6:20","nodeType":"YulIdentifier","src":"12607:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"12620:9:20","nodeType":"YulIdentifier","src":"12620:9:20"},{"kind":"number","nativeSrc":"12631:1:20","nodeType":"YulLiteral","src":"12631:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12616:3:20","nodeType":"YulIdentifier","src":"12616:3:20"},"nativeSrc":"12616:17:20","nodeType":"YulFunctionCall","src":"12616:17:20"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nativeSrc":"12547:59:20","nodeType":"YulIdentifier","src":"12547:59:20"},"nativeSrc":"12547:87:20","nodeType":"YulFunctionCall","src":"12547:87:20"},"nativeSrc":"12547:87:20","nodeType":"YulExpressionStatement","src":"12547:87:20"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nativeSrc":"12387:254:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12473:9:20","nodeType":"YulTypedName","src":"12473:9:20","type":""},{"name":"value0","nativeSrc":"12485:6:20","nodeType":"YulTypedName","src":"12485:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12496:4:20","nodeType":"YulTypedName","src":"12496:4:20","type":""}],"src":"12387:254:20"},{"body":{"nativeSrc":"12773:206:20","nodeType":"YulBlock","src":"12773:206:20","statements":[{"nativeSrc":"12783:26:20","nodeType":"YulAssignment","src":"12783:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"12795:9:20","nodeType":"YulIdentifier","src":"12795:9:20"},{"kind":"number","nativeSrc":"12806:2:20","nodeType":"YulLiteral","src":"12806:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12791:3:20","nodeType":"YulIdentifier","src":"12791:3:20"},"nativeSrc":"12791:18:20","nodeType":"YulFunctionCall","src":"12791:18:20"},"variableNames":[{"name":"tail","nativeSrc":"12783:4:20","nodeType":"YulIdentifier","src":"12783:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12863:6:20","nodeType":"YulIdentifier","src":"12863:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"12876:9:20","nodeType":"YulIdentifier","src":"12876:9:20"},{"kind":"number","nativeSrc":"12887:1:20","nodeType":"YulLiteral","src":"12887:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12872:3:20","nodeType":"YulIdentifier","src":"12872:3:20"},"nativeSrc":"12872:17:20","nodeType":"YulFunctionCall","src":"12872:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12819:43:20","nodeType":"YulIdentifier","src":"12819:43:20"},"nativeSrc":"12819:71:20","nodeType":"YulFunctionCall","src":"12819:71:20"},"nativeSrc":"12819:71:20","nodeType":"YulExpressionStatement","src":"12819:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12944:6:20","nodeType":"YulIdentifier","src":"12944:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"12957:9:20","nodeType":"YulIdentifier","src":"12957:9:20"},{"kind":"number","nativeSrc":"12968:2:20","nodeType":"YulLiteral","src":"12968:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12953:3:20","nodeType":"YulIdentifier","src":"12953:3:20"},"nativeSrc":"12953:18:20","nodeType":"YulFunctionCall","src":"12953:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12900:43:20","nodeType":"YulIdentifier","src":"12900:43:20"},"nativeSrc":"12900:72:20","nodeType":"YulFunctionCall","src":"12900:72:20"},"nativeSrc":"12900:72:20","nodeType":"YulExpressionStatement","src":"12900:72:20"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"12647:332:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12737:9:20","nodeType":"YulTypedName","src":"12737:9:20","type":""},{"name":"value1","nativeSrc":"12749:6:20","nodeType":"YulTypedName","src":"12749:6:20","type":""},{"name":"value0","nativeSrc":"12757:6:20","nodeType":"YulTypedName","src":"12757:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12768:4:20","nodeType":"YulTypedName","src":"12768:4:20","type":""}],"src":"12647:332:20"},{"body":{"nativeSrc":"13081:73:20","nodeType":"YulBlock","src":"13081:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13098:3:20","nodeType":"YulIdentifier","src":"13098:3:20"},{"name":"length","nativeSrc":"13103:6:20","nodeType":"YulIdentifier","src":"13103:6:20"}],"functionName":{"name":"mstore","nativeSrc":"13091:6:20","nodeType":"YulIdentifier","src":"13091:6:20"},"nativeSrc":"13091:19:20","nodeType":"YulFunctionCall","src":"13091:19:20"},"nativeSrc":"13091:19:20","nodeType":"YulExpressionStatement","src":"13091:19:20"},{"nativeSrc":"13119:29:20","nodeType":"YulAssignment","src":"13119:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"13138:3:20","nodeType":"YulIdentifier","src":"13138:3:20"},{"kind":"number","nativeSrc":"13143:4:20","nodeType":"YulLiteral","src":"13143:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13134:3:20","nodeType":"YulIdentifier","src":"13134:3:20"},"nativeSrc":"13134:14:20","nodeType":"YulFunctionCall","src":"13134:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"13119:11:20","nodeType":"YulIdentifier","src":"13119:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12985:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13053:3:20","nodeType":"YulTypedName","src":"13053:3:20","type":""},{"name":"length","nativeSrc":"13058:6:20","nodeType":"YulTypedName","src":"13058:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"13069:11:20","nodeType":"YulTypedName","src":"13069:11:20","type":""}],"src":"12985:169:20"},{"body":{"nativeSrc":"13266:65:20","nodeType":"YulBlock","src":"13266:65:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13288:6:20","nodeType":"YulIdentifier","src":"13288:6:20"},{"kind":"number","nativeSrc":"13296:1:20","nodeType":"YulLiteral","src":"13296:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13284:3:20","nodeType":"YulIdentifier","src":"13284:3:20"},"nativeSrc":"13284:14:20","nodeType":"YulFunctionCall","src":"13284:14:20"},{"hexValue":"53656e646572206e6f7420456e747279506f696e74","kind":"string","nativeSrc":"13300:23:20","nodeType":"YulLiteral","src":"13300:23:20","type":"","value":"Sender not EntryPoint"}],"functionName":{"name":"mstore","nativeSrc":"13277:6:20","nodeType":"YulIdentifier","src":"13277:6:20"},"nativeSrc":"13277:47:20","nodeType":"YulFunctionCall","src":"13277:47:20"},"nativeSrc":"13277:47:20","nodeType":"YulExpressionStatement","src":"13277:47:20"}]},"name":"store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","nativeSrc":"13160:171:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"13258:6:20","nodeType":"YulTypedName","src":"13258:6:20","type":""}],"src":"13160:171:20"},{"body":{"nativeSrc":"13483:220:20","nodeType":"YulBlock","src":"13483:220:20","statements":[{"nativeSrc":"13493:74:20","nodeType":"YulAssignment","src":"13493:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"13559:3:20","nodeType":"YulIdentifier","src":"13559:3:20"},{"kind":"number","nativeSrc":"13564:2:20","nodeType":"YulLiteral","src":"13564:2:20","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"13500:58:20","nodeType":"YulIdentifier","src":"13500:58:20"},"nativeSrc":"13500:67:20","nodeType":"YulFunctionCall","src":"13500:67:20"},"variableNames":[{"name":"pos","nativeSrc":"13493:3:20","nodeType":"YulIdentifier","src":"13493:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"13665:3:20","nodeType":"YulIdentifier","src":"13665:3:20"}],"functionName":{"name":"store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","nativeSrc":"13576:88:20","nodeType":"YulIdentifier","src":"13576:88:20"},"nativeSrc":"13576:93:20","nodeType":"YulFunctionCall","src":"13576:93:20"},"nativeSrc":"13576:93:20","nodeType":"YulExpressionStatement","src":"13576:93:20"},{"nativeSrc":"13678:19:20","nodeType":"YulAssignment","src":"13678:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"13689:3:20","nodeType":"YulIdentifier","src":"13689:3:20"},{"kind":"number","nativeSrc":"13694:2:20","nodeType":"YulLiteral","src":"13694:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13685:3:20","nodeType":"YulIdentifier","src":"13685:3:20"},"nativeSrc":"13685:12:20","nodeType":"YulFunctionCall","src":"13685:12:20"},"variableNames":[{"name":"end","nativeSrc":"13678:3:20","nodeType":"YulIdentifier","src":"13678:3:20"}]}]},"name":"abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack","nativeSrc":"13337:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13471:3:20","nodeType":"YulTypedName","src":"13471:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13479:3:20","nodeType":"YulTypedName","src":"13479:3:20","type":""}],"src":"13337:366:20"},{"body":{"nativeSrc":"13880:248:20","nodeType":"YulBlock","src":"13880:248:20","statements":[{"nativeSrc":"13890:26:20","nodeType":"YulAssignment","src":"13890:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"13902:9:20","nodeType":"YulIdentifier","src":"13902:9:20"},{"kind":"number","nativeSrc":"13913:2:20","nodeType":"YulLiteral","src":"13913:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13898:3:20","nodeType":"YulIdentifier","src":"13898:3:20"},"nativeSrc":"13898:18:20","nodeType":"YulFunctionCall","src":"13898:18:20"},"variableNames":[{"name":"tail","nativeSrc":"13890:4:20","nodeType":"YulIdentifier","src":"13890:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13937:9:20","nodeType":"YulIdentifier","src":"13937:9:20"},{"kind":"number","nativeSrc":"13948:1:20","nodeType":"YulLiteral","src":"13948:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13933:3:20","nodeType":"YulIdentifier","src":"13933:3:20"},"nativeSrc":"13933:17:20","nodeType":"YulFunctionCall","src":"13933:17:20"},{"arguments":[{"name":"tail","nativeSrc":"13956:4:20","nodeType":"YulIdentifier","src":"13956:4:20"},{"name":"headStart","nativeSrc":"13962:9:20","nodeType":"YulIdentifier","src":"13962:9:20"}],"functionName":{"name":"sub","nativeSrc":"13952:3:20","nodeType":"YulIdentifier","src":"13952:3:20"},"nativeSrc":"13952:20:20","nodeType":"YulFunctionCall","src":"13952:20:20"}],"functionName":{"name":"mstore","nativeSrc":"13926:6:20","nodeType":"YulIdentifier","src":"13926:6:20"},"nativeSrc":"13926:47:20","nodeType":"YulFunctionCall","src":"13926:47:20"},"nativeSrc":"13926:47:20","nodeType":"YulExpressionStatement","src":"13926:47:20"},{"nativeSrc":"13982:139:20","nodeType":"YulAssignment","src":"13982:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"14116:4:20","nodeType":"YulIdentifier","src":"14116:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack","nativeSrc":"13990:124:20","nodeType":"YulIdentifier","src":"13990:124:20"},"nativeSrc":"13990:131:20","nodeType":"YulFunctionCall","src":"13990:131:20"},"variableNames":[{"name":"tail","nativeSrc":"13982:4:20","nodeType":"YulIdentifier","src":"13982:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13709:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13860:9:20","nodeType":"YulTypedName","src":"13860:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13875:4:20","nodeType":"YulTypedName","src":"13875:4:20","type":""}],"src":"13709:419:20"},{"body":{"nativeSrc":"14162:152:20","nodeType":"YulBlock","src":"14162:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14179:1:20","nodeType":"YulLiteral","src":"14179:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"14182:77:20","nodeType":"YulLiteral","src":"14182:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14172:6:20","nodeType":"YulIdentifier","src":"14172:6:20"},"nativeSrc":"14172:88:20","nodeType":"YulFunctionCall","src":"14172:88:20"},"nativeSrc":"14172:88:20","nodeType":"YulExpressionStatement","src":"14172:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14276:1:20","nodeType":"YulLiteral","src":"14276:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"14279:4:20","nodeType":"YulLiteral","src":"14279:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"14269:6:20","nodeType":"YulIdentifier","src":"14269:6:20"},"nativeSrc":"14269:15:20","nodeType":"YulFunctionCall","src":"14269:15:20"},"nativeSrc":"14269:15:20","nodeType":"YulExpressionStatement","src":"14269:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14300:1:20","nodeType":"YulLiteral","src":"14300:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"14303:4:20","nodeType":"YulLiteral","src":"14303:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14293:6:20","nodeType":"YulIdentifier","src":"14293:6:20"},"nativeSrc":"14293:15:20","nodeType":"YulFunctionCall","src":"14293:15:20"},"nativeSrc":"14293:15:20","nodeType":"YulExpressionStatement","src":"14293:15:20"}]},"name":"panic_error_0x11","nativeSrc":"14134:180:20","nodeType":"YulFunctionDefinition","src":"14134:180:20"},{"body":{"nativeSrc":"14368:362:20","nodeType":"YulBlock","src":"14368:362:20","statements":[{"nativeSrc":"14378:25:20","nodeType":"YulAssignment","src":"14378:25:20","value":{"arguments":[{"name":"x","nativeSrc":"14401:1:20","nodeType":"YulIdentifier","src":"14401:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14383:17:20","nodeType":"YulIdentifier","src":"14383:17:20"},"nativeSrc":"14383:20:20","nodeType":"YulFunctionCall","src":"14383:20:20"},"variableNames":[{"name":"x","nativeSrc":"14378:1:20","nodeType":"YulIdentifier","src":"14378:1:20"}]},{"nativeSrc":"14412:25:20","nodeType":"YulAssignment","src":"14412:25:20","value":{"arguments":[{"name":"y","nativeSrc":"14435:1:20","nodeType":"YulIdentifier","src":"14435:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14417:17:20","nodeType":"YulIdentifier","src":"14417:17:20"},"nativeSrc":"14417:20:20","nodeType":"YulFunctionCall","src":"14417:20:20"},"variableNames":[{"name":"y","nativeSrc":"14412:1:20","nodeType":"YulIdentifier","src":"14412:1:20"}]},{"nativeSrc":"14446:28:20","nodeType":"YulVariableDeclaration","src":"14446:28:20","value":{"arguments":[{"name":"x","nativeSrc":"14469:1:20","nodeType":"YulIdentifier","src":"14469:1:20"},{"name":"y","nativeSrc":"14472:1:20","nodeType":"YulIdentifier","src":"14472:1:20"}],"functionName":{"name":"mul","nativeSrc":"14465:3:20","nodeType":"YulIdentifier","src":"14465:3:20"},"nativeSrc":"14465:9:20","nodeType":"YulFunctionCall","src":"14465:9:20"},"variables":[{"name":"product_raw","nativeSrc":"14450:11:20","nodeType":"YulTypedName","src":"14450:11:20","type":""}]},{"nativeSrc":"14483:41:20","nodeType":"YulAssignment","src":"14483:41:20","value":{"arguments":[{"name":"product_raw","nativeSrc":"14512:11:20","nodeType":"YulIdentifier","src":"14512:11:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14494:17:20","nodeType":"YulIdentifier","src":"14494:17:20"},"nativeSrc":"14494:30:20","nodeType":"YulFunctionCall","src":"14494:30:20"},"variableNames":[{"name":"product","nativeSrc":"14483:7:20","nodeType":"YulIdentifier","src":"14483:7:20"}]},{"body":{"nativeSrc":"14701:22:20","nodeType":"YulBlock","src":"14701:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"14703:16:20","nodeType":"YulIdentifier","src":"14703:16:20"},"nativeSrc":"14703:18:20","nodeType":"YulFunctionCall","src":"14703:18:20"},"nativeSrc":"14703:18:20","nodeType":"YulExpressionStatement","src":"14703:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"14634:1:20","nodeType":"YulIdentifier","src":"14634:1:20"}],"functionName":{"name":"iszero","nativeSrc":"14627:6:20","nodeType":"YulIdentifier","src":"14627:6:20"},"nativeSrc":"14627:9:20","nodeType":"YulFunctionCall","src":"14627:9:20"},{"arguments":[{"name":"y","nativeSrc":"14657:1:20","nodeType":"YulIdentifier","src":"14657:1:20"},{"arguments":[{"name":"product","nativeSrc":"14664:7:20","nodeType":"YulIdentifier","src":"14664:7:20"},{"name":"x","nativeSrc":"14673:1:20","nodeType":"YulIdentifier","src":"14673:1:20"}],"functionName":{"name":"div","nativeSrc":"14660:3:20","nodeType":"YulIdentifier","src":"14660:3:20"},"nativeSrc":"14660:15:20","nodeType":"YulFunctionCall","src":"14660:15:20"}],"functionName":{"name":"eq","nativeSrc":"14654:2:20","nodeType":"YulIdentifier","src":"14654:2:20"},"nativeSrc":"14654:22:20","nodeType":"YulFunctionCall","src":"14654:22:20"}],"functionName":{"name":"or","nativeSrc":"14607:2:20","nodeType":"YulIdentifier","src":"14607:2:20"},"nativeSrc":"14607:83:20","nodeType":"YulFunctionCall","src":"14607:83:20"}],"functionName":{"name":"iszero","nativeSrc":"14587:6:20","nodeType":"YulIdentifier","src":"14587:6:20"},"nativeSrc":"14587:113:20","nodeType":"YulFunctionCall","src":"14587:113:20"},"nativeSrc":"14584:139:20","nodeType":"YulIf","src":"14584:139:20"}]},"name":"checked_mul_t_uint256","nativeSrc":"14320:410:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"14351:1:20","nodeType":"YulTypedName","src":"14351:1:20","type":""},{"name":"y","nativeSrc":"14354:1:20","nodeType":"YulTypedName","src":"14354:1:20","type":""}],"returnVariables":[{"name":"product","nativeSrc":"14360:7:20","nodeType":"YulTypedName","src":"14360:7:20","type":""}],"src":"14320:410:20"},{"body":{"nativeSrc":"14862:206:20","nodeType":"YulBlock","src":"14862:206:20","statements":[{"nativeSrc":"14872:26:20","nodeType":"YulAssignment","src":"14872:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"14884:9:20","nodeType":"YulIdentifier","src":"14884:9:20"},{"kind":"number","nativeSrc":"14895:2:20","nodeType":"YulLiteral","src":"14895:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14880:3:20","nodeType":"YulIdentifier","src":"14880:3:20"},"nativeSrc":"14880:18:20","nodeType":"YulFunctionCall","src":"14880:18:20"},"variableNames":[{"name":"tail","nativeSrc":"14872:4:20","nodeType":"YulIdentifier","src":"14872:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14952:6:20","nodeType":"YulIdentifier","src":"14952:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"14965:9:20","nodeType":"YulIdentifier","src":"14965:9:20"},{"kind":"number","nativeSrc":"14976:1:20","nodeType":"YulLiteral","src":"14976:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14961:3:20","nodeType":"YulIdentifier","src":"14961:3:20"},"nativeSrc":"14961:17:20","nodeType":"YulFunctionCall","src":"14961:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14908:43:20","nodeType":"YulIdentifier","src":"14908:43:20"},"nativeSrc":"14908:71:20","nodeType":"YulFunctionCall","src":"14908:71:20"},"nativeSrc":"14908:71:20","nodeType":"YulExpressionStatement","src":"14908:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15033:6:20","nodeType":"YulIdentifier","src":"15033:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"15046:9:20","nodeType":"YulIdentifier","src":"15046:9:20"},{"kind":"number","nativeSrc":"15057:2:20","nodeType":"YulLiteral","src":"15057:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15042:3:20","nodeType":"YulIdentifier","src":"15042:3:20"},"nativeSrc":"15042:18:20","nodeType":"YulFunctionCall","src":"15042:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14989:43:20","nodeType":"YulIdentifier","src":"14989:43:20"},"nativeSrc":"14989:72:20","nodeType":"YulFunctionCall","src":"14989:72:20"},"nativeSrc":"14989:72:20","nodeType":"YulExpressionStatement","src":"14989:72:20"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"14736:332:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14826:9:20","nodeType":"YulTypedName","src":"14826:9:20","type":""},{"name":"value1","nativeSrc":"14838:6:20","nodeType":"YulTypedName","src":"14838:6:20","type":""},{"name":"value0","nativeSrc":"14846:6:20","nodeType":"YulTypedName","src":"14846:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14857:4:20","nodeType":"YulTypedName","src":"14857:4:20","type":""}],"src":"14736:332:20"},{"body":{"nativeSrc":"15200:206:20","nodeType":"YulBlock","src":"15200:206:20","statements":[{"nativeSrc":"15210:26:20","nodeType":"YulAssignment","src":"15210:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"15222:9:20","nodeType":"YulIdentifier","src":"15222:9:20"},{"kind":"number","nativeSrc":"15233:2:20","nodeType":"YulLiteral","src":"15233:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15218:3:20","nodeType":"YulIdentifier","src":"15218:3:20"},"nativeSrc":"15218:18:20","nodeType":"YulFunctionCall","src":"15218:18:20"},"variableNames":[{"name":"tail","nativeSrc":"15210:4:20","nodeType":"YulIdentifier","src":"15210:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15290:6:20","nodeType":"YulIdentifier","src":"15290:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"15303:9:20","nodeType":"YulIdentifier","src":"15303:9:20"},{"kind":"number","nativeSrc":"15314:1:20","nodeType":"YulLiteral","src":"15314:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15299:3:20","nodeType":"YulIdentifier","src":"15299:3:20"},"nativeSrc":"15299:17:20","nodeType":"YulFunctionCall","src":"15299:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15246:43:20","nodeType":"YulIdentifier","src":"15246:43:20"},"nativeSrc":"15246:71:20","nodeType":"YulFunctionCall","src":"15246:71:20"},"nativeSrc":"15246:71:20","nodeType":"YulExpressionStatement","src":"15246:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15371:6:20","nodeType":"YulIdentifier","src":"15371:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"15384:9:20","nodeType":"YulIdentifier","src":"15384:9:20"},{"kind":"number","nativeSrc":"15395:2:20","nodeType":"YulLiteral","src":"15395:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15380:3:20","nodeType":"YulIdentifier","src":"15380:3:20"},"nativeSrc":"15380:18:20","nodeType":"YulFunctionCall","src":"15380:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15327:43:20","nodeType":"YulIdentifier","src":"15327:43:20"},"nativeSrc":"15327:72:20","nodeType":"YulFunctionCall","src":"15327:72:20"},"nativeSrc":"15327:72:20","nodeType":"YulExpressionStatement","src":"15327:72:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"15074:332:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15164:9:20","nodeType":"YulTypedName","src":"15164:9:20","type":""},{"name":"value1","nativeSrc":"15176:6:20","nodeType":"YulTypedName","src":"15176:6:20","type":""},{"name":"value0","nativeSrc":"15184:6:20","nodeType":"YulTypedName","src":"15184:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15195:4:20","nodeType":"YulTypedName","src":"15195:4:20","type":""}],"src":"15074:332:20"},{"body":{"nativeSrc":"15566:288:20","nodeType":"YulBlock","src":"15566:288:20","statements":[{"nativeSrc":"15576:26:20","nodeType":"YulAssignment","src":"15576:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"15588:9:20","nodeType":"YulIdentifier","src":"15588:9:20"},{"kind":"number","nativeSrc":"15599:2:20","nodeType":"YulLiteral","src":"15599:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15584:3:20","nodeType":"YulIdentifier","src":"15584:3:20"},"nativeSrc":"15584:18:20","nodeType":"YulFunctionCall","src":"15584:18:20"},"variableNames":[{"name":"tail","nativeSrc":"15576:4:20","nodeType":"YulIdentifier","src":"15576:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15656:6:20","nodeType":"YulIdentifier","src":"15656:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"15669:9:20","nodeType":"YulIdentifier","src":"15669:9:20"},{"kind":"number","nativeSrc":"15680:1:20","nodeType":"YulLiteral","src":"15680:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15665:3:20","nodeType":"YulIdentifier","src":"15665:3:20"},"nativeSrc":"15665:17:20","nodeType":"YulFunctionCall","src":"15665:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15612:43:20","nodeType":"YulIdentifier","src":"15612:43:20"},"nativeSrc":"15612:71:20","nodeType":"YulFunctionCall","src":"15612:71:20"},"nativeSrc":"15612:71:20","nodeType":"YulExpressionStatement","src":"15612:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15737:6:20","nodeType":"YulIdentifier","src":"15737:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"15750:9:20","nodeType":"YulIdentifier","src":"15750:9:20"},{"kind":"number","nativeSrc":"15761:2:20","nodeType":"YulLiteral","src":"15761:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15746:3:20","nodeType":"YulIdentifier","src":"15746:3:20"},"nativeSrc":"15746:18:20","nodeType":"YulFunctionCall","src":"15746:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15693:43:20","nodeType":"YulIdentifier","src":"15693:43:20"},"nativeSrc":"15693:72:20","nodeType":"YulFunctionCall","src":"15693:72:20"},"nativeSrc":"15693:72:20","nodeType":"YulExpressionStatement","src":"15693:72:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15819:6:20","nodeType":"YulIdentifier","src":"15819:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"15832:9:20","nodeType":"YulIdentifier","src":"15832:9:20"},{"kind":"number","nativeSrc":"15843:2:20","nodeType":"YulLiteral","src":"15843:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15828:3:20","nodeType":"YulIdentifier","src":"15828:3:20"},"nativeSrc":"15828:18:20","nodeType":"YulFunctionCall","src":"15828:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15775:43:20","nodeType":"YulIdentifier","src":"15775:43:20"},"nativeSrc":"15775:72:20","nodeType":"YulFunctionCall","src":"15775:72:20"},"nativeSrc":"15775:72:20","nodeType":"YulExpressionStatement","src":"15775:72:20"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"15412:442:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15522:9:20","nodeType":"YulTypedName","src":"15522:9:20","type":""},{"name":"value2","nativeSrc":"15534:6:20","nodeType":"YulTypedName","src":"15534:6:20","type":""},{"name":"value1","nativeSrc":"15542:6:20","nodeType":"YulTypedName","src":"15542:6:20","type":""},{"name":"value0","nativeSrc":"15550:6:20","nodeType":"YulTypedName","src":"15550:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15561:4:20","nodeType":"YulTypedName","src":"15561:4:20","type":""}],"src":"15412:442:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct PackedUserOperation\n    function abi_decode_t_struct$_PackedUserOperation_$1215_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 288) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_struct$_PackedUserOperation_$1215_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_PackedUserOperation_$1215_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_enum$_PostOpMode_$1041(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_PostOpMode_$1041(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_PostOpMode_$1041(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_enum$_PostOpMode_$1041t_bytes_calldata_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_PostOpMode_$1041(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IEntryPoint_$1014_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IEntryPoint_$1014_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IEntryPoint_$1014_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IEntryPoint_$1014__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IEntryPoint_$1014_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IERC20_$1617_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1617_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1617_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1617__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1617_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender not EntryPoint\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"14":[{"length":32,"start":912},{"length":32,"start":1063},{"length":32,"start":1834},{"length":32,"start":1878},{"length":32,"start":2016},{"length":32,"start":2160},{"length":32,"start":2319},{"length":32,"start":2974}],"2137":[{"length":32,"start":1254},{"length":32,"start":1415},{"length":32,"start":2676},{"length":32,"start":3193},{"length":32,"start":3386},{"length":32,"start":3755}],"2139":[{"length":32,"start":1208},{"length":32,"start":3123},{"length":32,"start":3703}]},"linkReferences":{},"object":"6080604052600436106101025760003560e01c80638da5cb5b11610095578063c399ec8811610064578063c399ec88146102d2578063d0e30db0146102fd578063e30c397814610307578063f2fde38b14610332578063fc0c546a1461035b57610109565b80638da5cb5b1461023c578063b0d691fe14610267578063bb9fe6bf14610292578063c23a5cea146102a957610109565b806352b7512c116100d157806352b7512c146101a7578063715018a6146101e557806379ba5097146101fc5780637c627b211461021357610109565b80630396cb601461010e578063205c28781461012a5780632c4e722e1461015357806349df728c1461017e57610109565b3661010957005b600080fd5b61012860048036038101906101239190611177565b610386565b005b34801561013657600080fd5b50610151600480360381019061014c9190611238565b61041d565b005b34801561015f57600080fd5b506101686104b6565b6040516101759190611287565b60405180910390f35b34801561018a57600080fd5b506101a560048036038101906101a091906112e0565b6104da565b005b3480156101b357600080fd5b506101ce60048036038101906101c99190611368565b61061d565b6040516101dc929190611467565b60405180910390f35b3480156101f157600080fd5b506101fa610640565b005b34801561020857600080fd5b50610211610654565b005b34801561021f57600080fd5b5061023a60048036038101906102359190611521565b6106e3565b005b34801561024857600080fd5b506102516106ff565b60405161025e91906115b8565b60405180910390f35b34801561027357600080fd5b5061027c610728565b6040516102899190611632565b60405180910390f35b34801561029e57600080fd5b506102a761074c565b005b3480156102b557600080fd5b506102d060048036038101906102cb919061164d565b6107d6565b005b3480156102de57600080fd5b506102e761086c565b6040516102f49190611287565b60405180910390f35b61030561090d565b005b34801561031357600080fd5b5061031c61099b565b60405161032991906115b8565b60405180910390f35b34801561033e57600080fd5b50610359600480360381019061035491906112e0565b6109c5565b005b34801561036757600080fd5b50610370610a72565b60405161037d919061169b565b60405180910390f35b61038e610a96565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b81526004016103e891906116c5565b6000604051808303818588803b15801561040157600080fd5b505af1158015610415573d6000803e3d6000fd5b505050505050565b610425610a96565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b81526004016104809291906116ef565b600060405180830381600087803b15801561049a57600080fd5b505af11580156104ae573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6104e2610a96565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161053d91906115b8565b602060405180830381865afa15801561055a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057e919061172d565b90506105cb82827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610b1d9092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b826040516106119190611287565b60405180910390a25050565b60606000610629610b9c565b610634858585610c2c565b91509150935093915050565b610648610a96565b6106526000610e27565b565b600061065e610e58565b90508073ffffffffffffffffffffffffffffffffffffffff1661067f61099b565b73ffffffffffffffffffffffffffffffffffffffff16146106d757806040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106ce91906115b8565b60405180910390fd5b6106e081610e27565b50565b6106eb610b9c565b6106f88585858585610e60565b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b610754610a96565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107bc57600080fd5b505af11580156107d0573d6000803e3d6000fd5b50505050565b6107de610a96565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b8152600401610837919061175a565b600060405180830381600087803b15801561085157600080fd5b505af1158015610865573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108c791906115b8565b602060405180830381865afa1580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610908919061172d565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b815260040161096791906115b8565b6000604051808303818588803b15801561098057600080fd5b505af1158015610994573d6000803e3d6000fd5b5050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6109cd610a96565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16610a2d6106ff565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b7f000000000000000000000000000000000000000000000000000000000000000081565b610a9e610e58565b73ffffffffffffffffffffffffffffffffffffffff16610abc6106ff565b73ffffffffffffffffffffffffffffffffffffffff1614610b1b57610adf610e58565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b1291906115b8565b60405180910390fd5b565b610b97838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610b50929190611775565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f49565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c21906117fb565b60405180910390fd5b565b60606000807f000000000000000000000000000000000000000000000000000000000000000084610c5d919061184a565b90506000866000016020810190610c7491906112e0565b9050817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e83306040518363ffffffff1660e01b8152600401610cd292919061188c565b602060405180830381865afa158015610cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d13919061172d565b1015610d375760016040518060200160405280600081525090935093505050610e1f565b817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610d9191906115b8565b602060405180830381865afa158015610dae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd2919061172d565b1015610df65760016040518060200160405280600081525090935093505050610e1f565b80604051602001610e0791906115b8565b60405160208183030381529060405260009350935050505b935093915050565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055610e5581610feb565b50565b600033905090565b60008484810190610e71919061164d565b905060007f000000000000000000000000000000000000000000000000000000000000000084610ea1919061184a565b9050610ef08230837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166110af909392919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167fffd0b669a1dd6cd4e81d5fa668229de53f1912281efd7c8374dfc2208164962f8286604051610f389291906118b5565b60405180910390a250505050505050565b600080602060008451602086016000885af180610f6c576040513d6000823e3d81fd5b3d925060005191505060008214610f87576001811415610fa3565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b15610fe557836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610fdc91906115b8565b60405180910390fd5b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61112b848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016110e4939291906118de565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f49565b50505050565b600080fd5b600080fd5b600063ffffffff82169050919050565b6111548161113b565b811461115f57600080fd5b50565b6000813590506111718161114b565b92915050565b60006020828403121561118d5761118c611131565b5b600061119b84828501611162565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111cf826111a4565b9050919050565b6111df816111c4565b81146111ea57600080fd5b50565b6000813590506111fc816111d6565b92915050565b6000819050919050565b61121581611202565b811461122057600080fd5b50565b6000813590506112328161120c565b92915050565b6000806040838503121561124f5761124e611131565b5b600061125d858286016111ed565b925050602061126e85828601611223565b9150509250929050565b61128181611202565b82525050565b600060208201905061129c6000830184611278565b92915050565b60006112ad826111a4565b9050919050565b6112bd816112a2565b81146112c857600080fd5b50565b6000813590506112da816112b4565b92915050565b6000602082840312156112f6576112f5611131565b5b6000611304848285016112cb565b91505092915050565b600080fd5b600061012082840312156113295761132861130d565b5b81905092915050565b6000819050919050565b61134581611332565b811461135057600080fd5b50565b6000813590506113628161133c565b92915050565b60008060006060848603121561138157611380611131565b5b600084013567ffffffffffffffff81111561139f5761139e611136565b5b6113ab86828701611312565b93505060206113bc86828701611353565b92505060406113cd86828701611223565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156114115780820151818401526020810190506113f6565b60008484015250505050565b6000601f19601f8301169050919050565b6000611439826113d7565b61144381856113e2565b93506114538185602086016113f3565b61145c8161141d565b840191505092915050565b60006040820190508181036000830152611481818561142e565b90506114906020830184611278565b9392505050565b600381106114a457600080fd5b50565b6000813590506114b681611497565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126114e1576114e06114bc565b5b8235905067ffffffffffffffff8111156114fe576114fd6114c1565b5b60208301915083600182028301111561151a576115196114c6565b5b9250929050565b60008060008060006080868803121561153d5761153c611131565b5b600061154b888289016114a7565b955050602086013567ffffffffffffffff81111561156c5761156b611136565b5b611578888289016114cb565b9450945050604061158b88828901611223565b925050606061159c88828901611223565b9150509295509295909350565b6115b2816112a2565b82525050565b60006020820190506115cd60008301846115a9565b92915050565b6000819050919050565b60006115f86115f36115ee846111a4565b6115d3565b6111a4565b9050919050565b600061160a826115dd565b9050919050565b600061161c826115ff565b9050919050565b61162c81611611565b82525050565b60006020820190506116476000830184611623565b92915050565b60006020828403121561166357611662611131565b5b6000611671848285016111ed565b91505092915050565b6000611685826115ff565b9050919050565b6116958161167a565b82525050565b60006020820190506116b0600083018461168c565b92915050565b6116bf8161113b565b82525050565b60006020820190506116da60008301846116b6565b92915050565b6116e9816111c4565b82525050565b600060408201905061170460008301856116e0565b6117116020830184611278565b9392505050565b6000815190506117278161120c565b92915050565b60006020828403121561174357611742611131565b5b600061175184828501611718565b91505092915050565b600060208201905061176f60008301846116e0565b92915050565b600060408201905061178a60008301856115a9565b6117976020830184611278565b9392505050565b600082825260208201905092915050565b7f53656e646572206e6f7420456e747279506f696e740000000000000000000000600082015250565b60006117e560158361179e565b91506117f0826117af565b602082019050919050565b60006020820190508181036000830152611814816117d8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061185582611202565b915061186083611202565b925082820261186e81611202565b915082820484148315176118855761188461181b565b5b5092915050565b60006040820190506118a160008301856115a9565b6118ae60208301846115a9565b9392505050565b60006040820190506118ca6000830185611278565b6118d76020830184611278565b9392505050565b60006060820190506118f360008301866115a9565b61190060208301856115a9565b61190d6040830184611278565b94935050505056fea2646970667358221220c6fea247a2ecd6804be4709354213589d21982658aa02a30382e1602d78e2e1a64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x102 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC399EC88 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x35B JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xBB9FE6BF EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x2A9 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x52B7512C GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x52B7512C EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x7C627B21 EQ PUSH2 0x213 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x205C2878 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x49DF728C EQ PUSH2 0x17E JUMPI PUSH2 0x109 JUMP JUMPDEST CALLDATASIZE PUSH2 0x109 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP3 SWAP2 SWAP1 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x640 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x654 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x728 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A7 PUSH2 0x74C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x86C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x305 PUSH2 0x90D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x99B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH2 0x9C5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x370 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38E PUSH2 0xA96 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x396CB60 CALLVALUE DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x415 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x425 PUSH2 0xA96 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x480 SWAP3 SWAP2 SWAP1 PUSH2 0x16EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x4E2 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x55A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x172D JUMP JUMPDEST SWAP1 POP PUSH2 0x5CB DUP3 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B DUP3 PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x629 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x634 DUP6 DUP6 DUP6 PUSH2 0xC2C JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x648 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0x652 PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65E PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x67F PUSH2 0x99B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6D7 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E0 DUP2 PUSH2 0xE27 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6EB PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x6F8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xE60 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x754 PUSH2 0xA96 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBB9FE6BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7DE PUSH2 0xA96 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC23A5CEA DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x851 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x865 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C7 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x172D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x994 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9CD PUSH2 0xA96 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA2D PUSH2 0x6FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xA9E PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xABC PUSH2 0x6FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB1B JUMPI PUSH2 0xADF PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xB97 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB50 SWAP3 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF49 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC21 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH32 0x0 DUP5 PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC74 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST SWAP1 POP DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP4 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD2 SWAP3 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x172D JUMP JUMPDEST LT ISZERO PUSH2 0xD37 JUMPI PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP4 POP SWAP4 POP POP POP PUSH2 0xE1F JUMP JUMPDEST DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD91 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD2 SWAP2 SWAP1 PUSH2 0x172D JUMP JUMPDEST LT ISZERO PUSH2 0xDF6 JUMPI PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP4 POP SWAP4 POP POP POP PUSH2 0xE1F JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE07 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x0 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0xE55 DUP2 PUSH2 0xFEB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP2 ADD SWAP1 PUSH2 0xE71 SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 DUP5 PUSH2 0xEA1 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0xEF0 DUP3 ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10AF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFD0B669A1DD6CD4E81D5FA668229DE53F1912281EFD7C8374DFC2208164962F DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0xF38 SWAP3 SWAP2 SWAP1 PUSH2 0x18B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0xF6C JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0xF87 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xFE5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDC SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x112B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF49 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1154 DUP2 PUSH2 0x113B JUMP JUMPDEST DUP2 EQ PUSH2 0x115F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1171 DUP2 PUSH2 0x114B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x118D JUMPI PUSH2 0x118C PUSH2 0x1131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x119B DUP5 DUP3 DUP6 ADD PUSH2 0x1162 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CF DUP3 PUSH2 0x11A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11DF DUP2 PUSH2 0x11C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x11EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11FC DUP2 PUSH2 0x11D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1215 DUP2 PUSH2 0x1202 JUMP JUMPDEST DUP2 EQ PUSH2 0x1220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1232 DUP2 PUSH2 0x120C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x124F JUMPI PUSH2 0x124E PUSH2 0x1131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x125D DUP6 DUP3 DUP7 ADD PUSH2 0x11ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x126E DUP6 DUP3 DUP7 ADD PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1281 DUP2 PUSH2 0x1202 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x129C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1278 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AD DUP3 PUSH2 0x11A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BD DUP2 PUSH2 0x12A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x12C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12DA DUP2 PUSH2 0x12B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F6 JUMPI PUSH2 0x12F5 PUSH2 0x1131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1304 DUP5 DUP3 DUP6 ADD PUSH2 0x12CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1329 JUMPI PUSH2 0x1328 PUSH2 0x130D JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1345 DUP2 PUSH2 0x1332 JUMP JUMPDEST DUP2 EQ PUSH2 0x1350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1362 DUP2 PUSH2 0x133C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1381 JUMPI PUSH2 0x1380 PUSH2 0x1131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x139F JUMPI PUSH2 0x139E PUSH2 0x1136 JUMP JUMPDEST JUMPDEST PUSH2 0x13AB DUP7 DUP3 DUP8 ADD PUSH2 0x1312 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13BC DUP7 DUP3 DUP8 ADD PUSH2 0x1353 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13CD DUP7 DUP3 DUP8 ADD PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1411 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13F6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1439 DUP3 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x1443 DUP2 DUP6 PUSH2 0x13E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1453 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x145C DUP2 PUSH2 0x141D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1481 DUP2 DUP6 PUSH2 0x142E JUMP JUMPDEST SWAP1 POP PUSH2 0x1490 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1278 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x14A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14B6 DUP2 PUSH2 0x1497 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14E1 JUMPI PUSH2 0x14E0 PUSH2 0x14BC JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14FE JUMPI PUSH2 0x14FD PUSH2 0x14C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x151A JUMPI PUSH2 0x1519 PUSH2 0x14C6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x153D JUMPI PUSH2 0x153C PUSH2 0x1131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x154B DUP9 DUP3 DUP10 ADD PUSH2 0x14A7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x156C JUMPI PUSH2 0x156B PUSH2 0x1136 JUMP JUMPDEST JUMPDEST PUSH2 0x1578 DUP9 DUP3 DUP10 ADD PUSH2 0x14CB JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 PUSH2 0x158B DUP9 DUP3 DUP10 ADD PUSH2 0x1223 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x159C DUP9 DUP3 DUP10 ADD PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x15B2 DUP2 PUSH2 0x12A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15CD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F8 PUSH2 0x15F3 PUSH2 0x15EE DUP5 PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x11A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160A DUP3 PUSH2 0x15DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161C DUP3 PUSH2 0x15FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162C DUP2 PUSH2 0x1611 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1647 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1623 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1663 JUMPI PUSH2 0x1662 PUSH2 0x1131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1671 DUP5 DUP3 DUP6 ADD PUSH2 0x11ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1685 DUP3 PUSH2 0x15FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1695 DUP2 PUSH2 0x167A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x168C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16BF DUP2 PUSH2 0x113B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16E9 DUP2 PUSH2 0x11C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1704 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16E0 JUMP JUMPDEST PUSH2 0x1711 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1278 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1727 DUP2 PUSH2 0x120C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1743 JUMPI PUSH2 0x1742 PUSH2 0x1131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1751 DUP5 DUP3 DUP6 ADD PUSH2 0x1718 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x176F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x178A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15A9 JUMP JUMPDEST PUSH2 0x1797 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1278 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53656E646572206E6F7420456E747279506F696E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E5 PUSH1 0x15 DUP4 PUSH2 0x179E JUMP JUMPDEST SWAP2 POP PUSH2 0x17F0 DUP3 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1814 DUP2 PUSH2 0x17D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1855 DUP3 PUSH2 0x1202 JUMP JUMPDEST SWAP2 POP PUSH2 0x1860 DUP4 PUSH2 0x1202 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x186E DUP2 PUSH2 0x1202 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1885 JUMPI PUSH2 0x1884 PUSH2 0x181B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18A1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15A9 JUMP JUMPDEST PUSH2 0x18AE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18CA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x18D7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1278 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18F3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x15A9 JUMP JUMPDEST PUSH2 0x1900 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15A9 JUMP JUMPDEST PUSH2 0x190D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1278 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 INVALID LOG2 SELFBALANCE LOG2 0xEC 0xD6 DUP1 0x4B 0xE4 PUSH17 0x9354213589D21982658AA02A30382E1602 0xD7 DUP15 0x2E BYTE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"272:2138:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4666:140:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4270:171;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;425:29:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2132:196;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1435:321:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2293:101:10;;;;;;;;;;;;;:::i;:::-;;2244:229:11;;;;;;;;;;;;;:::i;:::-;;2232:278:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;550:39:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5159:83;;;;;;;;;;;;;:::i;:::-;;5463:133;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4889:111;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4001:104;;;:::i;:::-;;1232:99:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1649:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;359:29:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4666:140:0;1531:13:10;:11;:13::i;:::-;4745:10:0::1;:19;;;4772:9;4783:15;4745:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;4666:140:::0;:::o;4270:171::-;1531:13:10;:11;:13::i;:::-;4388:10:0::1;:21;;;4410:15;4427:6;4388:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4270:171:::0;;:::o;425:29:19:-;;;:::o;2132:196::-;1531:13:10;:11;:13::i;:::-;2198:11:19::1;2212:5;:15;;;2236:4;2212:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2198:44;;2253:27;2272:2;2276:3;2253:5;:18;;;;:27;;;;;:::i;:::-;2312:2;2296:24;;;2316:3;2296:24;;;;;;:::i;:::-;;;;;;;;2187:141;2132:196:::0;:::o;1435:321:0:-;1599:20;1621:22;1655:24;:22;:24::i;:::-;1696:53;1721:6;1729:10;1741:7;1696:24;:53::i;:::-;1689:60;;;;1435:321;;;;;;:::o;2293:101:10:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2244:229:11:-;2296:14;2313:12;:10;:12::i;:::-;2296:29;;2357:6;2339:24;;:14;:12;:14::i;:::-;:24;;;2335:96;;2413:6;2386:34;;;;;;;;;;;:::i;:::-;;;;;;;;2335:96;2440:26;2459:6;2440:18;:26::i;:::-;2286:187;2244:229::o;2232:278:0:-;2409:24;:22;:24::i;:::-;2443:60;2451:4;2457:7;;2466:13;2481:21;2443:7;:60::i;:::-;2232:278;;;;;:::o;1638:85:10:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;550:39:0:-;;;:::o;5159:83::-;1531:13:10;:11;:13::i;:::-;5211:10:0::1;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5159:83::o:0;5463:133::-;1531:13:10;:11;:13::i;:::-;5548:10:0::1;:24;;;5573:15;5548:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5463:133:::0;:::o;4889:111::-;4932:7;4958:10;:20;;;4987:4;4958:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4951:42;;4889:111;:::o;4001:104::-;4045:10;:20;;;4073:9;4092:4;4045:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4001:104::o;1232:99:11:-;1285:7;1311:13;;;;;;;;;;;1304:20;;1232:99;:::o;1649:178::-;1531:13:10;:11;:13::i;:::-;1754:8:11::1;1738:13;;:24;;;;;;;;;;;;;;;;;;1811:8;1777:43;;1802:7;:5;:7::i;:::-;1777:43;;;;;;;;;;;;1649:178:::0;:::o;359:29:19:-;;;:::o;1796:162:10:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;1219:160:16:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;5675:135:0:-;5766:10;5744:33;;:10;:33;;;5736:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;5675:135::o;935:689:19:-;1107:20;1129:22;1166:21;1208:4;1190:15;:22;;;;:::i;:::-;1166:46;;1223:14;1240:6;:13;;;;;;;;;;:::i;:::-;1223:30;;1349:13;1308:5;:15;;;1324:6;1340:4;1308:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;1304:120;;;1391:1;1379:14;;;;;;;;;;;;;;;;;;;;;1304:120;1464:13;1438:5;:15;;;1454:6;1438:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;1434:105;;;1506:1;1494:14;;;;;;;;;;;;;;;;;;;;;1434:105;1605:6;1594:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;1614:1;1586:30;;;;;;935:689;;;;;;;:::o;2011:153:11:-;2100:13;;2093:20;;;;;;;;;;;2123:34;2148:8;2123:24;:34::i;:::-;2011:153;:::o;656:96:17:-;709:7;735:10;728:17;;656:96;:::o;1685:400:19:-;1846:14;1874:7;;1863:30;;;;;;;:::i;:::-;1846:47;;1900:22;1941:4;1925:13;:20;;;;:::i;:::-;1900:45;;1954:61;1977:6;1993:4;2000:14;1954:5;:22;;;;:61;;;;;;:::i;:::-;2043:6;2029:52;;;2051:14;2067:13;2029:52;;;;;;;:::i;:::-;;;;;;;;1839:246;;1685:400;;;;;:::o;8370:720:16:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;2912:187:10:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1618:188:16:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;88:117:20:-;197:1;194;187:12;211:117;320:1;317;310:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:137::-;604:5;642:6;629:20;620:29;;658:32;684:5;658:32;:::i;:::-;559:137;;;;:::o;702:327::-;760:6;809:2;797:9;788:7;784:23;780:32;777:119;;;815:79;;:::i;:::-;777:119;935:1;960:52;1004:7;995:6;984:9;980:22;960:52;:::i;:::-;950:62;;906:116;702:327;;;;:::o;1035:126::-;1072:7;1112:42;1105:5;1101:54;1090:65;;1035:126;;;:::o;1167:104::-;1212:7;1241:24;1259:5;1241:24;:::i;:::-;1230:35;;1167:104;;;:::o;1277:138::-;1358:32;1384:5;1358:32;:::i;:::-;1351:5;1348:43;1338:71;;1405:1;1402;1395:12;1338:71;1277:138;:::o;1421:155::-;1475:5;1513:6;1500:20;1491:29;;1529:41;1564:5;1529:41;:::i;:::-;1421:155;;;;:::o;1582:77::-;1619:7;1648:5;1637:16;;1582:77;;;:::o;1665:122::-;1738:24;1756:5;1738:24;:::i;:::-;1731:5;1728:35;1718:63;;1777:1;1774;1767:12;1718:63;1665:122;:::o;1793:139::-;1839:5;1877:6;1864:20;1855:29;;1893:33;1920:5;1893:33;:::i;:::-;1793:139;;;;:::o;1938:490::-;2014:6;2022;2071:2;2059:9;2050:7;2046:23;2042:32;2039:119;;;2077:79;;:::i;:::-;2039:119;2197:1;2222:61;2275:7;2266:6;2255:9;2251:22;2222:61;:::i;:::-;2212:71;;2168:125;2332:2;2358:53;2403:7;2394:6;2383:9;2379:22;2358:53;:::i;:::-;2348:63;;2303:118;1938:490;;;;;:::o;2434:118::-;2521:24;2539:5;2521:24;:::i;:::-;2516:3;2509:37;2434:118;;:::o;2558:222::-;2651:4;2689:2;2678:9;2674:18;2666:26;;2702:71;2770:1;2759:9;2755:17;2746:6;2702:71;:::i;:::-;2558:222;;;;:::o;2786:96::-;2823:7;2852:24;2870:5;2852:24;:::i;:::-;2841:35;;2786:96;;;:::o;2888:122::-;2961:24;2979:5;2961:24;:::i;:::-;2954:5;2951:35;2941:63;;3000:1;2997;2990:12;2941:63;2888:122;:::o;3016:139::-;3062:5;3100:6;3087:20;3078:29;;3116:33;3143:5;3116:33;:::i;:::-;3016:139;;;;:::o;3161:329::-;3220:6;3269:2;3257:9;3248:7;3244:23;3240:32;3237:119;;;3275:79;;:::i;:::-;3237:119;3395:1;3420:53;3465:7;3456:6;3445:9;3441:22;3420:53;:::i;:::-;3410:63;;3366:117;3161:329;;;;:::o;3496:117::-;3605:1;3602;3595:12;3653:244;3738:5;3779:3;3770:6;3765:3;3761:16;3757:26;3754:113;;;3786:79;;:::i;:::-;3754:113;3885:6;3876:15;;3653:244;;;;:::o;3903:77::-;3940:7;3969:5;3958:16;;3903:77;;;:::o;3986:122::-;4059:24;4077:5;4059:24;:::i;:::-;4052:5;4049:35;4039:63;;4098:1;4095;4088:12;4039:63;3986:122;:::o;4114:139::-;4160:5;4198:6;4185:20;4176:29;;4214:33;4241:5;4214:33;:::i;:::-;4114:139;;;;:::o;4259:857::-;4375:6;4383;4391;4440:2;4428:9;4419:7;4415:23;4411:32;4408:119;;;4446:79;;:::i;:::-;4408:119;4594:1;4583:9;4579:17;4566:31;4624:18;4616:6;4613:30;4610:117;;;4646:79;;:::i;:::-;4610:117;4751:92;4835:7;4826:6;4815:9;4811:22;4751:92;:::i;:::-;4741:102;;4537:316;4892:2;4918:53;4963:7;4954:6;4943:9;4939:22;4918:53;:::i;:::-;4908:63;;4863:118;5020:2;5046:53;5091:7;5082:6;5071:9;5067:22;5046:53;:::i;:::-;5036:63;;4991:118;4259:857;;;;;:::o;5122:98::-;5173:6;5207:5;5201:12;5191:22;;5122:98;;;:::o;5226:168::-;5309:11;5343:6;5338:3;5331:19;5383:4;5378:3;5374:14;5359:29;;5226:168;;;;:::o;5400:248::-;5482:1;5492:113;5506:6;5503:1;5500:13;5492:113;;;5591:1;5586:3;5582:11;5576:18;5572:1;5567:3;5563:11;5556:39;5528:2;5525:1;5521:10;5516:15;;5492:113;;;5639:1;5630:6;5625:3;5621:16;5614:27;5462:186;5400:248;;;:::o;5654:102::-;5695:6;5746:2;5742:7;5737:2;5730:5;5726:14;5722:28;5712:38;;5654:102;;;:::o;5762:373::-;5848:3;5876:38;5908:5;5876:38;:::i;:::-;5930:70;5993:6;5988:3;5930:70;:::i;:::-;5923:77;;6009:65;6067:6;6062:3;6055:4;6048:5;6044:16;6009:65;:::i;:::-;6099:29;6121:6;6099:29;:::i;:::-;6094:3;6090:39;6083:46;;5852:283;5762:373;;;;:::o;6141:419::-;6280:4;6318:2;6307:9;6303:18;6295:26;;6367:9;6361:4;6357:20;6353:1;6342:9;6338:17;6331:47;6395:76;6466:4;6457:6;6395:76;:::i;:::-;6387:84;;6481:72;6549:2;6538:9;6534:18;6525:6;6481:72;:::i;:::-;6141:419;;;;;:::o;6566:114::-;6654:1;6647:5;6644:12;6634:40;;6670:1;6667;6660:12;6634:40;6566:114;:::o;6686:169::-;6747:5;6785:6;6772:20;6763:29;;6801:48;6843:5;6801:48;:::i;:::-;6686:169;;;;:::o;6861:117::-;6970:1;6967;6960:12;6984:117;7093:1;7090;7083:12;7107:117;7216:1;7213;7206:12;7243:552;7300:8;7310:6;7360:3;7353:4;7345:6;7341:17;7337:27;7327:122;;7368:79;;:::i;:::-;7327:122;7481:6;7468:20;7458:30;;7511:18;7503:6;7500:30;7497:117;;;7533:79;;:::i;:::-;7497:117;7647:4;7639:6;7635:17;7623:29;;7701:3;7693:4;7685:6;7681:17;7671:8;7667:32;7664:41;7661:128;;;7708:79;;:::i;:::-;7661:128;7243:552;;;;;:::o;7801:993::-;7913:6;7921;7929;7937;7945;7994:3;7982:9;7973:7;7969:23;7965:33;7962:120;;;8001:79;;:::i;:::-;7962:120;8121:1;8146:68;8206:7;8197:6;8186:9;8182:22;8146:68;:::i;:::-;8136:78;;8092:132;8291:2;8280:9;8276:18;8263:32;8322:18;8314:6;8311:30;8308:117;;;8344:79;;:::i;:::-;8308:117;8457:64;8513:7;8504:6;8493:9;8489:22;8457:64;:::i;:::-;8439:82;;;;8234:297;8570:2;8596:53;8641:7;8632:6;8621:9;8617:22;8596:53;:::i;:::-;8586:63;;8541:118;8698:2;8724:53;8769:7;8760:6;8749:9;8745:22;8724:53;:::i;:::-;8714:63;;8669:118;7801:993;;;;;;;;:::o;8800:118::-;8887:24;8905:5;8887:24;:::i;:::-;8882:3;8875:37;8800:118;;:::o;8924:222::-;9017:4;9055:2;9044:9;9040:18;9032:26;;9068:71;9136:1;9125:9;9121:17;9112:6;9068:71;:::i;:::-;8924:222;;;;:::o;9152:60::-;9180:3;9201:5;9194:12;;9152:60;;;:::o;9218:142::-;9268:9;9301:53;9319:34;9328:24;9346:5;9328:24;:::i;:::-;9319:34;:::i;:::-;9301:53;:::i;:::-;9288:66;;9218:142;;;:::o;9366:126::-;9416:9;9449:37;9480:5;9449:37;:::i;:::-;9436:50;;9366:126;;;:::o;9498:146::-;9568:9;9601:37;9632:5;9601:37;:::i;:::-;9588:50;;9498:146;;;:::o;9650:171::-;9757:57;9808:5;9757:57;:::i;:::-;9752:3;9745:70;9650:171;;:::o;9827:262::-;9940:4;9978:2;9967:9;9963:18;9955:26;;9991:91;10079:1;10068:9;10064:17;10055:6;9991:91;:::i;:::-;9827:262;;;;:::o;10095:345::-;10162:6;10211:2;10199:9;10190:7;10186:23;10182:32;10179:119;;;10217:79;;:::i;:::-;10179:119;10337:1;10362:61;10415:7;10406:6;10395:9;10391:22;10362:61;:::i;:::-;10352:71;;10308:125;10095:345;;;;:::o;10446:141::-;10511:9;10544:37;10575:5;10544:37;:::i;:::-;10531:50;;10446:141;;;:::o;10593:161::-;10695:52;10741:5;10695:52;:::i;:::-;10690:3;10683:65;10593:161;;:::o;10760:252::-;10868:4;10906:2;10895:9;10891:18;10883:26;;10919:86;11002:1;10991:9;10987:17;10978:6;10919:86;:::i;:::-;10760:252;;;;:::o;11018:115::-;11103:23;11120:5;11103:23;:::i;:::-;11098:3;11091:36;11018:115;;:::o;11139:218::-;11230:4;11268:2;11257:9;11253:18;11245:26;;11281:69;11347:1;11336:9;11332:17;11323:6;11281:69;:::i;:::-;11139:218;;;;:::o;11363:142::-;11466:32;11492:5;11466:32;:::i;:::-;11461:3;11454:45;11363:142;;:::o;11511:364::-;11648:4;11686:2;11675:9;11671:18;11663:26;;11699:87;11783:1;11772:9;11768:17;11759:6;11699:87;:::i;:::-;11796:72;11864:2;11853:9;11849:18;11840:6;11796:72;:::i;:::-;11511:364;;;;;:::o;11881:143::-;11938:5;11969:6;11963:13;11954:22;;11985:33;12012:5;11985:33;:::i;:::-;11881:143;;;;:::o;12030:351::-;12100:6;12149:2;12137:9;12128:7;12124:23;12120:32;12117:119;;;12155:79;;:::i;:::-;12117:119;12275:1;12300:64;12356:7;12347:6;12336:9;12332:22;12300:64;:::i;:::-;12290:74;;12246:128;12030:351;;;;:::o;12387:254::-;12496:4;12534:2;12523:9;12519:18;12511:26;;12547:87;12631:1;12620:9;12616:17;12607:6;12547:87;:::i;:::-;12387:254;;;;:::o;12647:332::-;12768:4;12806:2;12795:9;12791:18;12783:26;;12819:71;12887:1;12876:9;12872:17;12863:6;12819:71;:::i;:::-;12900:72;12968:2;12957:9;12953:18;12944:6;12900:72;:::i;:::-;12647:332;;;;;:::o;12985:169::-;13069:11;13103:6;13098:3;13091:19;13143:4;13138:3;13134:14;13119:29;;12985:169;;;;:::o;13160:171::-;13300:23;13296:1;13288:6;13284:14;13277:47;13160:171;:::o;13337:366::-;13479:3;13500:67;13564:2;13559:3;13500:67;:::i;:::-;13493:74;;13576:93;13665:3;13576:93;:::i;:::-;13694:2;13689:3;13685:12;13678:19;;13337:366;;;:::o;13709:419::-;13875:4;13913:2;13902:9;13898:18;13890:26;;13962:9;13956:4;13952:20;13948:1;13937:9;13933:17;13926:47;13990:131;14116:4;13990:131;:::i;:::-;13982:139;;13709:419;;;:::o;14134:180::-;14182:77;14179:1;14172:88;14279:4;14276:1;14269:15;14303:4;14300:1;14293:15;14320:410;14360:7;14383:20;14401:1;14383:20;:::i;:::-;14378:25;;14417:20;14435:1;14417:20;:::i;:::-;14412:25;;14472:1;14469;14465:9;14494:30;14512:11;14494:30;:::i;:::-;14483:41;;14673:1;14664:7;14660:15;14657:1;14654:22;14634:1;14627:9;14607:83;14584:139;;14703:18;;:::i;:::-;14584:139;14368:362;14320:410;;;;:::o;14736:332::-;14857:4;14895:2;14884:9;14880:18;14872:26;;14908:71;14976:1;14965:9;14961:17;14952:6;14908:71;:::i;:::-;14989:72;15057:2;15046:9;15042:18;15033:6;14989:72;:::i;:::-;14736:332;;;;;:::o;15074:::-;15195:4;15233:2;15222:9;15218:18;15210:26;;15246:71;15314:1;15303:9;15299:17;15290:6;15246:71;:::i;:::-;15327:72;15395:2;15384:9;15380:18;15371:6;15327:72;:::i;:::-;15074:332;;;;;:::o;15412:442::-;15561:4;15599:2;15588:9;15584:18;15576:26;;15612:71;15680:1;15669:9;15665:17;15656:6;15612:71;:::i;:::-;15693:72;15761:2;15750:9;15746:18;15737:6;15693:72;:::i;:::-;15775;15843:2;15832:9;15828:18;15819:6;15775:72;:::i;:::-;15412:442;;;;;;:::o"},"methodIdentifiers":{"acceptOwnership()":"79ba5097","addStake(uint32)":"0396cb60","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","owner()":"8da5cb5b","pendingOwner()":"e30c3978","postOp(uint8,bytes,uint256,uint256)":"7c627b21","rate()":"2c4e722e","renounceOwnership()":"715018a6","token()":"fc0c546a","transferOwnership(address)":"f2fde38b","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878","withdrawTokens(address)":"49df728c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"name\":\"TokensCharged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual cost of gas used so far (without this postOp call).\",\"actualUserOpFeePerGas\":\"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp().\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \\\"indefinitely\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FixedRatePaymaster.sol\":\"FixedRatePaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x133b7392daa1fc943d834b7d7721c8dd76327df47ae93f53de5c3a0fa79d9741\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c55d47733ff9b5fb9f37056cfd17b96c4ec2bf3c744072aa577fd4abd4b14b\",\"dweb:/ipfs/QmZN6t9t388kbFnw8sZTitU94YE6xCBcmcqt9qj98tpCnm\"]},\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x42b948af5fa14a96149611595df1186800c7558b2de8762e4b45a7c45c16f65e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://737a7908131ece48a5df1faaa3d0be79c42792379c27f5615dae6aa14cd68c2f\",\"dweb:/ipfs/QmPAxGMDxuek7XWSUVfZpvYE8bustfsjTDVDK8hmE88e1f\"]},\"@account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x2d3450fa3906422b6fdbbe7f2a2a9e36d6f3751bfa9cd80af88befd6a5be78c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292a0ef5295d7f2016e99d2c228958f7f6de94f5bd9652d8696af15af0094a99\",\"dweb:/ipfs/QmVg4fhkZbUB7AopGcaVPmTdvChq7W9ga8fjrc3XaJNTM2\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xdf580eafa015b81bde436d6a5468cc92b531ada84007cef885e923f6dfc5e8bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99f0060626568619ac94d750eb4c0888d92ca5775a6bd957fef9847843835b77\",\"dweb:/ipfs/QmXJer3D9sTkEj3mmUDqpdqfGpe46Rn9G22nGrfZdP2wAT\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3b0423737e810dd886183ed32cfed9b45edd315f5fb3e1076fc19f86791adc64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c43081efaa2eda581b6249053281bb58cb0c4eeb6bf87efc55d95daaec2fc931\",\"dweb:/ipfs/QmXRN2JnyzWZNeFMHauTnDuc7jhxGY4ZkY37HTtjXKdC87\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xee493ae200b8c675bdc0da66f7ac6bb883ecea33672d7d0a95526b9eecdedf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://979784a0333ac4ef3cc53ab9323a4b7fa574d929bd511f0eed03d3b0370db22d\",\"dweb:/ipfs/QmeiciN5gs4upM6vfKvrRxWiDBUzMU4uJQRRkJajhim9gX\"]},\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x6be37abc0760d60a41124e2e3f46185a0d3df48b32bd73174790981f76fbdae8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c144ba15a63883c7da41fc0729a46108f7d5487dbac2da0bde00aed67f5a2f00\",\"dweb:/ipfs/Qmdh7MzQmCQLh7wz719xMuG2yvMUkKDVwyN44P7pLofJfS\"]},\"@account-abstraction/contracts/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0x677f651d733162b80d1af7901e4f36469e362737a8353d1d0cc7bb94489e4ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6905a80acd70b444ea230b5b582164cb99aaae518bf72c88f8292df31615570\",\"dweb:/ipfs/QmfTKTPwJYf9pmA3T5PE5cCG8GLLDrLaq3jQqMP3pVRL6w\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xe48e904fcac02295aad07fbfa1c1d449a74bf44c04e432afef6f34d1ef726ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5882b635ea6f5da9ae411485975888431de571f85d4baf35e3db1a83c1f14b85\",\"dweb:/ipfs/QmVSTX36Byr48y8JBmz1hCTGAAyQdTYegQbsSqdRNuSQYz\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2c9d517f0c136d54bd00cd57959d25681d4d6273f5bbbc263afe228303772f0\",\"dweb:/ipfs/QmReNFjXBiufByiAAzfSQ2SM5r3qeUErn46BmN3yVRvrek\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/FixedRatePaymaster.sol\":{\"keccak256\":\"0x42715e20f3fcb1285f1da29365659ce97986a74fe0af87fd39a35875636019ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72084fa10449ab4fa239a2125fe88303c8722502da42ea377260d9ea7db56b95\",\"dweb:/ipfs/QmfCzT4vCcWrTtwXVBECqbGqVT2Vasbi3kqpAGotjAv9QU\"]}},\"version\":1}"}}}}}